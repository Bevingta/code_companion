<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-0880</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="OnMsgCreate">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="local_fd">
  <data key="d3">Variable</data>
</node>
<node id="size">
  <data key="d3">Variable</data>
</node>
<node id="set_null_shmem">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_shmem">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetHostResource">
  <data key="d3">FunctionCall</data>
</node>
<node id="trusted_buffer">
  <data key="d3">FunctionCall</data>
</node>
<node id="defined">
  <data key="d3">FunctionCall</data>
</node>
<node id="enter">
  <data key="d3">FunctionCall</data>
</node>
<node id="functions">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetForInstance">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dispatcher</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">enter.failed(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">local_buffer_resource == 0</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">trusted_buffer.failed(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">trusted_buffer.object(</data>
</node>
<edge source="OnMsgCreate" target="local_fd">
  <data key="d5">declares</data>
</edge>
<edge source="OnMsgCreate" target="size">
  <data key="d5">declares</data>
</edge>
<edge source="OnMsgCreate" target="set_null_shmem">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="set_shmem">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="SetHostResource">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="trusted_buffer">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="defined">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="enter">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="functions">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="GetForInstance">
  <data key="d5">calls</data>
</edge>
<edge source="OnMsgCreate" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="OnMsgCreate" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="OnMsgCreate" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="OnMsgCreate" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="OnMsgCreate" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="size" target="OnMsgCreate">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>