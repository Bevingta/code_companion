<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-10375</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="queue_push">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="n_begin">
  <data key="d4">Variable</data>
</node>
<node id="q_length">
  <data key="d4">Variable</data>
</node>
<node id="begin_length">
  <data key="d4">Variable</data>
</node>
<node id="extra_length">
  <data key="d4">Variable</data>
</node>
<node id="const">
  <data key="d4">Variable</data>
</node>
<node id="memory_length">
  <data key="d4">Variable</data>
</node>
<node id="tail_len">
  <data key="d4">Variable</data>
</node>
<node id="cp">
  <data key="d4">Variable</data>
</node>
<node id="available_length">
  <data key="d4">Variable</data>
</node>
<node id="free">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="new_memory">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!extra_length</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">message_show(MSG_INFO</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">extra_length &gt; available_length</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">message_show(MSG_INFO</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">qp-&gt;d_read &gt; qp-&gt;d_write</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">extra_length &gt; begin_length</data>
</node>
<edge source="queue_push" target="n_begin">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="q_length">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="begin_length">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="extra_length">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="const">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="memory_length">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="tail_len">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="cp">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="available_length">
  <data key="d6">declares</data>
</edge>
<edge source="queue_push" target="free">
  <data key="d6">calls</data>
</edge>
<edge source="queue_push" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="queue_push" target="new_memory">
  <data key="d6">calls</data>
</edge>
<edge source="queue_push" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="queue_push" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="queue_push" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="queue_push" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="queue_push" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="queue_push" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="q_length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="q_length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="q_length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="q_length" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="q_length" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="begin_length" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extra_length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extra_length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extra_length" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extra_length" target="queue_push">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="extra_length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="const" target="queue_push">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memory_length" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memory_length" target="new_memory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memory_length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="memory_length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="memory_length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tail_len" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tail_len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tail_len" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tail_len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tail_len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tail_len" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cp" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cp" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="available_length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="available_length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="available_length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>