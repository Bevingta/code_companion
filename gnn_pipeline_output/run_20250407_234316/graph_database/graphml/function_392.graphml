<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-0290</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="__skb_recv_datagram">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="off">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="error">
  <data key="d3">Variable</data>
</node>
<node id="int">
  <data key="d3">Variable</data>
</node>
<node id="timeo">
  <data key="d3">Variable</data>
</node>
<node id="skb">
  <data key="d3">Variable</data>
</node>
<node id="peeked">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="cpu_flags">
  <data key="d3">Variable</data>
</node>
<node id="queue">
  <data key="d3">Variable</data>
</node>
<node id="skb_recv_datagram">
  <data key="d3">FunctionCall</data>
</node>
<node id="skb_queue_walk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_rcvtimeo">
  <data key="d3">FunctionCall</data>
</node>
<node id="atomic_inc">
  <data key="d3">FunctionCall</data>
</node>
<node id="__skb_unlink">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock_irqrestore">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_lock_irqsave">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">error</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">flags &amp; MSG_PEEK</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">*off &gt;= skb-&gt;len</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!timeo</data>
</node>
<node id="while_4">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">!wait_for_packet(sk, err, &amp;timeo</data>
</node>
<edge source="__skb_recv_datagram" target="off">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="error">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="int">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="timeo">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="skb">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="peeked">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="cpu_flags">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="queue">
  <data key="d5">declares</data>
</edge>
<edge source="__skb_recv_datagram" target="skb_recv_datagram">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="skb_queue_walk">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="sock_rcvtimeo">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="atomic_inc">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="__skb_unlink">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="spin_unlock_irqrestore">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="spin_lock_irqsave">
  <data key="d5">calls</data>
</edge>
<edge source="__skb_recv_datagram" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="__skb_recv_datagram" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="__skb_recv_datagram" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="__skb_recv_datagram" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="__skb_recv_datagram" target="while_4">
  <data key="d5">contains</data>
</edge>
<edge source="off" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="off" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="off" target="__skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="off" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="off" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="while_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="__skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="error" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="int" target="__skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="timeo" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="timeo" target="while_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="timeo" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="skb" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="skb" target="skb_queue_walk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="atomic_inc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="skb" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="peeked" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="peeked" target="__skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="peeked" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="peeked" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="while_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_queue_walk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="__skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_rcvtimeo">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="atomic_inc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cpu_flags" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cpu_flags" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cpu_flags" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="queue" target="skb_queue_walk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>