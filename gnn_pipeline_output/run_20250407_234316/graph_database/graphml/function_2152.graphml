<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-0758</data>
<data key="d2">7.2</data>
<data key="d3">HIGH</data>
<node id="asn1_find_indefinite_length">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="dp">
  <data key="d4">Variable</data>
</node>
<node id="indef_level">
  <data key="d4">Variable</data>
</node>
<node id="_len">
  <data key="d4">Variable</data>
</node>
<node id="datalen">
  <data key="d4">Variable</data>
</node>
<node id="_dp">
  <data key="d4">Variable</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(datalen - dp &lt; 2</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">datalen == dp</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tag == 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">data[dp++] != 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">--indef_level &lt;= 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely((tag &amp; 0x1f</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(datalen - dp &lt; 2</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len &lt;= 0x7f</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(len == ASN1_INDEFINITE_LENGTH</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely((tag &amp; ASN1_CONS_BIT</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(n &gt; sizeof(size_t</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(n &gt; datalen - dp</data>
</node>
<node id="for_12">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">len = 0; n &gt; 0; n--</data>
</node>
<node id="while_13">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tmp &amp; 0x80</data>
</node>
<edge source="asn1_find_indefinite_length" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="dp">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="indef_level">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="_len">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="datalen">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="_dp">
  <data key="d6">declares</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="for_12">
  <data key="d6">contains</data>
</edge>
<edge source="asn1_find_indefinite_length" target="while_13">
  <data key="d6">contains</data>
</edge>
<edge source="char" target="asn1_find_indefinite_length">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dp" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="asn1_find_indefinite_length">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="for_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dp" target="while_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indef_level" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="indef_level" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indef_level" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indef_level" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_len" target="asn1_find_indefinite_length">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="_len" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_len" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datalen" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datalen" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="datalen" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="datalen" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="datalen" target="asn1_find_indefinite_length">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="datalen" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_dp" target="asn1_find_indefinite_length">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="_dp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_dp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_dp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="_dp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>