<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-5156</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="AttachFilteredEvent">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="id">
  <data key="d4">Variable</data>
</node>
<node id="filter_value">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetReturnValue">
  <data key="d4">FunctionCall</data>
</node>
<node id="Get">
  <data key="d4">FunctionCall</data>
</node>
<node id="insert">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="From">
  <data key="d4">FunctionCall</data>
</node>
<node id="get">
  <data key="d4">FunctionCall</data>
</node>
<node id="Utf8Value">
  <data key="d4">FunctionCall</data>
</node>
<node id="context">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="converter">
  <data key="d4">FunctionCall</data>
</node>
<node id="IsContextForEventPage">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!context(</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!filter_value || !filter_value-&gt;IsType(base::Value::TYPE_DICTIONARY</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AddFilter(event_name, extension_id, *filter_weak</data>
</node>
<edge source="AttachFilteredEvent" target="id">
  <data key="d6">declares</data>
</edge>
<edge source="AttachFilteredEvent" target="filter_value">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="GetReturnValue">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="Get">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="insert">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="CHECK">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="From">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="get">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="Utf8Value">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="context">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="CHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="converter">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="IsContextForEventPage">
  <data key="d6">calls</data>
</edge>
<edge source="AttachFilteredEvent" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="AttachFilteredEvent" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="AttachFilteredEvent" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="id" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="id" target="insert">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>