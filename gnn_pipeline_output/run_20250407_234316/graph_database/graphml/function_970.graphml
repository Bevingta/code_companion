<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9992</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="decode_dds1">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="frame_end">
  <data key="d4">Variable</data>
</node>
<node id="height">
  <data key="d4">Variable</data>
</node>
<node id="mask">
  <data key="d4">Variable</data>
</node>
<node id="frame">
  <data key="d4">Variable</data>
</node>
<node id="width">
  <data key="d4">Variable</data>
</node>
<node id="frame_start">
  <data key="d4">Variable</data>
</node>
<node id="bytestream2_get_le16">
  <data key="d4">FunctionCall</data>
</node>
<node id="bytestream2_get_le16u">
  <data key="d4">FunctionCall</data>
</node>
<node id="bytestream2_get_byte">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytestream2_get_bytes_left(gb</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mask == 0x10000</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bitbuf &amp; mask</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">frame - frame_start &lt; offset || frame_end - frame &lt; count*2 + width</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bitbuf &amp; (mask &lt;&lt; 1</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">frame - frame_end &lt; v</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">frame_end - frame &lt; width + 3</data>
</node>
<node id="for_7">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; count; i++</data>
</node>
<node id="while_8">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">segments--</data>
</node>
<edge source="decode_dds1" target="frame_end">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="height">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="mask">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="frame">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="width">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="frame_start">
  <data key="d6">declares</data>
</edge>
<edge source="decode_dds1" target="bytestream2_get_le16">
  <data key="d6">calls</data>
</edge>
<edge source="decode_dds1" target="bytestream2_get_le16u">
  <data key="d6">calls</data>
</edge>
<edge source="decode_dds1" target="bytestream2_get_byte">
  <data key="d6">calls</data>
</edge>
<edge source="decode_dds1" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="for_7">
  <data key="d6">contains</data>
</edge>
<edge source="decode_dds1" target="while_8">
  <data key="d6">contains</data>
</edge>
<edge source="frame_end" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="frame_end" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame_end" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="frame_end" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame_end" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame_end" target="while_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="height" target="decode_dds1">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mask" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mask" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mask" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mask" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mask" target="while_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="frame" target="decode_dds1">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="frame" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame" target="while_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="width" target="decode_dds1">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="width" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="while_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame_start" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="frame_start" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="frame_start" target="while_8">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>