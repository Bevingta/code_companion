<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2012-6647</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="futex_wait_requeue_pi">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="rt_waiter">
  <data key="d3">Variable</data>
</node>
<node id="q">
  <data key="d3">Variable</data>
</node>
<node id="int">
  <data key="d3">Variable</data>
</node>
<node id="abs_time">
  <data key="d3">Variable</data>
</node>
<node id="pi_mutex">
  <data key="d3">Variable</data>
</node>
<node id="hb">
  <data key="d3">Variable</data>
</node>
<node id="spin_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="get_futex_key">
  <data key="d3">FunctionCall</data>
</node>
<node id="hrtimer_init_on_stack">
  <data key="d3">FunctionCall</data>
</node>
<node id="hrtimer_set_expires_range_ns">
  <data key="d3">FunctionCall</data>
</node>
<node id="futex_lock_pi">
  <data key="d3">FunctionCall</data>
</node>
<node id="key">
  <data key="d3">FunctionCall</data>
</node>
<node id="futex_requeue">
  <data key="d3">FunctionCall</data>
</node>
<node id="futex_unlock_pi">
  <data key="d3">FunctionCall</data>
</node>
<node id="hrtimer_init_sleeper">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="handle_early_requeue_pi_wakeup">
  <data key="d3">FunctionCall</data>
</node>
<node id="hrtimer_cancel">
  <data key="d3">FunctionCall</data>
</node>
<node id="fixup_owner">
  <data key="d3">FunctionCall</data>
</node>
<node id="rt_mutex_finish_proxy_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="put_futex_key">
  <data key="d3">FunctionCall</data>
</node>
<node id="debug_rt_mutex_free_waiter">
  <data key="d3">FunctionCall</data>
</node>
<node id="destroy_hrtimer_on_stack">
  <data key="d3">FunctionCall</data>
</node>
<node id="fixup_pi_state_owner">
  <data key="d3">FunctionCall</data>
</node>
<node id="unqueue_me_pi">
  <data key="d3">FunctionCall</data>
</node>
<node id="debug_rt_mutex_init_waiter">
  <data key="d3">FunctionCall</data>
</node>
<node id="futex_wait_queue_me">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!bitset</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">abs_time</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">unlikely(ret != 0</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!q.rt_waiter</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">q.pi_state &amp;&amp; (q.pi_state-&gt;owner != current</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">res</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret == -EFAULT</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pi_mutex &amp;&amp; rt_mutex_owner(pi_mutex</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret == -EINTR</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">to</data>
</node>
<edge source="futex_wait_requeue_pi" target="rt_waiter">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="q">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="int">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="abs_time">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="pi_mutex">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="hb">
  <data key="d5">declares</data>
</edge>
<edge source="futex_wait_requeue_pi" target="spin_lock">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="get_futex_key">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="hrtimer_init_on_stack">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="hrtimer_set_expires_range_ns">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="futex_lock_pi">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="key">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="futex_requeue">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="futex_unlock_pi">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="hrtimer_init_sleeper">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="spin_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="handle_early_requeue_pi_wakeup">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="hrtimer_cancel">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="fixup_owner">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="rt_mutex_finish_proxy_lock">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="put_futex_key">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="debug_rt_mutex_free_waiter">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="destroy_hrtimer_on_stack">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="fixup_pi_state_owner">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="unqueue_me_pi">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="debug_rt_mutex_init_waiter">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="futex_wait_queue_me">
  <data key="d5">calls</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="futex_wait_requeue_pi" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="rt_waiter" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rt_waiter" target="rt_mutex_finish_proxy_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rt_waiter" target="debug_rt_mutex_free_waiter">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rt_waiter" target="debug_rt_mutex_init_waiter">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="q" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="q" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="int" target="futex_wait_requeue_pi">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="abs_time" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="abs_time" target="hrtimer_set_expires_range_ns">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="abs_time" target="futex_wait_requeue_pi">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="abs_time" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pi_mutex" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pi_mutex" target="rt_mutex_finish_proxy_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pi_mutex" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pi_mutex" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hb" target="spin_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hb" target="spin_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hb" target="handle_early_requeue_pi_wakeup">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hb" target="futex_wait_queue_me">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>