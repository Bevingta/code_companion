<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2014-9140</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="ppp_hdlc">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="se">
  <data key="d5">Variable</data>
</node>
<node id="length">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="ip_print">
  <data key="d5">FunctionCall</data>
</node>
<node id="EXTRACT_16BITS">
  <data key="d5">FunctionCall</data>
</node>
<node id="ND_PRINT">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="handle_ppp">
  <data key="d5">FunctionCall</data>
</node>
<node id="case">
  <data key="d5">FunctionCall</data>
</node>
<node id="ip6_print">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length &lt;= 0</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">b == NULL</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c == 0x7d</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">i &gt; 1</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length &lt; 1</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length &lt; 2</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length &lt; 4</data>
</node>
<node id="for_7">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">s = (u_char *</data>
</node>
<node id="switch_8">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">proto</data>
</node>
<node id="switch_9">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">proto</data>
</node>
<edge source="ppp_hdlc" target="se">
  <data key="d7">declares</data>
</edge>
<edge source="ppp_hdlc" target="length">
  <data key="d7">declares</data>
</edge>
<edge source="ppp_hdlc" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="ppp_hdlc" target="ip_print">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="EXTRACT_16BITS">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="ND_PRINT">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="handle_ppp">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="case">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="ip6_print">
  <data key="d7">calls</data>
</edge>
<edge source="ppp_hdlc" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="for_7">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="switch_8">
  <data key="d7">contains</data>
</edge>
<edge source="ppp_hdlc" target="switch_9">
  <data key="d7">contains</data>
</edge>
<edge source="se" target="ppp_hdlc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="ip_print">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="malloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="handle_ppp">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="ppp_hdlc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="ip6_print">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="switch_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="switch_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="switch_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_9">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>