<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="format_string_vulnerability" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-3754</data>
<data key="d3">7.8</data>
<data key="d4">HIGH</data>
<node id="main">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="argc">
  <data key="d5">Variable</data>
</node>
<node id="usage">
  <data key="d5">Variable</data>
</node>
<node id="code">
  <data key="d5">Variable</data>
</node>
<node id="ret">
  <data key="d5">Variable</data>
</node>
<node id="childPid">
  <data key="d5">Variable</data>
</node>
<node id="buffer">
  <data key="d5">Variable</data>
</node>
<node id="info">
  <data key="d5">Variable</data>
</node>
<node id="value">
  <data key="d5">Variable</data>
</node>
<node id="registerExtensions">
  <data key="d5">FunctionCall</data>
</node>
<node id="waitid">
  <data key="d5">FunctionCall</data>
</node>
<node id="setpgid">
  <data key="d5">FunctionCall</data>
</node>
<node id="getrusage">
  <data key="d5">FunctionCall</data>
</node>
<node id="dump">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOGI">
  <data key="d5">FunctionCall</data>
</node>
<node id="signal">
  <data key="d5">FunctionCall</data>
</node>
<node id="self">
  <data key="d5">FunctionCall</data>
</node>
<node id="defaultServiceManager">
  <data key="d5">FunctionCall</data>
</node>
<node id="_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="snprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOG">
  <data key="d5">FunctionCall</data>
</node>
<node id="property_get">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="prctl">
  <data key="d5">FunctionCall</data>
</node>
<node id="proc">
  <data key="d5">FunctionCall</data>
</node>
<node id="getService">
  <data key="d5">FunctionCall</data>
</node>
<node id="instantiate">
  <data key="d5">FunctionCall</data>
</node>
<node id="InitializeIcuOrDie">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">doLog &amp;&amp; (childPid = fork(</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == EINTR</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret &lt; 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">binder != 0</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">doLog</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">;;</data>
</node>
<node id="switch_6">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">info.si_code</data>
</node>
<node id="switch_7">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">info.si_code</data>
</node>
<edge source="main" target="argc">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="usage">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="code">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="ret">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="childPid">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="buffer">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="info">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="value">
  <data key="d7">declares</data>
</edge>
<edge source="main" target="registerExtensions">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="waitid">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="setpgid">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="getrusage">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="dump">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="ALOGI">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="signal">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="self">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="defaultServiceManager">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="_exit">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="snprintf">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="ALOG">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="property_get">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="strcpy">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="prctl">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="proc">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="getService">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="instantiate">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="InitializeIcuOrDie">
  <data key="d7">calls</data>
</edge>
<edge source="main" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="switch_6">
  <data key="d7">contains</data>
</edge>
<edge source="main" target="switch_7">
  <data key="d7">contains</data>
</edge>
<edge source="argc" target="main">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="usage" target="getrusage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="usage" target="ALOG">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="usage" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="usage" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="code" target="switch_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="code" target="switch_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="code" target="ALOG">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="code" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="code" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ret" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="childPid" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="childPid" target="waitid">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="childPid" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="snprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buffer" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="switch_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="switch_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="switch_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="waitid">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="ALOG">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="value" target="property_get">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>