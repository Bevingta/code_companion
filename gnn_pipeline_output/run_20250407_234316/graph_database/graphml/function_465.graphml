<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2014-3186</data>
<data key="d1">6.9</data>
<data key="d2">MEDIUM</data>
<node id="picolcd_raw_event">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d3">Variable</data>
</node>
<node id="report">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="data">
  <data key="d3">Variable</data>
</node>
<node id="hdev">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="complete">
  <data key="d3">FunctionCall</data>
</node>
<node id="picolcd_send_and_wait">
  <data key="d3">FunctionCall</data>
</node>
<node id="picolcd_debug_raw_event">
  <data key="d3">FunctionCall</data>
</node>
<node id="picolcd_raw_cir">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock_irqrestore">
  <data key="d3">FunctionCall</data>
</node>
<node id="hid_get_drvdata">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_lock_irqsave">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!data</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">report-&gt;id == REPORT_KEY_STATE</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">data-&gt;input_keys</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">report-&gt;id == REPORT_IR_DATA</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">data-&gt;pending</data>
</node>
<edge source="picolcd_raw_event" target="size">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="report">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="data">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="hdev">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="picolcd_raw_event" target="complete">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="picolcd_send_and_wait">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="picolcd_debug_raw_event">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="picolcd_raw_cir">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="spin_unlock_irqrestore">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="hid_get_drvdata">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="spin_lock_irqsave">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="picolcd_raw_event" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="picolcd_raw_event" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="picolcd_raw_event" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="picolcd_raw_event" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="picolcd_raw_event" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="size" target="picolcd_debug_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="picolcd_raw_cir">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="picolcd_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="report" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="report" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="report" target="picolcd_debug_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="report" target="picolcd_raw_cir">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="report" target="picolcd_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="report" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="report" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="report" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data" target="complete">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="picolcd_debug_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="picolcd_raw_cir">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="picolcd_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hdev" target="picolcd_debug_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hdev" target="picolcd_raw_event">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hdev" target="hid_get_drvdata">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>