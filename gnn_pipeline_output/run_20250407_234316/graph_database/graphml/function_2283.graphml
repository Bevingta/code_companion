<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-0843</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="Initialize">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="sample_rate">
  <data key="d4">Variable</data>
</node>
<node id="buffer_size">
  <data key="d4">Variable</data>
</node>
<node id="NewOutputDevice">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetSourceRenderView">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetAudioOutputSampleRate">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetRenderFormat">
  <data key="d4">FunctionCall</data>
</node>
<node id="DVLOG">
  <data key="d4">FunctionCall</data>
</node>
<node id="defined">
  <data key="d4">FunctionCall</data>
</node>
<node id="Start">
  <data key="d4">FunctionCall</data>
</node>
<node id="DCHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="DCHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="DLOG">
  <data key="d4">FunctionCall</data>
</node>
<node id="UMA_HISTOGRAM_ENUMERATION">
  <data key="d4">FunctionCall</data>
</node>
<node id="Reset">
  <data key="d4">FunctionCall</data>
</node>
<node id="AddHistogramFramesPerBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="auto_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="reset">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">std::find(&amp;kValidOutputRates[0],
                &amp;kValidOutputRates[0] + arraysize(kValidOutputRates</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample_rate == 96000 || sample_rate == 48000</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base::win::GetVersion(</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample_rate == 48000</data>
</node>
<edge source="Initialize" target="sample_rate">
  <data key="d6">declares</data>
</edge>
<edge source="Initialize" target="buffer_size">
  <data key="d6">declares</data>
</edge>
<edge source="Initialize" target="NewOutputDevice">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="SetSourceRenderView">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="GetAudioOutputSampleRate">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="SetRenderFormat">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="DVLOG">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="defined">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="Start">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="DCHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="DCHECK">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="DLOG">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="UMA_HISTOGRAM_ENUMERATION">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="Reset">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="AddHistogramFramesPerBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="auto_lock">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="reset">
  <data key="d6">calls</data>
</edge>
<edge source="Initialize" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="Initialize" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="Initialize" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="Initialize" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="sample_rate" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample_rate" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sample_rate" target="UMA_HISTOGRAM_ENUMERATION">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sample_rate" target="Reset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sample_rate" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buffer_size" target="UMA_HISTOGRAM_ENUMERATION">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buffer_size" target="Reset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buffer_size" target="AddHistogramFramesPerBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buffer_size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buffer_size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buffer_size" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>