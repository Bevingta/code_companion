<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-6905</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="read_image_tga">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="encoded_pixels">
  <data key="d5">Variable</data>
</node>
<node id="j">
  <data key="d5">Variable</data>
</node>
<node id="buffer_caret">
  <data key="d5">Variable</data>
</node>
<node id="pixel_block_size">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="image_block_size">
  <data key="d5">Variable</data>
</node>
<node id="bitmap_caret">
  <data key="d5">Variable</data>
</node>
<node id="gdFree">
  <data key="d5">FunctionCall</data>
</node>
<node id="gd_error">
  <data key="d5">FunctionCall</data>
</node>
<node id="gdMalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">overflow2(tga-&gt;width, tga-&gt;height</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">overflow2(tga-&gt;width * tga-&gt;height, pixel_block_size</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">overflow2(image_block_size, sizeof(int</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">tga-&gt;imagetype != TGA_TYPE_RGB &amp;&amp; tga-&gt;imagetype != TGA_TYPE_RGB_RLE</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">tga-&gt;bitmap == NULL</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">conversion_buffer == NULL</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gdGetBuf(conversion_buffer, image_block_size, ctx</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">decompression_buffer == NULL</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">conversion_buffer == NULL</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gdGetBuf(conversion_buffer, image_block_size, ctx</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(decompression_buffer[buffer_caret] &amp; TGA_RLE_FLAG</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">encoded_pixels != 0</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!((buffer_caret + (encoded_pixels * pixel_block_size</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">encoded_pixels != 0</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!((buffer_caret + (encoded_pixels * pixel_block_size</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; encoded_pixels; i++</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j = 0; j &lt; pixel_block_size; j++, bitmap_caret++</data>
</node>
<node id="for_17">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; encoded_pixels; i++</data>
</node>
<node id="for_18">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> j = 0; j &lt; pixel_block_size; j++, bitmap_caret++ </data>
</node>
<node id="while_19">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">buffer_caret &lt; image_block_size</data>
</node>
<node id="while_20">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> buffer_caret &lt; image_block_size</data>
</node>
<node id="while_21">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> bitmap_caret &lt; image_block_size </data>
</node>
<node id="switch_22">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">tga-&gt;imagetype</data>
</node>
<edge source="read_image_tga" target="encoded_pixels">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="j">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="buffer_caret">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="pixel_block_size">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="image_block_size">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="bitmap_caret">
  <data key="d7">declares</data>
</edge>
<edge source="read_image_tga" target="gdFree">
  <data key="d7">calls</data>
</edge>
<edge source="read_image_tga" target="gd_error">
  <data key="d7">calls</data>
</edge>
<edge source="read_image_tga" target="gdMalloc">
  <data key="d7">calls</data>
</edge>
<edge source="read_image_tga" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="for_17">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="for_18">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="while_19">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="while_20">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="while_21">
  <data key="d7">contains</data>
</edge>
<edge source="read_image_tga" target="switch_22">
  <data key="d7">contains</data>
</edge>
<edge source="encoded_pixels" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="encoded_pixels" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="encoded_pixels" target="for_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="encoded_pixels" target="for_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="encoded_pixels" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="while_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="encoded_pixels" target="switch_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="j" target="for_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="j" target="for_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buffer_caret" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buffer_caret" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buffer_caret" target="while_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="while_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="for_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="while_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_caret" target="switch_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pixel_block_size" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pixel_block_size" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pixel_block_size" target="for_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pixel_block_size" target="for_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pixel_block_size" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="while_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixel_block_size" target="switch_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="switch_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="while_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="while_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="image_block_size" target="while_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="gdMalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="image_block_size" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="image_block_size" target="switch_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="for_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="while_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bitmap_caret" target="switch_22">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>