<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-18238</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="ParseCachedBoxes">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="valueLen">
  <data key="d3">Variable</data>
</node>
<node id="push_back">
  <data key="d3">FunctionCall</data>
</node>
<node id="insert">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetUns16BE">
  <data key="d3">FunctionCall</data>
</node>
<node id="back">
  <data key="d3">FunctionCall</data>
</node>
<node id="assign">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetBox">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetNthChild">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> udtaRef == 0 </data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> currRef == 0 </data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> (currInfo.boxType &gt;&gt; 24</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> currInfo.contentSize &lt; 2+2+1 </data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> (miniLen &lt;= 4</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> IsMacLangKnown ( macLang </data>
</node>
<node id="for_6">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> XMP_Uns32 i = 0; i &lt; udtaInfo.childCount; ++i </data>
</node>
<node id="for_7">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> ; boxPtr &lt; boxEnd-4; boxPtr += miniLen </data>
</node>
<edge source="ParseCachedBoxes" target="valueLen">
  <data key="d5">declares</data>
</edge>
<edge source="ParseCachedBoxes" target="push_back">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="insert">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="GetUns16BE">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="back">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="assign">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="GetBox">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="GetNthChild">
  <data key="d5">calls</data>
</edge>
<edge source="ParseCachedBoxes" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="for_6">
  <data key="d5">contains</data>
</edge>
<edge source="ParseCachedBoxes" target="for_7">
  <data key="d5">contains</data>
</edge>
<edge source="valueLen" target="assign">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="valueLen" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valueLen" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valueLen" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valueLen" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valueLen" target="for_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valueLen" target="for_7">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>