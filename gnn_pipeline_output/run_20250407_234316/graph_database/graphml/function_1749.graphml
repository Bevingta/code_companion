<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-2857</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="updateFromElement">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="request">
  <data key="d3">FunctionCall</data>
</node>
<node id="dispatchEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="equalIgnoringCase">
  <data key="d3">FunctionCall</data>
</node>
<node id="cachedResourceLoader">
  <data key="d3">FunctionCall</data>
</node>
<node id="document">
  <data key="d3">FunctionCall</data>
</node>
<node id="imageSourceURL">
  <data key="d3">FunctionCall</data>
</node>
<node id="addClient">
  <data key="d3">FunctionCall</data>
</node>
<node id="setLoading">
  <data key="d3">FunctionCall</data>
</node>
<node id="clearFailedLoadURL">
  <data key="d3">FunctionCall</data>
</node>
<node id="get">
  <data key="d3">FunctionCall</data>
</node>
<node id="setOwningCachedResourceLoader">
  <data key="d3">FunctionCall</data>
</node>
<node id="updateRequestForAccessControl">
  <data key="d3">FunctionCall</data>
</node>
<node id="fastGetAttribute">
  <data key="d3">FunctionCall</data>
</node>
<node id="updateRenderer">
  <data key="d3">FunctionCall</data>
</node>
<node id="beforeLoadEventSender">
  <data key="d3">FunctionCall</data>
</node>
<node id="setInitiator">
  <data key="d3">FunctionCall</data>
</node>
<node id="updatedHasPendingEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="errorEventSender">
  <data key="d3">FunctionCall</data>
</node>
<node id="loadEventSender">
  <data key="d3">FunctionCall</data>
</node>
<node id="CachedImage">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!document-&gt;renderer(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">attr == m_failedLoadURL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!attr.isNull(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!crossOriginMode.isNull(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_loadManually</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!newImage &amp;&amp; !pageIsBeingDismissed(document</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!attr.isNull(</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newImage != oldImage</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_hasPendingBeforeLoadEvent</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_hasPendingLoadEvent</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_hasPendingErrorEvent &amp;&amp; newImage</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newImage</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!m_element-&gt;document(</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!m_element-&gt;document(</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">oldImage</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">RenderImageResource* imageResource = renderImageResource(</data>
</node>
<edge source="updateFromElement" target="request">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="dispatchEvent">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="equalIgnoringCase">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="cachedResourceLoader">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="document">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="imageSourceURL">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="addClient">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="setLoading">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="clearFailedLoadURL">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="get">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="setOwningCachedResourceLoader">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="updateRequestForAccessControl">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="fastGetAttribute">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="updateRenderer">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="beforeLoadEventSender">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="setInitiator">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="updatedHasPendingEvent">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="errorEventSender">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="loadEventSender">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="CachedImage">
  <data key="d5">calls</data>
</edge>
<edge source="updateFromElement" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="updateFromElement" target="if_15">
  <data key="d5">contains</data>
</edge>
</graph></graphml>