<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9995</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="decompress_i">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="dst">
  <data key="d4">Variable</data>
</node>
<node id="cx">
  <data key="d4">Variable</data>
</node>
<node id="linesize">
  <data key="d4">Variable</data>
</node>
<node id="cxshift">
  <data key="d4">Variable</data>
</node>
<node id="odst">
  <data key="d4">Variable</data>
</node>
<node id="backstep">
  <data key="d4">Variable</data>
</node>
<node id="decode_value">
  <data key="d4">FunctionCall</data>
</node>
<node id="reinit_tables">
  <data key="d4">FunctionCall</data>
</node>
<node id="bytestream2_skip">
  <data key="d4">FunctionCall</data>
</node>
<node id="decode_unit">
  <data key="d4">FunctionCall</data>
</node>
<node id="init_rangecoder">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptype == 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptype &gt; 5</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &gt;= avctx-&gt;height</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &gt;= avctx-&gt;height</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &lt; 1 || y &gt;= avctx-&gt;height</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &lt; 1 || y &gt;= avctx-&gt;height ||
                    (y == 1 &amp;&amp; x == 0</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x == 0</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &lt; 1 || y &gt;= avctx-&gt;height ||
                    (y == 1 &amp;&amp; x == 0</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x == 0</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &gt;= avctx-&gt;width</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avctx-&gt;bits_per_coded_sample == 16</data>
</node>
<node id="while_25">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">k &lt; avctx-&gt;width + 1</data>
</node>
<node id="while_26">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="while_27">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">x &lt; avctx-&gt;width &amp;&amp; y &lt; avctx-&gt;height</data>
</node>
<node id="while_28">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="while_29">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="while_30">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="while_31">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="while_32">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">run-- &gt; 0</data>
</node>
<node id="switch_33">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">ptype</data>
</node>
<edge source="decompress_i" target="dst">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="cx">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="linesize">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="cxshift">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="odst">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="backstep">
  <data key="d6">declares</data>
</edge>
<edge source="decompress_i" target="decode_value">
  <data key="d6">calls</data>
</edge>
<edge source="decompress_i" target="reinit_tables">
  <data key="d6">calls</data>
</edge>
<edge source="decompress_i" target="bytestream2_skip">
  <data key="d6">calls</data>
</edge>
<edge source="decompress_i" target="decode_unit">
  <data key="d6">calls</data>
</edge>
<edge source="decompress_i" target="init_rangecoder">
  <data key="d6">calls</data>
</edge>
<edge source="decompress_i" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_25">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_26">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_27">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_28">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_29">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_30">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_31">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="while_32">
  <data key="d6">contains</data>
</edge>
<edge source="decompress_i" target="switch_33">
  <data key="d6">contains</data>
</edge>
<edge source="dst" target="decompress_i">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dst" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cx" target="decode_unit">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cx" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cx" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cx" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cx" target="while_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cx" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="decompress_i">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="linesize" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="while_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="linesize" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cxshift" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cxshift" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cxshift" target="while_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cxshift" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="while_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odst" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="while_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="while_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="while_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backstep" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>