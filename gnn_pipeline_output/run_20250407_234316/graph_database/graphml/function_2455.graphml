<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-18120</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="read_gif">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="read_flags">
  <data key="d5">Variable</data>
</node>
<node id="unknown_block_type">
  <data key="d5">Variable</data>
</node>
<node id="block">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="Gif_NewArray">
  <data key="d5">FunctionCall</data>
</node>
<node id="gifgetbyte">
  <data key="d5">FunctionCall</data>
</node>
<node id="GIF_DEBUG">
  <data key="d5">FunctionCall</data>
</node>
<node id="read_graphic_control_extension">
  <data key="d5">FunctionCall</data>
</node>
<node id="Gif_DeleteImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="gifgetc">
  <data key="d5">FunctionCall</data>
</node>
<node id="Gif_NewStream">
  <data key="d5">FunctionCall</data>
</node>
<node id="read_unknown_extension">
  <data key="d5">FunctionCall</data>
</node>
<node id="Gif_DeleteArray">
  <data key="d5">FunctionCall</data>
</node>
<node id="Gif_RemoveImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="read_application_extension">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="Gif_NewImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="gif_read_error">
  <data key="d5">FunctionCall</data>
</node>
<node id="suck_data">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">Gif_Reader *grr, int read_flags,
	 const char* landmark, Gif_ReadErrorHandler handler</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gifgetc(grr</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!gfs || !gfi || !gfc.prefix || !gfc.suffix || !gfc.length</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!read_logical_screen_descriptor(gfs, grr</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!Gif_AddImage(gfs, gfi</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!read_image(grr, &amp;gfc, gfi, read_flags</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!gfi</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!read_comment_extension(gfi, grr</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!unknown_block_type</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gfs &amp;&amp; gfi</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gfs</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">gfs &amp;&amp; gfc.errors[1] == 0
      &amp;&amp; !(read_flags &amp; GIF_READ_TRAILING_GARBAGE_OK</data>
</node>
<node id="for_12">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">gfex = gfs-&gt;end_extension_list; gfex; gfex = gfex-&gt;next</data>
</node>
<node id="while_13">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">!gifeof(grr</data>
</node>
<node id="switch_14">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">block</data>
</node>
<node id="switch_15">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">block</data>
</node>
<edge source="read_gif" target="read_flags">
  <data key="d7">declares</data>
</edge>
<edge source="read_gif" target="unknown_block_type">
  <data key="d7">declares</data>
</edge>
<edge source="read_gif" target="block">
  <data key="d7">declares</data>
</edge>
<edge source="read_gif" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="read_gif" target="Gif_NewArray">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="gifgetbyte">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="GIF_DEBUG">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="read_graphic_control_extension">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="Gif_DeleteImage">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="gifgetc">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="Gif_NewStream">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="read_unknown_extension">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="Gif_DeleteArray">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="Gif_RemoveImage">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="read_application_extension">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="sprintf">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="Gif_NewImage">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="gif_read_error">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="suck_data">
  <data key="d7">calls</data>
</edge>
<edge source="read_gif" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="for_12">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="while_13">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="switch_14">
  <data key="d7">contains</data>
</edge>
<edge source="read_gif" target="switch_15">
  <data key="d7">contains</data>
</edge>
<edge source="read_flags" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="read_flags" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="read_flags" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="read_flags" target="read_gif">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="read_flags" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="read_flags" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="read_flags" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="read_flags" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="read_flags" target="switch_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="unknown_block_type" target="switch_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="switch_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="switch_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="read_unknown_extension">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="block" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="block" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="block" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="gif_read_error">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="switch_14">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>