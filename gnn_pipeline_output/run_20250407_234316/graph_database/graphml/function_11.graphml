<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2009-3605</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="drawImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="height">
  <data key="d5">Variable</data>
</node>
<node id="pix">
  <data key="d5">Variable</data>
</node>
<node id="width">
  <data key="d5">Variable</data>
</node>
<node id="maskColors">
  <data key="d5">Variable</data>
</node>
<node id="ctm">
  <data key="d5">Variable</data>
</node>
<node id="getCMYK">
  <data key="d5">FunctionCall</data>
</node>
<node id="getBits">
  <data key="d5">FunctionCall</data>
</node>
<node id="ImageStream">
  <data key="d5">FunctionCall</data>
</node>
<node id="gfree">
  <data key="d5">FunctionCall</data>
</node>
<node id="getLine">
  <data key="d5">FunctionCall</data>
</node>
<node id="colToByte">
  <data key="d5">FunctionCall</data>
</node>
<node id="getCTM">
  <data key="d5">FunctionCall</data>
</node>
<node id="gmallocn">
  <data key="d5">FunctionCall</data>
</node>
<node id="gmalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="getRGB">
  <data key="d5">FunctionCall</data>
</node>
<node id="getGray">
  <data key="d5">FunctionCall</data>
</node>
<node id="close">
  <data key="d5">FunctionCall</data>
</node>
<node id="reset">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">colorMap-&gt;getNumPixelComps(</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">colorMode == splashModeMono1</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">inlineImg</data>
</node>
<node id="for_3">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; n; ++i</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; n; ++i</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; n; ++i</data>
</node>
<node id="for_6">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; n; ++i</data>
</node>
<node id="while_7">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">imgData.y &lt; height</data>
</node>
<node id="switch_8">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">colorMode</data>
</node>
<edge source="drawImage" target="height">
  <data key="d7">declares</data>
</edge>
<edge source="drawImage" target="pix">
  <data key="d7">declares</data>
</edge>
<edge source="drawImage" target="width">
  <data key="d7">declares</data>
</edge>
<edge source="drawImage" target="maskColors">
  <data key="d7">declares</data>
</edge>
<edge source="drawImage" target="ctm">
  <data key="d7">declares</data>
</edge>
<edge source="drawImage" target="getCMYK">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="getBits">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="ImageStream">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="gfree">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="getLine">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="colToByte">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="getCTM">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="gmallocn">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="gmalloc">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="getRGB">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="getGray">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="close">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="reset">
  <data key="d7">calls</data>
</edge>
<edge source="drawImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="for_3">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="for_6">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="while_7">
  <data key="d7">contains</data>
</edge>
<edge source="drawImage" target="switch_8">
  <data key="d7">contains</data>
</edge>
<edge source="height" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="height" target="drawImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="height" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="getCMYK">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pix" target="getRGB">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pix" target="getGray">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pix" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pix" target="switch_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="ImageStream">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="width" target="drawImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="maskColors" target="drawImage">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>