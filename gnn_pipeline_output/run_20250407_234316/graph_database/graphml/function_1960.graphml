<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="format_string_vulnerability" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-2440</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="executeCommand">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="origStrictModePolicy">
  <data key="d4">Variable</data>
</node>
<node id="cmd">
  <data key="d4">Variable</data>
</node>
<node id="curPrio">
  <data key="d4">Variable</data>
</node>
<node id="error">
  <data key="d4">Variable</data>
</node>
<node id="origUid">
  <data key="d4">Variable</data>
</node>
<node id="origPid">
  <data key="d4">Variable</data>
</node>
<node id="origTransactionBinderFlags">
  <data key="d4">Variable</data>
</node>
<node id="result">
  <data key="d4">Variable</data>
</node>
<node id="incWeak">
  <data key="d4">FunctionCall</data>
</node>
<node id="getpriority">
  <data key="d4">FunctionCall</data>
</node>
<node id="getWeakRefs">
  <data key="d4">FunctionCall</data>
</node>
<node id="set_sched_policy">
  <data key="d4">FunctionCall</data>
</node>
<node id="IF_LOG_REMOTEREFS">
  <data key="d4">FunctionCall</data>
</node>
<node id="LOG_REMOTEREFS">
  <data key="d4">FunctionCall</data>
</node>
<node id="readInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="sendReply">
  <data key="d4">FunctionCall</data>
</node>
<node id="printf">
  <data key="d4">FunctionCall</data>
</node>
<node id="setpriority">
  <data key="d4">FunctionCall</data>
</node>
<node id="transact">
  <data key="d4">FunctionCall</data>
</node>
<node id="readPointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOG_ASSERT">
  <data key="d4">FunctionCall</data>
</node>
<node id="printRefs">
  <data key="d4">FunctionCall</data>
</node>
<node id="writePointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="read">
  <data key="d4">FunctionCall</data>
</node>
<node id="attemptIncStrong">
  <data key="d4">FunctionCall</data>
</node>
<node id="incStrong">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="spawnPooledThread">
  <data key="d4">FunctionCall</data>
</node>
<node id="IF_LOG_TRANSACTIONS">
  <data key="d4">FunctionCall</data>
</node>
<node id="pthread_self">
  <data key="d4">FunctionCall</data>
</node>
<node id="ipcSetDataReference">
  <data key="d4">FunctionCall</data>
</node>
<node id="_b">
  <data key="d4">FunctionCall</data>
</node>
<node id="sendObituary">
  <data key="d4">FunctionCall</data>
</node>
<node id="LOG_ONEWAY">
  <data key="d4">FunctionCall</data>
</node>
<node id="push">
  <data key="d4">FunctionCall</data>
</node>
<node id="b">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result != NO_ERROR</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">gDisableBackgroundScheduling</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curPrio &gt; ANDROID_PRIORITY_NORMAL</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curPrio &gt;= ANDROID_PRIORITY_BACKGROUND</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tr.target.ptr</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(tr.flags &amp; TF_ONE_WAY</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error &lt; NO_ERROR</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result != NO_ERROR</data>
</node>
<node id="switch_8">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">(uint32_t</data>
</node>
<edge source="executeCommand" target="origStrictModePolicy">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="cmd">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="curPrio">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="error">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="origUid">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="origPid">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="origTransactionBinderFlags">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="result">
  <data key="d6">declares</data>
</edge>
<edge source="executeCommand" target="incWeak">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="getpriority">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="getWeakRefs">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="set_sched_policy">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="IF_LOG_REMOTEREFS">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="LOG_REMOTEREFS">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="readInt32">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="sendReply">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="printf">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="setpriority">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="transact">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="readPointer">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="ALOG_ASSERT">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="printRefs">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="writePointer">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="read">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="attemptIncStrong">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="incStrong">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="writeInt32">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="spawnPooledThread">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="IF_LOG_TRANSACTIONS">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="pthread_self">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="ipcSetDataReference">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="_b">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="sendObituary">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="LOG_ONEWAY">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="push">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="b">
  <data key="d6">calls</data>
</edge>
<edge source="executeCommand" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="executeCommand" target="switch_8">
  <data key="d6">contains</data>
</edge>
<edge source="origStrictModePolicy" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="printf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cmd" target="executeCommand">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cmd" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="curPrio" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="curPrio" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="curPrio" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="curPrio" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="curPrio" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="error" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="origUid" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="origPid" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="origTransactionBinderFlags" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="result" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="result" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="result" target="ALOG_ASSERT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="result" target="switch_8">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>