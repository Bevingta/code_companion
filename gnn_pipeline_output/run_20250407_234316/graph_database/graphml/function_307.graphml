<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-6376</data>
<data key="d2">5.2</data>
<data key="d3">MEDIUM</data>
<node id="recalculate_apic_map">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="vcpu">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="kvm">
  <data key="d4">Variable</data>
</node>
<node id="apic">
  <data key="d4">Variable</data>
</node>
<node id="kvm_apic_id">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="kvm_vcpu_request_scan_ioapic">
  <data key="d4">FunctionCall</data>
</node>
<node id="kvm_for_each_vcpu">
  <data key="d4">FunctionCall</data>
</node>
<node id="kvm_apic_get_reg">
  <data key="d4">FunctionCall</data>
</node>
<node id="rcu_assign_pointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="apic_cluster_id">
  <data key="d4">FunctionCall</data>
</node>
<node id="rcu_dereference_protected">
  <data key="d4">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="apic_logical_id">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!new</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!kvm_apic_present(vcpu</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">apic_x2apic_mode(apic</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">kvm_apic_sw_enabled(apic</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">lid</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">old</data>
</node>
<edge source="recalculate_apic_map" target="vcpu">
  <data key="d6">declares</data>
</edge>
<edge source="recalculate_apic_map" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="recalculate_apic_map" target="kvm">
  <data key="d6">declares</data>
</edge>
<edge source="recalculate_apic_map" target="apic">
  <data key="d6">declares</data>
</edge>
<edge source="recalculate_apic_map" target="kvm_apic_id">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="mutex_lock">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="mutex_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="kvm_vcpu_request_scan_ioapic">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="kvm_for_each_vcpu">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="kvm_apic_get_reg">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="rcu_assign_pointer">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="apic_cluster_id">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="rcu_dereference_protected">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="kzalloc">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="apic_logical_id">
  <data key="d6">calls</data>
</edge>
<edge source="recalculate_apic_map" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="recalculate_apic_map" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="recalculate_apic_map" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="recalculate_apic_map" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="recalculate_apic_map" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="recalculate_apic_map" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vcpu" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vcpu" target="kvm_for_each_vcpu">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vcpu" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="kvm" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="kvm" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="kvm" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="kvm_vcpu_request_scan_ioapic">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="kvm_for_each_vcpu">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="rcu_assign_pointer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="recalculate_apic_map">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="rcu_dereference_protected">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="kvm" target="kzalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="apic" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="apic" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="apic" target="kvm_apic_id">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="kvm_apic_get_reg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="rcu_assign_pointer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="rcu_dereference_protected">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="kzalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="apic" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>