<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-15473</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="userauth_hostbased">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ssh">
  <data key="d3">Variable</data>
</node>
<node id="key">
  <data key="d3">Variable</data>
</node>
<node id="b">
  <data key="d3">Variable</data>
</node>
<node id="sshkey_froms">
  <data key="d3">FunctionCall</data>
</node>
<node id="sshkey_free">
  <data key="d3">FunctionCall</data>
</node>
<node id="auth2_record_key">
  <data key="d3">FunctionCall</data>
</node>
<node id="auth2_record_info">
  <data key="d3">FunctionCall</data>
</node>
<node id="free">
  <data key="d3">FunctionCall</data>
</node>
<node id="debug">
  <data key="d3">FunctionCall</data>
</node>
<node id="error">
  <data key="d3">FunctionCall</data>
</node>
<node id="sshbuf_dump">
  <data key="d3">FunctionCall</data>
</node>
<node id="sshbuf_free">
  <data key="d3">FunctionCall</data>
</node>
<node id="sshbuf_dump_data">
  <data key="d3">FunctionCall</data>
</node>
<node id="logit">
  <data key="d3">FunctionCall</data>
</node>
<node id="debug2">
  <data key="d3">FunctionCall</data>
</node>
<node id="sshkey_type_from_name">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!authctxt-&gt;valid</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(r = sshpkt_get_cstring(ssh, &amp;pkalg, &amp;alen</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pktype == KEY_UNSPEC</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(r = sshkey_from_blob(pkblob, blen, &amp;key</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">key == NULL</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">key-&gt;type != pktype</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sshkey_type_plain(key-&gt;type</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">match_pattern_list(pkalg, options.hostbased_key_types, 0</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(b = sshbuf_new(</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(r = sshbuf_put_string(b, session_id2, session_id2_len</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">PRIVSEP(hostbased_key_allowed(authctxt-&gt;pw, cuser, chost, key</data>
</node>
<edge source="userauth_hostbased" target="ssh">
  <data key="d5">declares</data>
</edge>
<edge source="userauth_hostbased" target="key">
  <data key="d5">declares</data>
</edge>
<edge source="userauth_hostbased" target="b">
  <data key="d5">declares</data>
</edge>
<edge source="userauth_hostbased" target="sshkey_froms">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="sshkey_free">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="auth2_record_key">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="auth2_record_info">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="free">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="debug">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="error">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="sshbuf_dump">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="sshbuf_free">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="sshbuf_dump_data">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="logit">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="debug2">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="sshkey_type_from_name">
  <data key="d5">calls</data>
</edge>
<edge source="userauth_hostbased" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="userauth_hostbased" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="ssh" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ssh" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ssh" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ssh" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ssh" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ssh" target="error">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ssh" target="logit">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ssh" target="userauth_hostbased">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="key" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="key" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="key" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="key" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="key" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="key" target="sshkey_free">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="auth2_record_key">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="free">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="error">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="logit">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="key" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="b" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="b" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="b" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="b" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="b" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>