<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-0716</data>
<data key="d1">4.7</data>
<data key="d2">MEDIUM</data>
<node id="br_multicast_add_group">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="mp">
  <data key="d3">Variable</data>
</node>
<node id="br">
  <data key="d3">Variable</data>
</node>
<node id="group">
  <data key="d3">Variable</data>
</node>
<node id="port">
  <data key="d3">Variable</data>
</node>
<node id="p">
  <data key="d3">Variable</data>
</node>
<node id="now">
  <data key="d3">Variable</data>
</node>
<node id="spin_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="mod_timer">
  <data key="d3">FunctionCall</data>
</node>
<node id="hlist_add_head">
  <data key="d3">FunctionCall</data>
</node>
<node id="setup_timer">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_assign_pointer">
  <data key="d3">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="mlock_dereference">
  <data key="d3">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="br_multicast_new_group">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!netif_running(br-&gt;dev</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IS_ERR(mp</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!port</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">p-&gt;port == port</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(unsigned long</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">unlikely(!p</data>
</node>
<node id="for_6">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">pp = &amp;mp-&gt;ports;
	     (p = mlock_dereference(*pp, br</data>
</node>
<edge source="br_multicast_add_group" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="mp">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="br">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="group">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="port">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="p">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="now">
  <data key="d5">declares</data>
</edge>
<edge source="br_multicast_add_group" target="spin_lock">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="mod_timer">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="hlist_add_head">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="setup_timer">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="rcu_assign_pointer">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="PTR_ERR">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="spin_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="mlock_dereference">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="kzalloc">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="br_multicast_new_group">
  <data key="d5">calls</data>
</edge>
<edge source="br_multicast_add_group" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="br_multicast_add_group" target="for_6">
  <data key="d5">contains</data>
</edge>
<edge source="mp" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mp" target="for_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mp" target="mod_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mp" target="hlist_add_head">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mp" target="PTR_ERR">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mp" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="br" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="br" target="for_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="br" target="spin_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="mod_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="hlist_add_head">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="setup_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="spin_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="mlock_dereference">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="br_multicast_add_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="br_multicast_new_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="br" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="br" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="group" target="setup_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="group" target="br_multicast_add_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="group" target="br_multicast_new_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="port" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="port" target="for_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="port" target="hlist_add_head">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="setup_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="br_multicast_add_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="br_multicast_new_group">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="p" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="for_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="now" target="mod_timer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="now" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="now" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="now" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>