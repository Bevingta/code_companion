<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-6544</data>
<data key="d2">1.9</data>
<data key="d3">LOW</data>
<node id="hci_sock_getsockopt">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="level">
  <data key="d4">Variable</data>
</node>
<node id="__user">
  <data key="d4">Variable</data>
</node>
<node id="uf">
  <data key="d4">Variable</data>
</node>
<node id="f">
  <data key="d4">Variable</data>
</node>
<node id="optname">
  <data key="d4">Variable</data>
</node>
<node id="sk">
  <data key="d4">Variable</data>
</node>
<node id="sock">
  <data key="d4">Variable</data>
</node>
<node id="lock_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="hci_pi">
  <data key="d4">FunctionCall</data>
</node>
<node id="BT_DBG">
  <data key="d4">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d4">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_user(len, optlen</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hci_pi(sk</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hci_pi(sk</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">put_user(opt, optval</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hci_pi(sk</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">put_user(opt, optval</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(optval, &amp;uf, len</data>
</node>
<node id="switch_7">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">optname</data>
</node>
<edge source="hci_sock_getsockopt" target="level">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="__user">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="uf">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="f">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="optname">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="sk">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="sock">
  <data key="d6">declares</data>
</edge>
<edge source="hci_sock_getsockopt" target="lock_sock">
  <data key="d6">calls</data>
</edge>
<edge source="hci_sock_getsockopt" target="hci_pi">
  <data key="d6">calls</data>
</edge>
<edge source="hci_sock_getsockopt" target="BT_DBG">
  <data key="d6">calls</data>
</edge>
<edge source="hci_sock_getsockopt" target="min_t">
  <data key="d6">calls</data>
</edge>
<edge source="hci_sock_getsockopt" target="release_sock">
  <data key="d6">calls</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="hci_sock_getsockopt" target="switch_7">
  <data key="d6">contains</data>
</edge>
<edge source="level" target="hci_sock_getsockopt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="__user" target="hci_sock_getsockopt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="uf" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="uf" target="min_t">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="uf" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="uf" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="uf" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="uf" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="uf" target="switch_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="f" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="optname" target="switch_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="optname" target="BT_DBG">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="optname" target="hci_sock_getsockopt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="hci_pi">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="BT_DBG">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="switch_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sock" target="hci_sock_getsockopt">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>