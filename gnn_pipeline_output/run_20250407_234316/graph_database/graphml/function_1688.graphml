<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-2843</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="Initialize">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d3">Variable</data>
</node>
<node id="kMaxDecodeThreads">
  <data key="d3">Variable</data>
</node>
<node id="kDecodeThreads">
  <data key="d3">Variable</data>
</node>
<node id="decode_threads">
  <data key="d3">Variable</data>
</node>
<node id="push_back">
  <data key="d3">FunctionCall</data>
</node>
<node id="av_malloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="avcodec_find_decoder">
  <data key="d3">FunctionCall</data>
</node>
<node id="CreateFrame">
  <data key="d3">FunctionCall</data>
</node>
<node id="surface_height">
  <data key="d3">FunctionCall</data>
</node>
<node id="clear">
  <data key="d3">FunctionCall</data>
</node>
<node id="OnInitializeComplete">
  <data key="d3">FunctionCall</data>
</node>
<node id="avcodec_alloc_context">
  <data key="d3">FunctionCall</data>
</node>
<node id="surface_width">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetSurfaceFormat">
  <data key="d3">FunctionCall</data>
</node>
<node id="frame_rate_numerator">
  <data key="d3">FunctionCall</data>
</node>
<node id="frame_rate_denominator">
  <data key="d3">FunctionCall</data>
</node>
<node id="threads">
  <data key="d3">FunctionCall</data>
</node>
<node id="height">
  <data key="d3">FunctionCall</data>
</node>
<node id="width">
  <data key="d3">FunctionCall</data>
</node>
<node id="VideoCodecToCodecID">
  <data key="d3">FunctionCall</data>
</node>
<node id="reset">
  <data key="d3">FunctionCall</data>
</node>
<node id="extra_data_size">
  <data key="d3">FunctionCall</data>
</node>
<node id="ForCurrentProcess">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">config.extra_data(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(!threads.empty(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!video_frame.get(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">codec &amp;&amp;
      avcodec_thread_init(codec_context_, decode_threads</data>
</node>
<node id="for_4">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">size_t i = 0; i &lt; Limits::kMaxVideoFrames; ++i</data>
</node>
<edge source="Initialize" target="i">
  <data key="d5">declares</data>
</edge>
<edge source="Initialize" target="kMaxDecodeThreads">
  <data key="d5">declares</data>
</edge>
<edge source="Initialize" target="kDecodeThreads">
  <data key="d5">declares</data>
</edge>
<edge source="Initialize" target="decode_threads">
  <data key="d5">declares</data>
</edge>
<edge source="Initialize" target="push_back">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="av_malloc">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="avcodec_find_decoder">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="CreateFrame">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="surface_height">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="clear">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="OnInitializeComplete">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="avcodec_alloc_context">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="surface_width">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="GetSurfaceFormat">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="frame_rate_numerator">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="frame_rate_denominator">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="threads">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="height">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="width">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="VideoCodecToCodecID">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="reset">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="extra_data_size">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="ForCurrentProcess">
  <data key="d5">calls</data>
</edge>
<edge source="Initialize" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="Initialize" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="Initialize" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="Initialize" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="Initialize" target="for_4">
  <data key="d5">contains</data>
</edge>
<edge source="i" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="for_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="kDecodeThreads" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="decode_threads" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="decode_threads" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>