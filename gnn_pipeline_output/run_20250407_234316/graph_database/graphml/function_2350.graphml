<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-6113</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="PHP_FUNCTION">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="base64_str">
  <data key="d4">Variable</data>
</node>
<node id="base64_str_len">
  <data key="d4">Variable</data>
</node>
<node id="EVP_EncryptUpdate">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_get_cipherbyname">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_EncryptInit_ex">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_error_docref">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_openssl_validate_iv">
  <data key="d4">FunctionCall</data>
</node>
<node id="RETVAL_STRINGL">
  <data key="d4">FunctionCall</data>
</node>
<node id="efree">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_CIPHER_CTX_cleanup">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_base64_encode">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_CIPHER_key_length">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_CIPHER_iv_length">
  <data key="d4">FunctionCall</data>
</node>
<node id="emalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_CIPHER_CTX_set_key_length">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_CIPHER_block_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="EVP_EncryptInit">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!cipher_type</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">keylen &gt; password_len</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">iv_len &lt;= 0 &amp;&amp; max_iv_len &gt; 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">password_len &gt; keylen</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">data_len &gt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EVP_EncryptFinal(&amp;cipher_ctx, (unsigned char *</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">raw_output</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key != (unsigned char*</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_iv</data>
</node>
<edge source="PHP_FUNCTION" target="base64_str">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="base64_str_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_EncryptUpdate">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_get_cipherbyname">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_EncryptInit_ex">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="php_error_docref">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="php_openssl_validate_iv">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="RETVAL_STRINGL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="efree">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_CIPHER_CTX_cleanup">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="php_base64_encode">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_CIPHER_key_length">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_CIPHER_iv_length">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="emalloc">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_CIPHER_CTX_set_key_length">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_CIPHER_block_size">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="EVP_EncryptInit">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="base64_str" target="RETVAL_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base64_str" target="php_base64_encode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base64_str" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base64_str_len" target="RETVAL_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base64_str_len" target="php_base64_encode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base64_str_len" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>