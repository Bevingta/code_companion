<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9144</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadRLEImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">Variable</data>
</node>
<node id="magick">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="x">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="comment">
  <data key="d4">Variable</data>
</node>
<node id="GetAuthenticIndexQueue">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetVirtualMemoryBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireNextImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="MagickMax">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowFileException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProperty">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishVirtualMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelAlpha">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="InheritException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireVirtualMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleQuantumToChar">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobLSBShort">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 2</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">map_length &gt;= 22</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(number_planes == 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; 0x02</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(number_planes &amp; 0x01</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps != 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colormap == (unsigned char *</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(flags &amp; 0x08</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">length != 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">comment == (char *</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(length &amp; 0x01</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte != MagickFalse</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(number_pixels*number_planes_filled</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(flags &amp; 0x01</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opcode &amp; 0x40</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">plane == 255</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opcode &amp; 0x40</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opcode &amp; 0x40</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(offset &lt; 0</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps != 0</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(y &lt; (ssize_t</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">operand &amp; 0x01</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opcode &amp; 0x40</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(offset &lt; 0</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps != 0</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(y &lt; (ssize_t</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps != 0</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps == 1</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsValidColormapIndex(image,*p &amp; mask,&amp;index,exception</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(number_planes &gt;= 3</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsValidColormapIndex(image,(size_t</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(i &lt; (ssize_t</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_planes &gt;= 3</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte != MagickFalse</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps == 0</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,map_length</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps == 1</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps &gt; 1</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsValidColormapIndex(image,*p++,&amp;index,exception</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsValidColormapIndex(image,*p++,&amp;index,exception</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsValidColormapIndex(image,*p++,&amp;index,exception</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &lt; (ssize_t</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_colormaps != 0</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;number_scenes != 0</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 0</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetNextImageInList(image</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="for_71">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_72">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_73">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_74">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_75">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_76">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=0; j &lt; (ssize_t</data>
</node>
<node id="for_77">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=0; j &lt; (ssize_t</data>
</node>
<node id="for_78">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_79">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_80">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_81">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_82">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_83">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_84">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_85">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_86">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_87">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_88">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_89">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_90">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_91">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((opcode &amp; 0x3f</data>
</node>
<node id="while_92">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(count != 0</data>
</node>
<node id="switch_93">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">opcode &amp; 0x3f</data>
</node>
<edge source="ReadRLEImage" target="length">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="magick">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="x">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="comment">
  <data key="d6">declares</data>
</edge>
<edge source="ReadRLEImage" target="GetAuthenticIndexQueue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="GetVirtualMemoryBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="DestroyString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="AcquireNextImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="MagickMax">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ScaleCharToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ThrowFileException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetImageProperty">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="RelinquishVirtualMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetPixelAlpha">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="InheritException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="AcquireVirtualMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ScaleQuantumToChar">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ReadBlobLSBShort">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="ReadBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SyncImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="SyncNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadRLEImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_71">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_72">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_73">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_74">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_75">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_76">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_77">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_78">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_79">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_80">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_81">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_82">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_83">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_84">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_85">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_86">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_87">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_88">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_89">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="for_90">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="while_91">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="while_92">
  <data key="d6">contains</data>
</edge>
<edge source="ReadRLEImage" target="switch_93">
  <data key="d6">contains</data>
</edge>
<edge source="length" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="AcquireQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="ScaleCharToQuantum">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="ResetMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="magick" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="magick" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="magick" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_43">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_53">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_66">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_74">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_76">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_77">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_78">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_79">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_80">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_81">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_82">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_83">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_85">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_86">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_87">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_88">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_76">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_77">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_53">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_74">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_82">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_88">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="while_91">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="switch_93">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_53">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_91">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_93">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="AcquireQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="DestroyString">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="SetImageProperty">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="for_74">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>