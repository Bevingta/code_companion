<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-10671</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="de_dotdot">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="l">
  <data key="d5">Variable</data>
</node>
<node id="strstr">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> cp == (char*</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> cp2 &lt; file </data>
</node>
<node id="for_2">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> cp2 = cp + 2; *cp2 == '/'; ++cp2 </data>
</node>
<node id="for_3">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">;;</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> cp2 = cp - 1; cp2 &gt;= file &amp;&amp; *cp2 != '/'; --cp2 </data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> cp2 = cp - 1; cp2 &gt;= file &amp;&amp; *cp2 != '/'; --cp2 </data>
</node>
<node id="while_6">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> ( cp = strstr( file, "//"</data>
</node>
<node id="while_7">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> strncmp( file, "./", 2 </data>
</node>
<node id="while_8">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> ( cp = strstr( file, "/./"</data>
</node>
<node id="while_9">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> strncmp( file, "../", 3 </data>
</node>
<node id="while_10">
  <data key="d5">ControlStructure_while</data>
  <data key="d6"> ( l = strlen( file </data>
</node>
<edge source="de_dotdot" target="l">
  <data key="d7">declares</data>
</edge>
<edge source="de_dotdot" target="strstr">
  <data key="d7">calls</data>
</edge>
<edge source="de_dotdot" target="strcpy">
  <data key="d7">calls</data>
</edge>
<edge source="de_dotdot" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="for_2">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="for_3">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="while_6">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="while_7">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="while_8">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="while_9">
  <data key="d7">contains</data>
</edge>
<edge source="de_dotdot" target="while_10">
  <data key="d7">contains</data>
</edge>
<edge source="l" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="for_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="while_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="while_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="while_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="while_10">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>