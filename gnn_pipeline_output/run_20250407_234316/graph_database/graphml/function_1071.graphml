<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-5209</data>
<data key="d3">6.4</data>
<data key="d4">MEDIUM</data>
<node id="base64decode">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="ptr">
  <data key="d5">Variable</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="outbuf">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="l">
  <data key="d5">Variable</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="base64decode_block">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="strspn">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcspn">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!buf || !size</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &lt;= 0</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*ptr == '\0' || ptr &gt;= buf+len</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l &gt; 3 &amp;&amp; ptr+l &lt;= buf+len</data>
</node>
<node id="while_4">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">1</data>
</node>
<edge source="base64decode" target="ptr">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="outbuf">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="l">
  <data key="d7">declares</data>
</edge>
<edge source="base64decode" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="base64decode" target="base64decode_block">
  <data key="d7">calls</data>
</edge>
<edge source="base64decode" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="base64decode" target="strspn">
  <data key="d7">calls</data>
</edge>
<edge source="base64decode" target="strcspn">
  <data key="d7">calls</data>
</edge>
<edge source="base64decode" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="base64decode" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="base64decode" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="base64decode" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="base64decode" target="while_4">
  <data key="d7">contains</data>
</edge>
<edge source="ptr" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ptr" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="base64decode_block">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ptr" target="strspn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ptr" target="strcspn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ptr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="size" target="base64decode">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="malloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="outbuf" target="base64decode_block">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="outbuf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="outbuf" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="outbuf" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="base64decode">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="base64decode_block">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="l" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="l" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>