<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-0807</data>
<data key="d2">7.2</data>
<data key="d3">HIGH</data>
<node id="get_build_id">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="addr">
  <data key="d4">Variable</data>
</node>
<node id="base_addr">
  <data key="d4">Variable</data>
</node>
<node id="hdr_size">
  <data key="d4">Variable</data>
</node>
<node id="skip_bytes">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="build_id_data">
  <data key="d4">Variable</data>
</node>
<node id="bytes">
  <data key="d4">Variable</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="clear">
  <data key="d4">FunctionCall</data>
</node>
<node id="NOTE_ALIGN">
  <data key="d4">FunctionCall</data>
</node>
<node id="StringPrintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">backtrace-&gt;Read(base_addr + EI_NIDENT, reinterpret_cast&lt;uint8_t*&gt;(&amp;hdr</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">backtrace-&gt;Read(base_addr + hdr.e_phoff + i * hdr.e_phentsize,
 reinterpret_cast&lt;uint8_t*&gt;(&amp;phdr</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phdr.p_type == PT_NOTE</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">backtrace-&gt;Read(addr, reinterpret_cast&lt;uint8_t*&gt;(&amp;nhdr</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">nhdr.n_type == NT_GNU_BUILD_ID</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">nhdr.n_namesz &gt; sizeof(build_id_data</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">backtrace-&gt;Read(addr, build_id_data, nhdr.n_descsz</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hdr_size &lt; skip_bytes</data>
</node>
<node id="for_8">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">size_t i = 0; i &lt; hdr.e_phnum; i++</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">size_t bytes = 0; bytes &lt; nhdr.n_descsz; bytes++</data>
</node>
<node id="while_10">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">hdr_size &gt;= sizeof(NhdrType</data>
</node>
<edge source="get_build_id" target="addr">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="base_addr">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="hdr_size">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="skip_bytes">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="build_id_data">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="bytes">
  <data key="d6">declares</data>
</edge>
<edge source="get_build_id" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="clear">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="NOTE_ALIGN">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="StringPrintf">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="get_build_id" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="for_8">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="get_build_id" target="while_10">
  <data key="d6">contains</data>
</edge>
<edge source="addr" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="addr" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="addr" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="addr" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="addr" target="get_build_id">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="addr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="addr" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="addr" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="addr" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_addr" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base_addr" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base_addr" target="get_build_id">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base_addr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_addr" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdr_size" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="hdr_size" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdr_size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdr_size" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skip_bytes" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skip_bytes" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skip_bytes" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skip_bytes" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="build_id_data" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="build_id_data" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="build_id_data" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="build_id_data" target="StringPrintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="build_id_data" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="build_id_data" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="build_id_data" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="build_id_data" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="build_id_data" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bytes" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="StringPrintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bytes" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>