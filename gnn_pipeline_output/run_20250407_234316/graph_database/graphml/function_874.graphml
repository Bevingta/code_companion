<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-13053</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="decode_rt_routing_info">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="buflen">
  <data key="d3">Variable</data>
</node>
<node id="pptr">
  <data key="d3">Variable</data>
</node>
<node id="buf">
  <data key="d3">Variable</data>
</node>
<node id="route_target">
  <data key="d3">Variable</data>
</node>
<node id="plen">
  <data key="d3">Variable</data>
</node>
<node id="ND_TCHECK">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="snprintf">
  <data key="d3">FunctionCall</data>
</node>
<node id="ND_TCHECK2">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">0 == plen</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">32 &gt; plen</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">64 &lt; plen</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">plen % 8</data>
</node>
<edge source="decode_rt_routing_info" target="buflen">
  <data key="d5">declares</data>
</edge>
<edge source="decode_rt_routing_info" target="pptr">
  <data key="d5">declares</data>
</edge>
<edge source="decode_rt_routing_info" target="buf">
  <data key="d5">declares</data>
</edge>
<edge source="decode_rt_routing_info" target="route_target">
  <data key="d5">declares</data>
</edge>
<edge source="decode_rt_routing_info" target="plen">
  <data key="d5">declares</data>
</edge>
<edge source="decode_rt_routing_info" target="ND_TCHECK">
  <data key="d5">calls</data>
</edge>
<edge source="decode_rt_routing_info" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="decode_rt_routing_info" target="snprintf">
  <data key="d5">calls</data>
</edge>
<edge source="decode_rt_routing_info" target="ND_TCHECK2">
  <data key="d5">calls</data>
</edge>
<edge source="decode_rt_routing_info" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="decode_rt_routing_info" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="decode_rt_routing_info" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="decode_rt_routing_info" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="decode_rt_routing_info" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="buflen" target="snprintf">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buflen" target="decode_rt_routing_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buflen" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pptr" target="ND_TCHECK">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pptr" target="decode_rt_routing_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pptr" target="ND_TCHECK2">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pptr" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="snprintf">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="decode_rt_routing_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="route_target" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="route_target" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="route_target" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="route_target" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="route_target" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="plen" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="plen" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="plen" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="plen" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="plen" target="ND_TCHECK2">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="plen" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>