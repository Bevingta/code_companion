<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2012-6657</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="sock_setsockopt">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="level">
  <data key="d3">Variable</data>
</node>
<node id="valbool">
  <data key="d3">Variable</data>
</node>
<node id="__user">
  <data key="d3">Variable</data>
</node>
<node id="int">
  <data key="d3">Variable</data>
</node>
<node id="ling">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="optname">
  <data key="d3">Variable</data>
</node>
<node id="fprog">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="val">
  <data key="d3">Variable</data>
</node>
<node id="sk_write_space">
  <data key="d3">FunctionCall</data>
</node>
<node id="lock_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_valbool_flag">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_enable_timestamp">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_disable_timestamp">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_warn_obsolete_bsdism">
  <data key="d3">FunctionCall</data>
</node>
<node id="clear_bit">
  <data key="d3">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_set_timeout">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_attach_filter">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_set_flag">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_reset_flag">
  <data key="d3">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_detach_filter">
  <data key="d3">FunctionCall</data>
</node>
<node id="settable">
  <data key="d3">FunctionCall</data>
</node>
<node id="max_t">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optname == SO_BINDTODEVICE</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; sizeof(int</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">get_user(val, (int __user *</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">val &amp;&amp; !capable(CAP_NET_ADMIN</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!capable(CAP_NET_ADMIN</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!capable(CAP_NET_ADMIN</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_protocol == IPPROTO_TCP</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(val &gt;= 0 &amp;&amp; val &lt;= 6</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; sizeof(ling</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;ling, optval, sizeof(ling</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ling.l_onoff</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">BITS_PER_LONG == 32</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(unsigned int</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">valbool</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">valbool</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optname == SO_TIMESTAMP</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">val &amp; ~SOF_TIMESTAMPING_MASK</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">val &amp; SOF_TIMESTAMPING_RX_SOFTWARE</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">val &lt; 0</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen == sizeof(struct sock_fprog</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;fprog, optval, sizeof(fprog</data>
</node>
<node id="if_21">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">valbool</data>
</node>
<node id="if_22">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!capable(CAP_NET_ADMIN</data>
</node>
<node id="if_23">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sock-&gt;ops-&gt;set_peek_off</data>
</node>
<node id="switch_24">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">optname</data>
</node>
<edge source="sock_setsockopt" target="level">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="valbool">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="__user">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="int">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="ling">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="optname">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="fprog">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="val">
  <data key="d5">declares</data>
</edge>
<edge source="sock_setsockopt" target="sk_write_space">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="lock_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_valbool_flag">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_enable_timestamp">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_disable_timestamp">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_warn_obsolete_bsdism">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="clear_bit">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="min_t">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_set_timeout">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sk_attach_filter">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_set_flag">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sock_reset_flag">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="release_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="sk_detach_filter">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="settable">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="max_t">
  <data key="d5">calls</data>
</edge>
<edge source="sock_setsockopt" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_20">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_21">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_22">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="if_23">
  <data key="d5">contains</data>
</edge>
<edge source="sock_setsockopt" target="switch_24">
  <data key="d5">contains</data>
</edge>
<edge source="level" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="valbool" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="valbool" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="valbool" target="if_21">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="valbool" target="sock_valbool_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="valbool" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valbool" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valbool" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valbool" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="__user" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="__user" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="int" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="int" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="int" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ling" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ling" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ling" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ling" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ling" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ling" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ling" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_19">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sock" target="if_23">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sock" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="sock_warn_obsolete_bsdism">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="clear_bit">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_15">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="optname" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="optname" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_20">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="fprog" target="sk_attach_filter">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="fprog" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fprog" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="sk_write_space">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_valbool_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_enable_timestamp">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_disable_timestamp">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_set_timeout">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_attach_filter">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_set_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_reset_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_detach_filter">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_16">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_17">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_18">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_20">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_21">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="sock_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="sock_valbool_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="min_t">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="sock_set_timeout">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="max_t">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="switch_24">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>