<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-15572</data>
<data key="d2">2.1</data>
<data key="d3">LOW</data>
<node id="spectre_v2_select_mitigation">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="cmd">
  <data key="d4">Variable</data>
</node>
<node id="mode">
  <data key="d4">Variable</data>
</node>
<node id="pr_info">
  <data key="d4">FunctionCall</data>
</node>
<node id="setup_force_cpu_cap">
  <data key="d4">FunctionCall</data>
</node>
<node id="retp_compiler">
  <data key="d4">FunctionCall</data>
</node>
<node id="pr_err">
  <data key="d4">FunctionCall</data>
</node>
<node id="spectre_v2_parse_cmdline">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!boot_cpu_has_bug(X86_BUG_SPECTRE_V2</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ENABLED(CONFIG_RETPOLINE</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ENABLED(CONFIG_RETPOLINE</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ENABLED(CONFIG_RETPOLINE</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ENABLED(CONFIG_RETPOLINE</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">boot_cpu_data.x86_vendor == X86_VENDOR_AMD</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!boot_cpu_has(X86_FEATURE_LFENCE_RDTSC</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(!boot_cpu_has(X86_FEATURE_PTI</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">boot_cpu_has(X86_FEATURE_IBPB</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">boot_cpu_has(X86_FEATURE_IBRS</data>
</node>
<node id="switch_10">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">cmd</data>
</node>
<edge source="spectre_v2_select_mitigation" target="cmd">
  <data key="d6">declares</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="mode">
  <data key="d6">declares</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="pr_info">
  <data key="d6">calls</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="setup_force_cpu_cap">
  <data key="d6">calls</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="retp_compiler">
  <data key="d6">calls</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="pr_err">
  <data key="d6">calls</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="spectre_v2_parse_cmdline">
  <data key="d6">calls</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="spectre_v2_select_mitigation" target="switch_10">
  <data key="d6">contains</data>
</edge>
<edge source="cmd" target="switch_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mode" target="pr_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mode" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mode" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mode" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mode" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mode" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>