<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-2929</data>
<data key="d1">3.3</data>
<data key="d2">LOW</data>
<node id="__ptrace_may_access">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="task">
  <data key="d3">Variable</data>
</node>
<node id="dumpable">
  <data key="d3">Variable</data>
</node>
<node id="int">
  <data key="d3">Variable</data>
</node>
<node id="cred">
  <data key="d3">Variable</data>
</node>
<node id="__task_cred">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="smp_rmb">
  <data key="d3">FunctionCall</data>
</node>
<node id="security_ptrace_access_check">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="current_cred">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">same_thread_group(task, current</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">uid_eq(cred-&gt;uid, tcred-&gt;euid</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ptrace_has_cap(tcred-&gt;user_ns, mode</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">task-&gt;mm</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dumpable &amp;&amp; !ptrace_has_cap(__task_cred(task</data>
</node>
<edge source="__ptrace_may_access" target="task">
  <data key="d5">declares</data>
</edge>
<edge source="__ptrace_may_access" target="dumpable">
  <data key="d5">declares</data>
</edge>
<edge source="__ptrace_may_access" target="int">
  <data key="d5">declares</data>
</edge>
<edge source="__ptrace_may_access" target="cred">
  <data key="d5">declares</data>
</edge>
<edge source="__ptrace_may_access" target="__task_cred">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="rcu_read_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="smp_rmb">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="security_ptrace_access_check">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="rcu_read_lock">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="current_cred">
  <data key="d5">calls</data>
</edge>
<edge source="__ptrace_may_access" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="__ptrace_may_access" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="__ptrace_may_access" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="__ptrace_may_access" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="__ptrace_may_access" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="task" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="task" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="task" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="task" target="__task_cred">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="task" target="security_ptrace_access_check">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="task" target="__ptrace_may_access">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dumpable" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="int" target="__ptrace_may_access">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cred" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cred" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cred" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>