<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-15856</data>
<data key="d1">2.1</data>
<data key="d2">LOW</data>
<node id="lex">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="o">
  <data key="d3">Variable</data>
</node>
<node id="s">
  <data key="d3">Variable</data>
</node>
<node id="skip_to_eol">
  <data key="d3">FunctionCall</data>
</node>
<node id="scanner_warn">
  <data key="d3">FunctionCall</data>
</node>
<node id="buf_append">
  <data key="d3">FunctionCall</data>
</node>
<node id="scanner_err">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next(s</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '#'</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">eof(s</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '&lt;'</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!chr(s, '&gt;'</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!buf_append(s, '\0'</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, ':'</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '!'</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '~'</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '\"'</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '\\'</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '\\'</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, '"'</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chr(s, 'x'</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hex(s, &amp;o</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">oct(s, &amp;o</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!chr(s, '\"'</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!buf_append(s, '\0'</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!is_valid_utf8(s-&gt;buf, s-&gt;buf_pos - 1</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">is_alpha(peek(s</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!buf_append(s, '\0'</data>
</node>
<node id="if_21">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">streq(s-&gt;buf, "include"</data>
</node>
<node id="while_22">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">is_space(peek(s</data>
</node>
<node id="while_23">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">peek(s</data>
</node>
<node id="while_24">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">!eof(s</data>
</node>
<node id="while_25">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">is_alnum(peek(s</data>
</node>
<edge source="lex" target="o">
  <data key="d5">declares</data>
</edge>
<edge source="lex" target="s">
  <data key="d5">declares</data>
</edge>
<edge source="lex" target="skip_to_eol">
  <data key="d5">calls</data>
</edge>
<edge source="lex" target="scanner_warn">
  <data key="d5">calls</data>
</edge>
<edge source="lex" target="buf_append">
  <data key="d5">calls</data>
</edge>
<edge source="lex" target="scanner_err">
  <data key="d5">calls</data>
</edge>
<edge source="lex" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_20">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="if_21">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="while_22">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="while_23">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="while_24">
  <data key="d5">contains</data>
</edge>
<edge source="lex" target="while_25">
  <data key="d5">contains</data>
</edge>
<edge source="o" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="o" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="o" target="if_15">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="o" target="if_18">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="o" target="while_24">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_15">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_16">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_17">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_18">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_19">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_20">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="if_21">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="while_22">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="while_23">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="while_24">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="s" target="while_25">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>