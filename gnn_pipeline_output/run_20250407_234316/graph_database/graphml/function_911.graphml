<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-13005</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="xid_map_enter">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="xmep">
  <data key="d5">Variable</data>
</node>
<node id="ip">
  <data key="d5">Variable</data>
</node>
<node id="ip6">
  <data key="d5">Variable</data>
</node>
<node id="bp">
  <data key="d5">Variable</data>
</node>
<node id="rp">
  <data key="d5">Variable</data>
</node>
<node id="EXTRACT_32BITS">
  <data key="d5">FunctionCall</data>
</node>
<node id="UNALIGNED_MEMCPY">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ND_TTEST(rp-&gt;rm_call.cb_vers</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">++xid_map_next &gt;= XIDMAPSIZE</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ip</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ip6</data>
</node>
<node id="switch_4">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">IP_V((const struct ip *</data>
</node>
<edge source="xid_map_enter" target="xmep">
  <data key="d7">declares</data>
</edge>
<edge source="xid_map_enter" target="ip">
  <data key="d7">declares</data>
</edge>
<edge source="xid_map_enter" target="ip6">
  <data key="d7">declares</data>
</edge>
<edge source="xid_map_enter" target="bp">
  <data key="d7">declares</data>
</edge>
<edge source="xid_map_enter" target="rp">
  <data key="d7">declares</data>
</edge>
<edge source="xid_map_enter" target="EXTRACT_32BITS">
  <data key="d7">calls</data>
</edge>
<edge source="xid_map_enter" target="UNALIGNED_MEMCPY">
  <data key="d7">calls</data>
</edge>
<edge source="xid_map_enter" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="xid_map_enter" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="xid_map_enter" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="xid_map_enter" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="xid_map_enter" target="switch_4">
  <data key="d7">contains</data>
</edge>
<edge source="xmep" target="UNALIGNED_MEMCPY">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="xmep" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="xmep" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="xmep" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ip" target="switch_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip" target="UNALIGNED_MEMCPY">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ip" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip6" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip6" target="UNALIGNED_MEMCPY">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ip6" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ip6" target="switch_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bp" target="xid_map_enter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bp" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bp" target="switch_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rp" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rp" target="EXTRACT_32BITS">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rp" target="xid_map_enter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rp" target="UNALIGNED_MEMCPY">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>