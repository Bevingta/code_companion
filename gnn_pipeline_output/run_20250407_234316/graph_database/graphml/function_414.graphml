<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-2482</data>
<data key="d1">7.8</data>
<data key="d2">HIGH</data>
<node id="sctp_sock_migrate">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="oldsk">
  <data key="d3">Variable</data>
</node>
<node id="oldsp">
  <data key="d3">Variable</data>
</node>
<node id="newsk">
  <data key="d3">Variable</data>
</node>
<node id="pp">
  <data key="d3">Variable</data>
</node>
<node id="newsp">
  <data key="d3">Variable</data>
</node>
<node id="type">
  <data key="d3">Variable</data>
</node>
<node id="event">
  <data key="d3">Variable</data>
</node>
<node id="assoc">
  <data key="d3">Variable</data>
</node>
<node id="newep">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="queue">
  <data key="d3">Variable</data>
</node>
<node id="inet_sk_copy_descendant">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_bind_addr_copy">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_skb_set_owner_r">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_skb_for_each">
  <data key="d3">FunctionCall</data>
</node>
<node id="__skb_queue_tail">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_sock_rfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="accept">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_assoc_migrate">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_lock_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_add_bind_node">
  <data key="d3">FunctionCall</data>
</node>
<node id="__skb_unlink">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_release_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="skb_queue_head_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_skb2event">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">PF_INET6 == assoc-&gt;base.sk-&gt;sk_family</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">assoc-&gt;peer.ipv4_address</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">assoc-&gt;peer.ipv6_address</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">event-&gt;asoc == assoc</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sctp_sk(oldsk</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">assoc-&gt;ulpq.pd_mode</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">event-&gt;asoc == assoc</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">assoc-&gt;ulpq.pd_mode</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sctp_state(assoc, CLOSED</data>
</node>
<edge source="sctp_sock_migrate" target="oldsk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="oldsp">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="newsk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="pp">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="newsp">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="type">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="event">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="assoc">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="newep">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="queue">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_sock_migrate" target="inet_sk_copy_descendant">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_bind_addr_copy">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_skb_set_owner_r">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_skb_for_each">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="__skb_queue_tail">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="inet_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_sock_rfree">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="accept">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_assoc_migrate">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_lock_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sk_add_bind_node">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="__skb_unlink">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_release_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="skb_queue_head_init">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="sctp_skb2event">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_sock_migrate" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_sock_migrate" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="oldsk" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsk" target="inet_sk_copy_descendant">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="sctp_skb_for_each">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="sctp_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsp" target="sctp_bind_addr_copy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsp" target="sctp_skb_for_each">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsp" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="oldsp" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="oldsp" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="inet_sk_copy_descendant">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_skb_set_owner_r">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="__skb_queue_tail">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_assoc_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_lock_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sk_add_bind_node">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_release_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pp" target="sk_add_bind_node">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsp" target="sctp_bind_addr_copy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsp" target="skb_queue_head_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsp" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsp" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="type" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="event" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="event" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="event" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="event" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="event" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="event" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="assoc" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="assoc" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="assoc" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="assoc" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="assoc" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="assoc" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="assoc" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="assoc" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="assoc" target="sctp_assoc_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="assoc" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="assoc" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="sctp_bind_addr_copy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="sctp_skb_for_each">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="__skb_queue_tail">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="__skb_unlink">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="queue" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="queue" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="queue" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>