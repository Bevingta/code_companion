<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-5669</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="_bdf_parse_glyphs">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="sw">
  <data key="d4">Variable</data>
</node>
<node id="bitmap_size">
  <data key="d4">Variable</data>
</node>
<node id="long">
  <data key="d4">Variable</data>
</node>
<node id="FT_MulDiv">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_list_split">
  <data key="d4">FunctionCall</data>
</node>
<node id="DWIDTH">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_atol">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_add_comment">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_FREE">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_MAX">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_TRACE2">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_MEM_COPY">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_atoul">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_UNUSED">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_TRACE4">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_set_glyph_modified">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_list_shift">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_list_join">
  <data key="d4">FunctionCall</data>
</node>
<node id="ft_qsort">
  <data key="d4">FunctionCall</data>
</node>
<node id="font">
  <data key="d4">FunctionCall</data>
</node>
<node id="_bdf_atos">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_MIN">
  <data key="d4">FunctionCall</data>
</node>
<node id="have">
  <data key="d4">FunctionCall</data>
</node>
<node id="SWIDTH">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "COMMENT", 7 </data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *s != 0 </data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_GLYPHS </data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "CHARS", 5 </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;cnt == 0 </data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;cnt &gt;= 0x110000UL </data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_NEW_ARRAY( font-&gt;glyphs, font-&gt;glyphs_size </data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "ENDFONT", 7 </data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "ENDCHAR", 7 </data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ( p-&gt;flags &amp; _BDF_GLYPH </data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "STARTCHAR", 9 </data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !s </data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_NEW_ARRAY( p-&gt;glyph_name, slen + 1 </data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "ENCODING", 8 </data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_GLYPH </data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc &lt; -1 </data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc == -1 &amp;&amp; p-&gt;list.used &gt; 2 </data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc &gt; 0                               &amp;&amp;
           (size_t</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc &gt;= 0 </data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> _bdf_glyph_modified( p-&gt;have, p-&gt;glyph_enc </data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc &gt;= 0 </data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> font-&gt;glyphs_used == font-&gt;glyphs_size </data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_RENEW_ARRAY( font-&gt;glyphs,
                               font-&gt;glyphs_size,
                               font-&gt;glyphs_size + 64 </data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;opts-&gt;keep_unencoded != 0 </data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> font-&gt;unencoded_used == font-&gt;unencoded_size </data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_RENEW_ARRAY( font-&gt;unencoded ,
                                 font-&gt;unencoded_size,
                                 font-&gt;unencoded_size + 4 </data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc == -1 </data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;flags &amp; _BDF_BITMAP </data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;row &gt;= (unsigned long</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_GLYPH_HEIGHT_CHECK </data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !sbitset( hdigits, c </data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> i + 1 &lt; nibbles &amp;&amp; ( i &amp; 1 </data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> i &lt; nibbles                            &amp;&amp;
           !( p-&gt;flags &amp; _BDF_GLYPH_WIDTH_CHECK </data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> glyph-&gt;bbx.width </data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> i == nibbles                           &amp;&amp;
           sbitset( hdigits, line[nibbles] </data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "SWIDTH", 6 </data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_ENCODING </data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "DWIDTH", 6 </data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_ENCODING </data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_SWIDTH </data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "BBX", 3 </data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_ENCODING </data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error </data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_DWIDTH </data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;opts-&gt;correct_metrics != 0 </data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> sw != glyph-&gt;swidth </data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p-&gt;glyph_enc == -1 </data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_memcmp( line, "BITMAP", 6 </data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> !( p-&gt;flags &amp; _BDF_BBX </data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> glyph-&gt;bpr &gt; 0xFFFFU || bitmap_size &gt; 0xFFFFU </data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_NEW_ARRAY( glyph-&gt;bitmap, glyph-&gt;bytes </data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> error &amp;&amp; ( p-&gt;flags &amp; _BDF_GLYPH </data>
</node>
<node id="for_57">
  <data key="d4">ControlStructure_for</data>
  <data key="d5"> i = 0; i &lt; nibbles; i++ </data>
</node>
<edge source="_bdf_parse_glyphs" target="sw">
  <data key="d6">declares</data>
</edge>
<edge source="_bdf_parse_glyphs" target="bitmap_size">
  <data key="d6">declares</data>
</edge>
<edge source="_bdf_parse_glyphs" target="long">
  <data key="d6">declares</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_MulDiv">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_list_split">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="DWIDTH">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_atol">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_add_comment">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_FREE">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_MAX">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_TRACE2">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_MEM_COPY">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_atoul">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_UNUSED">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_TRACE4">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_set_glyph_modified">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_list_shift">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_list_join">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="ft_qsort">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="font">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="_bdf_atos">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="FT_MIN">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="have">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="SWIDTH">
  <data key="d6">calls</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="_bdf_parse_glyphs" target="for_57">
  <data key="d6">contains</data>
</edge>
<edge source="sw" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sw" target="if_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sw" target="if_49">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bitmap_size" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bitmap_size" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bitmap_size" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="long" target="_bdf_parse_glyphs">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="long" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>