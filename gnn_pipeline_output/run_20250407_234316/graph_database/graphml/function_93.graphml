<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2014-9656</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="tt_sbit_decoder_load_image">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="FT_PEEK_USHORT">
  <data key="d3">FunctionCall</data>
</node>
<node id="FT_NEXT_ULONG">
  <data key="d3">FunctionCall</data>
</node>
<node id="FT_NEXT_USHORT">
  <data key="d3">FunctionCall</data>
</node>
<node id="with">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> glyph_index &gt;= start &amp;&amp; glyph_index &lt;= end </data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> image_offset &gt; (FT_ULong</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 8 &gt; p_limit </data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 8 &gt; p_limit </data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> image_start == image_end </data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 12 &gt; p_limit </data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> tt_sbit_decoder_load_metrics( decoder, &amp;p, p_limit, 1 </data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 4 &gt; p_limit </data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> image_start == image_end </data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 4 &gt; p_limit </data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> num_glyphs &gt; (FT_ULong</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> gindex == glyph_index </data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> mm &gt;= num_glyphs </data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> p + 16 &gt; p_limit </data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> tt_sbit_decoder_load_metrics( decoder, &amp;p, p_limit, 1 </data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> num_glyphs &gt; (FT_ULong</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> gindex == glyph_index </data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> mm &gt;= num_glyphs </data>
</node>
<node id="for_18">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> ; num_ranges &gt; 0; num_ranges-- </data>
</node>
<node id="for_19">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> mm = 0; mm &lt; num_glyphs; mm++ </data>
</node>
<node id="for_20">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> mm = 0; mm &lt; num_glyphs; mm++ </data>
</node>
<node id="switch_21">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4"> index_format </data>
</node>
<edge source="tt_sbit_decoder_load_image" target="FT_PEEK_USHORT">
  <data key="d5">calls</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="FT_NEXT_ULONG">
  <data key="d5">calls</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="FT_NEXT_USHORT">
  <data key="d5">calls</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="with">
  <data key="d5">calls</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="for_18">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="for_19">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="for_20">
  <data key="d5">contains</data>
</edge>
<edge source="tt_sbit_decoder_load_image" target="switch_21">
  <data key="d5">contains</data>
</edge>
</graph></graphml>