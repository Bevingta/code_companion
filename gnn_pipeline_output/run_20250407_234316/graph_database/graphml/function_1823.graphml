<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-5008</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="compileAndRunPrivateScript">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d3">Variable</data>
</node>
<node id="RELEASE_ASSERT">
  <data key="d3">FunctionCall</data>
</node>
<node id="LOG">
  <data key="d3">FunctionCall</data>
</node>
<node id="Get">
  <data key="d3">FunctionCall</data>
</node>
<node id="sourceString">
  <data key="d3">FunctionCall</data>
</node>
<node id="block">
  <data key="d3">FunctionCall</data>
</node>
<node id="context">
  <data key="d3">FunctionCall</data>
</node>
<node id="Global">
  <data key="d3">FunctionCall</data>
</node>
<node id="dumpV8Message">
  <data key="d3">FunctionCall</data>
</node>
<node id="isolate">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">privateScriptController-&gt;IsObject(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">importFunctionValue-&gt;IsUndefined(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!v8::FunctionTemplate::New(isolate, importFunction</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!v8Call(V8ScriptRunner::compileScript(
                  v8String(isolate, sourceString</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!v8Call(V8ScriptRunner::runCompiledInternalScript(isolate, script</data>
</node>
<edge source="compileAndRunPrivateScript" target="size">
  <data key="d5">declares</data>
</edge>
<edge source="compileAndRunPrivateScript" target="RELEASE_ASSERT">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="LOG">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="Get">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="sourceString">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="block">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="context">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="Global">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="dumpV8Message">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="isolate">
  <data key="d5">calls</data>
</edge>
<edge source="compileAndRunPrivateScript" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="compileAndRunPrivateScript" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="compileAndRunPrivateScript" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="compileAndRunPrivateScript" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="compileAndRunPrivateScript" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="size" target="sourceString">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="compileAndRunPrivateScript">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>