<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2018-0500</data>
<data key="d4">7.5</data>
<data key="d5">HIGH</data>
<node id="Curl_smtp_escape_eob">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="conn">
  <data key="d6">Variable</data>
</node>
<node id="scratch">
  <data key="d6">Variable</data>
</node>
<node id="smtp">
  <data key="d6">Variable</data>
</node>
<node id="si">
  <data key="d6">Variable</data>
</node>
<node id="oldscratch">
  <data key="d6">Variable</data>
</node>
<node id="newscratch">
  <data key="d6">Variable</data>
</node>
<node id="nread">
  <data key="d6">Variable</data>
</node>
<node id="eob_sent">
  <data key="d6">Variable</data>
</node>
<node id="i">
  <data key="d6">Variable</data>
</node>
<node id="data">
  <data key="d6">Variable</data>
</node>
<node id="free">
  <data key="d6">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="failf">
  <data key="d6">FunctionCall</data>
</node>
<node id="new">
  <data key="d6">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!scratch || data-&gt;set.crlf</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!newscratch</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">SMTP_EOB[smtp-&gt;eob] == data-&gt;req.upload_fromhere[i]</data>
</node>
<node id="if_3">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">2 == smtp-&gt;eob || SMTP_EOB_LEN == smtp-&gt;eob</data>
</node>
<node id="if_4">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">smtp-&gt;eob</data>
</node>
<node id="if_5">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">SMTP_EOB[0] == data-&gt;req.upload_fromhere[i]</data>
</node>
<node id="if_6">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">SMTP_EOB_FIND_LEN == smtp-&gt;eob</data>
</node>
<node id="if_7">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!smtp-&gt;eob</data>
</node>
<node id="if_8">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">smtp-&gt;eob - eob_sent</data>
</node>
<node id="if_9">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">si != nread</data>
</node>
<node id="for_10">
  <data key="d6">ControlStructure_for</data>
  <data key="d7">i = 0, si = 0; i &lt; nread; i++</data>
</node>
<edge source="Curl_smtp_escape_eob" target="conn">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="scratch">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="smtp">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="si">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="oldscratch">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="newscratch">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="nread">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="eob_sent">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="i">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="data">
  <data key="d8">declares</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="free">
  <data key="d8">calls</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="malloc">
  <data key="d8">calls</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="failf">
  <data key="d8">calls</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="new">
  <data key="d8">calls</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="memcpy">
  <data key="d8">calls</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_3">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_4">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_5">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_6">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_7">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_8">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="if_9">
  <data key="d8">contains</data>
</edge>
<edge source="Curl_smtp_escape_eob" target="for_10">
  <data key="d8">contains</data>
</edge>
<edge source="conn" target="Curl_smtp_escape_eob">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="scratch" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="free">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="scratch" target="failf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="scratch" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="scratch" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="scratch" target="for_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="smtp" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="smtp" target="for_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="for_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="malloc">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="si" target="Curl_smtp_escape_eob">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="si" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="si" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="si" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="oldscratch" target="free">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="oldscratch" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="oldscratch" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="newscratch" target="if_1">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="newscratch" target="free">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="newscratch" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nread" target="if_9">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="nread" target="for_10">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="nread" target="Curl_smtp_escape_eob">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="eob_sent" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="eob_sent" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="eob_sent" target="for_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="i" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="for_10">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="data" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="data" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="malloc">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="data" target="Curl_smtp_escape_eob">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="data" target="failf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="data" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="data" target="for_10">
  <data key="d8">used_in_body</data>
</edge>
</graph></graphml>