<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-6640</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="ParseResponse">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="push_back">
  <data key="d4">FunctionCall</data>
</node>
<node id="affiliation_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="NOTREACHED">
  <data key="d4">FunctionCall</data>
</node>
<node id="facet_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="uri_spec">
  <data key="d4">FunctionCall</data>
</node>
<node id="reserve">
  <data key="d4">FunctionCall</data>
</node>
<node id="FromPotentiallyInvalidSpec">
  <data key="d4">FunctionCall</data>
</node>
<node id="equivalence_class">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fetcher_-&gt;GetResponseAsString(&amp;serialized_response</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!response.ParseFromString(serialized_response</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!uri.is_valid(</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">affiliated_uris.empty(</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!facet_uri_to_class_index.count(uri</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">facet_uri_to_class_index[uri] !=
          facet_uri_to_class_index[affiliated_uris[0]]</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">facet_uri_to_class_index[affiliated_uris[0]] == result-&gt;size(</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!facet_uri_to_class_index.count(uri</data>
</node>
<node id="for_8">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">int i = 0; i &lt; response.affiliation_size(</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">int j = 0; j &lt; equivalence_class.facet_size(</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">const FacetURI&amp; uri : affiliated_uris</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">const FacetURI&amp; uri : requested_facet_uris_</data>
</node>
<edge source="ParseResponse" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ParseResponse" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="ParseResponse" target="push_back">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="affiliation_size">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="NOTREACHED">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="facet_size">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="uri_spec">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="reserve">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="FromPotentiallyInvalidSpec">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="equivalence_class">
  <data key="d6">calls</data>
</edge>
<edge source="ParseResponse" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="for_8">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="ParseResponse" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>