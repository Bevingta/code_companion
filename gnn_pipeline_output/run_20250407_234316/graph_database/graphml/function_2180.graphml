<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-6892</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="aiff_read_chanmap">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="dword">
  <data key="d4">Variable</data>
</node>
<node id="chanmap_size">
  <data key="d4">Variable</data>
</node>
<node id="free">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="psf_binheader_readf">
  <data key="d4">FunctionCall</data>
</node>
<node id="psf_log_printf">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(map_info = aiff_caf_of_channel_layout_tag (layout_tag</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">map_info</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytesread &lt; dword</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">map_info-&gt;channel_map != NULL</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(psf-&gt;channel_map = malloc (chanmap_size</data>
</node>
<edge source="aiff_read_chanmap" target="dword">
  <data key="d6">declares</data>
</edge>
<edge source="aiff_read_chanmap" target="chanmap_size">
  <data key="d6">declares</data>
</edge>
<edge source="aiff_read_chanmap" target="free">
  <data key="d6">calls</data>
</edge>
<edge source="aiff_read_chanmap" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="aiff_read_chanmap" target="psf_binheader_readf">
  <data key="d6">calls</data>
</edge>
<edge source="aiff_read_chanmap" target="psf_log_printf">
  <data key="d6">calls</data>
</edge>
<edge source="aiff_read_chanmap" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="aiff_read_chanmap" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="aiff_read_chanmap" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="aiff_read_chanmap" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="aiff_read_chanmap" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="aiff_read_chanmap" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="dword" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dword" target="aiff_read_chanmap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dword" target="psf_binheader_readf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chanmap_size" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="chanmap_size" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chanmap_size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chanmap_size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chanmap_size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chanmap_size" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>