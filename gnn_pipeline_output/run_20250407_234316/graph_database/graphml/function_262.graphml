<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2011-4611</data>
<data key="d3">4.9</data>
<data key="d4">MEDIUM</data>
<node id="perf_event_interrupt">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="regs">
  <data key="d5">Variable</data>
</node>
<node id="event">
  <data key="d5">Variable</data>
</node>
<node id="nmi">
  <data key="d5">Variable</data>
</node>
<node id="cpuhw">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="found">
  <data key="d5">Variable</data>
</node>
<node id="val">
  <data key="d5">Variable</data>
</node>
<node id="perf_intr_is_nmi">
  <data key="d5">FunctionCall</data>
</node>
<node id="perf_read_regs">
  <data key="d5">FunctionCall</data>
</node>
<node id="record_and_restart">
  <data key="d5">FunctionCall</data>
</node>
<node id="irq_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="__get_cpu_var">
  <data key="d5">FunctionCall</data>
</node>
<node id="FC">
  <data key="d5">FunctionCall</data>
</node>
<node id="irq_enter">
  <data key="d5">FunctionCall</data>
</node>
<node id="read_pmc">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">cpuhw-&gt;n_limited</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nmi</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!event-&gt;hw.idx || is_limited_pmc(event-&gt;hw.idx</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(int</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!found</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_limited_pmc(i + 1</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(int</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nmi</data>
</node>
<node id="for_8">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; cpuhw-&gt;n_events; ++i</data>
</node>
<node id="for_9">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; ppmu-&gt;n_counter; ++i</data>
</node>
<edge source="perf_event_interrupt" target="regs">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="event">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="nmi">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="cpuhw">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="found">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="val">
  <data key="d7">declares</data>
</edge>
<edge source="perf_event_interrupt" target="perf_intr_is_nmi">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="perf_read_regs">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="record_and_restart">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="irq_exit">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="__get_cpu_var">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="FC">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="irq_enter">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="read_pmc">
  <data key="d7">calls</data>
</edge>
<edge source="perf_event_interrupt" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="for_8">
  <data key="d7">contains</data>
</edge>
<edge source="perf_event_interrupt" target="for_9">
  <data key="d7">contains</data>
</edge>
<edge source="regs" target="perf_intr_is_nmi">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="regs" target="perf_read_regs">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="regs" target="perf_event_interrupt">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="regs" target="record_and_restart">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="regs" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="regs" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="regs" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="regs" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="regs" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="event" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="event" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="event" target="record_and_restart">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="event" target="__get_cpu_var">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="event" target="read_pmc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="event" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="event" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="event" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nmi" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nmi" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="nmi" target="record_and_restart">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="nmi" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nmi" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nmi" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nmi" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cpuhw" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cpuhw" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cpuhw" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="found" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="found" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="found" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="found" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="found" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="found" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="record_and_restart">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="val" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val" target="for_9">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>