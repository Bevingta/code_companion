<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-1233</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="GetDisplayMessageForNotification">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="rotation_text_id">
  <data key="d3">Variable</data>
</node>
<node id="GetStringFUTF16">
  <data key="d3">FunctionCall</data>
</node>
<node id="find">
  <data key="d3">FunctionCall</data>
</node>
<node id="NOTREACHED">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetExitUnifiedModeMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetDisplayAddedMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetDisplayRemovedMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetEnterMirrorModeMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetEnterUnifiedModeMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_display_mode_ != current_display_mode_</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">current_display_mode_ == DisplayMode::MIRRORING</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_display_mode_ == DisplayMode::MIRRORING &amp;&amp;
        GetExitMirrorModeMessage(out_message, out_additional_message</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">current_display_mode_ == DisplayMode::UNIFIED</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_display_mode_ == DisplayMode::UNIFIED</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">current_display_mode_ == DisplayMode::DOCKED ||
        old_display_mode_ == DisplayMode::DOCKED</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">display_info_.size(</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">display_info_.count(iter.first</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">display_info_.size(</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_info.count(iter.first</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_iter == old_info.end(</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">iter.second.configured_ui_scale(</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">iter.second.GetActiveRotation(</data>
</node>
<node id="for_13">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">const auto&amp; iter : old_info</data>
</node>
<node id="for_14">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">const auto&amp; iter : display_info_</data>
</node>
<node id="for_15">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">const auto&amp; iter : display_info_</data>
</node>
<node id="switch_16">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">iter.second.GetActiveRotation(</data>
</node>
<edge source="GetDisplayMessageForNotification" target="rotation_text_id">
  <data key="d5">declares</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetStringFUTF16">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="find">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="NOTREACHED">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetExitUnifiedModeMessage">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetDisplayAddedMessage">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetDisplayRemovedMessage">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetEnterMirrorModeMessage">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="GetEnterUnifiedModeMessage">
  <data key="d5">calls</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="for_13">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="for_14">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="for_15">
  <data key="d5">contains</data>
</edge>
<edge source="GetDisplayMessageForNotification" target="switch_16">
  <data key="d5">contains</data>
</edge>
<edge source="rotation_text_id" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rotation_text_id" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rotation_text_id" target="for_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rotation_text_id" target="switch_16">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>