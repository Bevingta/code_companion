<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-6545</data>
<data key="d2">1.9</data>
<data key="d3">LOW</data>
<node id="rfcomm_get_dev_list">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="__user">
  <data key="d4">Variable</data>
</node>
<node id="dl">
  <data key="d4">Variable</data>
</node>
<node id="di">
  <data key="d4">Variable</data>
</node>
<node id="dev">
  <data key="d4">Variable</data>
</node>
<node id="n">
  <data key="d4">Variable</data>
</node>
<node id="copy_to_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="spin_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="list_for_each_entry">
  <data key="d4">FunctionCall</data>
</node>
<node id="BT_DBG">
  <data key="d4">FunctionCall</data>
</node>
<node id="bacpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_user(dev_num, (u16 __user *</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!dev_num || dev_num &gt; (PAGE_SIZE * 4</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!dl</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">test_bit(RFCOMM_TTY_RELEASED, &amp;dev-&gt;flags</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">++n &gt;= dev_num</data>
</node>
<edge source="rfcomm_get_dev_list" target="__user">
  <data key="d6">declares</data>
</edge>
<edge source="rfcomm_get_dev_list" target="dl">
  <data key="d6">declares</data>
</edge>
<edge source="rfcomm_get_dev_list" target="di">
  <data key="d6">declares</data>
</edge>
<edge source="rfcomm_get_dev_list" target="dev">
  <data key="d6">declares</data>
</edge>
<edge source="rfcomm_get_dev_list" target="n">
  <data key="d6">declares</data>
</edge>
<edge source="rfcomm_get_dev_list" target="copy_to_user">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="spin_lock">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="kmalloc">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="list_for_each_entry">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="BT_DBG">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="bacpy">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="spin_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="kfree">
  <data key="d6">calls</data>
</edge>
<edge source="rfcomm_get_dev_list" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="rfcomm_get_dev_list" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="rfcomm_get_dev_list" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="rfcomm_get_dev_list" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="rfcomm_get_dev_list" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="__user" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="__user" target="rfcomm_get_dev_list">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dl" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dl" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dl" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dl" target="kfree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="di" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="di" target="bacpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="di" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="di" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="di" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dev" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dev" target="spin_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="list_for_each_entry">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="spin_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="n" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>