<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-13135</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="ReadCUTImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="BImgBuff">
  <data key="d4">Variable</data>
</node>
<node id="EncodedByte">
  <data key="d4">Variable</data>
</node>
<node id="depth">
  <data key="d4">Variable</data>
</node>
<node id="ldblk">
  <data key="d4">Variable</data>
</node>
<node id="binary">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetQuantumRange">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="ClampToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="InsertRow">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowCUTReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d4">FunctionCall</data>
</node>
<node id="InheritException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobLSBShort">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette != NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">clone_info != NULL</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Header.Width==0 || Header.Height==0 || Header.Reserved!=0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(int</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EncodedByte!=1</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ldblk==(int</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">2*ldblk==(int</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">8*ldblk==(int</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i==0</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(clone_info=CloneImageInfo(image_info</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">clone_info-&gt;filename[i]=='.'</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">clone_info-&gt;filename[i]=='/' || clone_info-&gt;filename[i]=='\\' ||
         clone_info-&gt;filename[i]==':' </data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(clone_info-&gt;file=fopen_utf8(clone_info-&gt;filename,"rb"</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(clone_info-&gt;file=fopen_utf8(clone_info-&gt;filename,"rb"</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(clone_info-&gt;file=fopen_utf8(clone_info-&gt;filename,"rb"</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> (palette=AcquireImage(clone_info</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette!=NULL</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">strncmp(PalHeader.FileId,"AH",2</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PalHeader.MaxIndex&lt;1</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,image-&gt;colors</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PalHeader.MaxRed==0</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PalHeader.MaxGreen==0</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PalHeader.MaxBlue==0</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(j % 512</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">QuantumRange != (Quantum</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">QuantumRange != (Quantum</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">QuantumRange != (Quantum</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette==NULL</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,image-&gt;colors</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BImgBuff==NULL</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette != NULL</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">clone_info != NULL</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ssize_t</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">j==0</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(int</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette==NULL</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetCutColors(image</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colormap[i].red!=sample</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colormap[i].green!=sample</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colormap[i].blue!=sample</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetPixelRed(q</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BImgBuff != NULL</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">palette != NULL</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">clone_info != NULL</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="for_61">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0;i&lt;=(int</data>
</node>
<node id="for_62">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_63">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (int</data>
</node>
<node id="for_64">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_65">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_66">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=0; j &lt; (ssize_t</data>
</node>
<node id="while_67">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(int</data>
</node>
<node id="while_68">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">--i&gt;0</data>
</node>
<node id="while_69">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(int</data>
</node>
<edge source="ReadCUTImage" target="BImgBuff">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCUTImage" target="EncodedByte">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCUTImage" target="depth">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCUTImage" target="ldblk">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCUTImage" target="binary">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="GetQuantumRange">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="DestroyImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ScaleCharToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ClampToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="InsertRow">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ThrowCUTReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="CopyMagickString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="InheritException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="TellBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ReadBlobLSBShort">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="ReadBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SyncImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="SeekBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="DestroyImageInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCUTImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_61">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_62">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_63">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_64">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_65">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="for_66">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="while_67">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="while_68">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCUTImage" target="while_69">
  <data key="d6">contains</data>
</edge>
<edge source="BImgBuff" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="BImgBuff" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="BImgBuff" target="RelinquishMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="BImgBuff" target="InsertRow">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="BImgBuff" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="BImgBuff" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="BImgBuff" target="if_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="BImgBuff" target="for_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="EncodedByte" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="EncodedByte" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="EncodedByte" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="EncodedByte" target="if_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="EncodedByte" target="for_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="EncodedByte" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="depth" target="InsertRow">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="depth" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="depth" target="if_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="depth" target="for_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ldblk" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ldblk" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ldblk" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ldblk" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ldblk" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ldblk" target="if_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ldblk" target="for_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ldblk" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>