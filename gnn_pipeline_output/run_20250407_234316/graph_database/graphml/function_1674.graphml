<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-13297</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="AdaptiveThresholdImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="y">
  <data key="d5">Variable</data>
</node>
<node id="height">
  <data key="d5">Variable</data>
</node>
<node id="mean">
  <data key="d5">Variable</data>
</node>
<node id="bias">
  <data key="d5">Variable</data>
</node>
<node id="width">
  <data key="d5">Variable</data>
</node>
<node id="GetPixelChannels">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageStorageClass">
  <data key="d5">FunctionCall</data>
</node>
<node id="defined">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireAuthenticCacheView">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPixelChannelTraits">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireVirtualCacheView">
  <data key="d5">FunctionCall</data>
</node>
<node id="QueueCacheViewAuthenticPixels">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetCacheViewVirtualPixels">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyCacheView">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetPixelChannel">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPixelChannelChannel">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">threshold_image == (Image *</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">width == 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(p == (const Quantum *</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(traits == UndefinedPixelTrait</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(threshold_traits &amp; CopyPixelTrait</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">u == (ssize_t</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(traits == UndefinedPixelTrait</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(threshold_traits &amp; CopyPixelTrait</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SyncCacheViewAuthenticPixels(threshold_view,exception</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;progress_monitor != (MagickProgressMonitor</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">proceed == MagickFalse</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_17">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">v=0; v &lt; (ssize_t</data>
</node>
<node id="for_18">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">u=0; u &lt; (ssize_t</data>
</node>
<node id="for_19">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_20">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_21">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">v=0; v &lt; (ssize_t</data>
</node>
<edge source="AdaptiveThresholdImage" target="y">
  <data key="d7">declares</data>
</edge>
<edge source="AdaptiveThresholdImage" target="height">
  <data key="d7">declares</data>
</edge>
<edge source="AdaptiveThresholdImage" target="mean">
  <data key="d7">declares</data>
</edge>
<edge source="AdaptiveThresholdImage" target="bias">
  <data key="d7">declares</data>
</edge>
<edge source="AdaptiveThresholdImage" target="width">
  <data key="d7">declares</data>
</edge>
<edge source="AdaptiveThresholdImage" target="GetPixelChannels">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="SetImageStorageClass">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="defined">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="AcquireAuthenticCacheView">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="GetPixelChannelTraits">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="AcquireVirtualCacheView">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="QueueCacheViewAuthenticPixels">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="CloneImage">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="GetCacheViewVirtualPixels">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="DestroyCacheView">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="SetPixelChannel">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="SetImageProgress">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="GetPixelChannelChannel">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="DestroyImage">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_17">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_18">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_19">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_20">
  <data key="d7">contains</data>
</edge>
<edge source="AdaptiveThresholdImage" target="for_21">
  <data key="d7">contains</data>
</edge>
<edge source="y" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="y" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="y" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="y" target="for_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="height" target="AdaptiveThresholdImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="height" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="height" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="height" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="height" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="height" target="for_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mean" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mean" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mean" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mean" target="for_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bias" target="AdaptiveThresholdImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bias" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bias" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bias" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bias" target="for_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="width" target="AdaptiveThresholdImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="width" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="width" target="for_21">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>