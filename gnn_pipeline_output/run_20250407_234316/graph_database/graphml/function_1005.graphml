<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-8831</data>
<data key="d2">6.9</data>
<data key="d3">MEDIUM</data>
<node id="saa7164_bus_get">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="peekonly">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="bus">
  <data key="d4">Variable</data>
</node>
<node id="dev">
  <data key="d4">Variable</data>
</node>
<node id="buf">
  <data key="d4">Variable</data>
</node>
<node id="msg_tmp">
  <data key="d4">Variable</data>
</node>
<node id="mutex_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="saa7164_bus_dumpmsg">
  <data key="d4">FunctionCall</data>
</node>
<node id="le16_to_cpu">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="saa7164_writel">
  <data key="d4">FunctionCall</data>
</node>
<node id="saa7164_readl">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy_fromio">
  <data key="d4">FunctionCall</data>
</node>
<node id="printk">
  <data key="d4">FunctionCall</data>
</node>
<node id="le32_to_cpu">
  <data key="d4">FunctionCall</data>
</node>
<node id="saa7164_bus_verify">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg == NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg-&gt;size &gt; dev-&gt;bus.m_wMaxReqSize</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(peekonly == 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curr_gwp == curr_grp</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curr_gwp &gt;= curr_grp</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes_to_read &gt; write_distance</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">new_grp &gt; bus-&gt;m_dwSizeGetRing</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">peekonly</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(msg_tmp.id != msg-&gt;id</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curr_gwp &gt;= curr_grp</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes_to_read &gt; write_distance</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">new_grp &gt; bus-&gt;m_dwSizeGetRing</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">space_rem &lt; sizeof(*msg</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">buf</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">space_rem == sizeof(*msg</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">buf</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">buf</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">buf</data>
</node>
<edge source="saa7164_bus_get" target="peekonly">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="bus">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="dev">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="buf">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="msg_tmp">
  <data key="d6">declares</data>
</edge>
<edge source="saa7164_bus_get" target="mutex_lock">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="saa7164_bus_dumpmsg">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="le16_to_cpu">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="mutex_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="saa7164_writel">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="saa7164_readl">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="memcpy_fromio">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="printk">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="le32_to_cpu">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="saa7164_bus_verify">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="saa7164_bus_get" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="saa7164_bus_get" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="peekonly" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="peekonly" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="peekonly" target="saa7164_bus_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bus" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bus" target="saa7164_writel">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bus" target="saa7164_readl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bus" target="memcpy_fromio">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bus" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bus" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="saa7164_bus_dumpmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="saa7164_bus_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="saa7164_bus_verify">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="buf" target="saa7164_bus_dumpmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buf" target="saa7164_bus_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buf" target="memcpy_fromio">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buf" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg_tmp" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg_tmp" target="saa7164_bus_dumpmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg_tmp" target="memcpy_fromio">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg_tmp" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg_tmp" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg_tmp" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>