<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-6768</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="detach">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="navigationDisabler">
  <data key="d3">FunctionCall</data>
</node>
<node id="prepareForDestruction">
  <data key="d3">FunctionCall</data>
</node>
<node id="remove">
  <data key="d3">FunctionCall</data>
</node>
<node id="frameHost">
  <data key="d3">FunctionCall</data>
</node>
<node id="stopActiveDOMObjects">
  <data key="d3">FunctionCall</data>
</node>
<node id="notifyDocumentWasDetached">
  <data key="d3">FunctionCall</data>
</node>
<node id="documentDetached">
  <data key="d3">FunctionCall</data>
</node>
<node id="inputMethodController">
  <data key="d3">FunctionCall</data>
</node>
<node id="view">
  <data key="d3">FunctionCall</data>
</node>
<node id="TRACE_EVENT0">
  <data key="d3">FunctionCall</data>
</node>
<node id="setTimerTaskRunner">
  <data key="d3">FunctionCall</data>
</node>
<node id="advanceTo">
  <data key="d3">FunctionCall</data>
</node>
<node id="styleEngine">
  <data key="d3">FunctionCall</data>
</node>
<node id="ASSERT">
  <data key="d3">FunctionCall</data>
</node>
<node id="clear">
  <data key="d3">FunctionCall</data>
</node>
<node id="notifyContextDestroyed">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!isActive(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">LocalDOMWindow* window = this-&gt;domWindow(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">page(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_frame-&gt;loader(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_scriptedAnimationController</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">svgExtensions(</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_domWindow</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_layoutView</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">registrationContext(</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_focusedElement.get(</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">frameHost(</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">this == &amp;axObjectCacheOwner(</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">this != &amp;axObjectCacheOwner(</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">AXObjectCache* cache = existingAXObjectCache(</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!loader(</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_importsController</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_mediaQueryMatcher</data>
</node>
<node id="for_17">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">Node&amp; node : NodeTraversal::descendantsOf(*this</data>
</node>
<edge source="detach" target="navigationDisabler">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="prepareForDestruction">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="remove">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="frameHost">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="stopActiveDOMObjects">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="notifyDocumentWasDetached">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="documentDetached">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="inputMethodController">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="view">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="TRACE_EVENT0">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="setTimerTaskRunner">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="advanceTo">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="styleEngine">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="ASSERT">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="clear">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="notifyContextDestroyed">
  <data key="d5">calls</data>
</edge>
<edge source="detach" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="detach" target="for_17">
  <data key="d5">contains</data>
</edge>
</graph></graphml>