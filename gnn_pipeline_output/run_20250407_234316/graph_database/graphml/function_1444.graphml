<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-14323</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="ssdp_recv">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="sin">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="ifs">
  <data key="d5">Variable</data>
</node>
<node id="sd">
  <data key="d5">Variable</data>
</node>
<node id="sa">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="salen">
  <data key="d5">Variable</data>
</node>
<node id="strchr">
  <data key="d5">FunctionCall</data>
</node>
<node id="send_message">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="recvfrom">
  <data key="d5">FunctionCall</data>
</node>
<node id="find_outbound">
  <data key="d5">FunctionCall</data>
</node>
<node id="logit">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcasestr">
  <data key="d5">FunctionCall</data>
</node>
<node id="strstr">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &gt; 0</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">sa.sa_family != AF_INET</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strstr(buf, "M-SEARCH *"</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ifs</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!type</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!type</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ptr</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcmp(supported_types[i], type</data>
</node>
<node id="for_8">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; supported_types[i]; i++</data>
</node>
<node id="while_9">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">isspace(*type</data>
</node>
<edge source="ssdp_recv" target="sin">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="ifs">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="sd">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="sa">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="salen">
  <data key="d7">declares</data>
</edge>
<edge source="ssdp_recv" target="strchr">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="send_message">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="recvfrom">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="find_outbound">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="logit">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="strcasestr">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="strstr">
  <data key="d7">calls</data>
</edge>
<edge source="ssdp_recv" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="for_8">
  <data key="d7">contains</data>
</edge>
<edge source="ssdp_recv" target="while_9">
  <data key="d7">contains</data>
</edge>
<edge source="sin" target="logit">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sin" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sin" target="while_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ifs" target="send_message">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ifs" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifs" target="while_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sd" target="recvfrom">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sd" target="ssdp_recv">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sa" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="send_message">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sa" target="find_outbound">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sa" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sa" target="while_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="memset">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="recvfrom">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="strcasestr">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="strstr">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_9">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>