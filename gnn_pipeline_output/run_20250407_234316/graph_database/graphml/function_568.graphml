<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2015-2697</data>
<data key="d4">4.0</data>
<data key="d5">MEDIUM</data>
<node id="build_principal_va">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="realm">
  <data key="d6">Variable</data>
</node>
<node id="int">
  <data key="d6">Variable</data>
</node>
<node id="component">
  <data key="d6">Variable</data>
</node>
<node id="r">
  <data key="d6">Variable</data>
</node>
<node id="realloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="strdup">
  <data key="d6">FunctionCall</data>
</node>
<node id="free">
  <data key="d6">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d6">FunctionCall</data>
</node>
<node id="make_data">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!data</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!retval</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!r</data>
</node>
<node id="if_3">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">count == size</data>
</node>
<node id="if_4">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">new_data</data>
</node>
<node id="if_5">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!retval</data>
</node>
<node id="if_6">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!data[count].data</data>
</node>
<node id="if_7">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!retval</data>
</node>
<node id="if_8">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">data</data>
</node>
<node id="while_9">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">!retval &amp;&amp; (component = va_arg(ap, char *</data>
</node>
<node id="while_10">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">--count &gt;= 0</data>
</node>
<edge source="build_principal_va" target="realm">
  <data key="d8">declares</data>
</edge>
<edge source="build_principal_va" target="int">
  <data key="d8">declares</data>
</edge>
<edge source="build_principal_va" target="component">
  <data key="d8">declares</data>
</edge>
<edge source="build_principal_va" target="r">
  <data key="d8">declares</data>
</edge>
<edge source="build_principal_va" target="realloc">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="strdup">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="free">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="malloc">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="strlen">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="make_data">
  <data key="d8">calls</data>
</edge>
<edge source="build_principal_va" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_3">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_4">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_5">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_6">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_7">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="if_8">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="while_9">
  <data key="d8">contains</data>
</edge>
<edge source="build_principal_va" target="while_10">
  <data key="d8">contains</data>
</edge>
<edge source="realm" target="strdup">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="realm" target="build_principal_va">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="realm" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="realm" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="int" target="build_principal_va">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="component" target="while_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="component" target="strdup">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="component" target="strlen">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="component" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="r" target="if_1">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="r" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="r" target="if_5">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="r" target="if_7">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="r" target="while_9">
  <data key="d8">used_in_condition</data>
</edge>
</graph></graphml>