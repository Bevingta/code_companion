<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-13134</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadBMPImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="packet_size">
  <data key="d4">Variable</data>
</node>
<node id="intent">
  <data key="d4">Variable</data>
</node>
<node id="datum">
  <data key="d4">Variable</data>
</node>
<node id="gamma">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="one">
  <data key="d4">Variable</data>
</node>
<node id="sample">
  <data key="d4">Variable</data>
</node>
<node id="bmp_colormap">
  <data key="d4">Variable</data>
</node>
<node id="ReadBlobLSBSignedLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetVirtualMemoryBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyStringInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DecodeImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireNextImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="else">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProfile">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="MagickAbsoluteValue">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowFileException">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="DuplicateBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobLSBLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishVirtualMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelAlpha">
  <data key="d4">FunctionCall</data>
</node>
<node id="FlipImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelChannels">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetStringInfoDatum">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d4">FunctionCall</data>
</node>
<node id="LogMagickEvent">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireVirtualMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobLSBShort">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="BMP_DENOM">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReplaceImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="zero">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="PerceptibleReciprocal">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireStringInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ValidateColormapValue">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != 2</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != 2</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 2</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.size == 12</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.size &lt; 40</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(MagickSizeType</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.size &gt; 40</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.size &gt; 108</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(MagickSizeType</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(MagickSizeType</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.width &lt;= 0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.height == 0</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.planes != 1</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.bits_per_pixel != 1</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.bits_per_pixel &lt; 16 &amp;&amp;
        bmp_info.number_colors &gt; (1U &lt;&lt; bmp_info.bits_per_pixel</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression == 1</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression == 2</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression == 3</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.bits_per_pixel &lt; 16</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colors == 0</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,image-&gt;colors,exception</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_colormap == (unsigned char *</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.size == 12</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">packet_size == 4</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.offset_bits == offset_bits</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.compression == BI_RLE4</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(MagickSizeType</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression == BI_RGB</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.compression == BI_RGB</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;alpha_trait == UndefinedPixelTrait</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*(p+3</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.bits_per_pixel == 16</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.bits_per_pixel == 16</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.red_mask != 0</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift.red &gt;= 32U</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.green_mask != 0</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift.green &gt;= 32U</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.blue_mask != 0</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift.blue &gt;= 32U</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.alpha_mask != 0</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift.alpha &gt;= 32U</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample &gt;= 32U</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample &gt;= 32U</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample &gt;= 32U</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sample &gt;= 32U</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 8</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 2</data>
</node>
<node id="if_71">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &lt; (ssize_t</data>
</node>
<node id="if_72">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_73">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_74">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_75">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression == BI_RLE8</data>
</node>
<node id="if_76">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_77">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_78">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_79">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_80">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression != BI_RGB</data>
</node>
<node id="if_81">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_82">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.red == 5</data>
</node>
<node id="if_83">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.red &lt;= 8</data>
</node>
<node id="if_84">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.green == 5</data>
</node>
<node id="if_85">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.green == 6</data>
</node>
<node id="if_86">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.green &lt;= 8</data>
</node>
<node id="if_87">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.blue == 5</data>
</node>
<node id="if_88">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.blue &lt;= 8</data>
</node>
<node id="if_89">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_90">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.alpha &lt;= 8</data>
</node>
<node id="if_91">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_92">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_93">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_94">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_95">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_96">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_97">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_98">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.compression != BI_RGB</data>
</node>
<node id="if_99">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_100">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.red == 8</data>
</node>
<node id="if_101">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.green == 8</data>
</node>
<node id="if_102">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.blue == 8</data>
</node>
<node id="if_103">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_104">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_bits.alpha == 8</data>
</node>
<node id="if_105">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_106">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_107">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_108">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y &gt; 0</data>
</node>
<node id="if_109">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_110">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bmp_info.height &lt; 0</data>
</node>
<node id="if_111">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flipped_image != (Image *</data>
</node>
<node id="if_112">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bmp_info.colorspace == 0x4D424544L</data>
</node>
<node id="if_113">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(offset &lt; TellBlob(image</data>
</node>
<node id="if_114">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">profile == (StringInfo *</data>
</node>
<node id="if_115">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ReadBlob(image,(size_t</data>
</node>
<node id="if_116">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">profile_size_orig &lt; profile_size</data>
</node>
<node id="if_117">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_118">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;number_scenes != 0</data>
</node>
<node id="if_119">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_120">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset != 0</data>
</node>
<node id="if_121">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(offset &lt; TellBlob(image</data>
</node>
<node id="if_122">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count == 2</data>
</node>
<node id="if_123">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetNextImageInList(image</data>
</node>
<node id="if_124">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_125">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="for_126">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_127">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_128">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_129">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_130">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_131">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=0; bit &lt; 8; bit++</data>
</node>
<node id="for_132">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=0; bit &lt; (image-&gt;columns % 8</data>
</node>
<node id="for_133">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_134">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_135">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_136">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=(ssize_t</data>
</node>
<node id="for_137">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_138">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_139">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_140">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_141">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=(ssize_t</data>
</node>
<node id="for_142">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_143">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">LocaleNCompare((char *</data>
</node>
<node id="while_144">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.red_mask &lt;&lt; shift.red</data>
</node>
<node id="while_145">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.green_mask &lt;&lt; shift.green</data>
</node>
<node id="while_146">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.blue_mask &lt;&lt; shift.blue</data>
</node>
<node id="while_147">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.alpha_mask &lt;&lt; shift.alpha</data>
</node>
<node id="while_148">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.red_mask &lt;&lt; sample</data>
</node>
<node id="while_149">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.green_mask &lt;&lt; sample</data>
</node>
<node id="while_150">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.blue_mask &lt;&lt; sample</data>
</node>
<node id="while_151">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">((bmp_info.alpha_mask &lt;&lt; sample</data>
</node>
<node id="while_152">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">IsBMP(magick,2</data>
</node>
<node id="switch_153">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">bmp_info.compression</data>
</node>
<node id="switch_154">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">(int</data>
</node>
<node id="switch_155">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">bmp_info.compression</data>
</node>
<node id="switch_156">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">bmp_info.bits_per_pixel</data>
</node>
<edge source="ReadBMPImage" target="packet_size">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="intent">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="datum">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="gamma">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="one">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="sample">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="bmp_colormap">
  <data key="d6">declares</data>
</edge>
<edge source="ReadBMPImage" target="ReadBlobLSBSignedLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="GetVirtualMemoryBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="DestroyStringInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="DecodeImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="AcquireNextImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="else">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetImageProfile">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ScaleCharToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="MagickAbsoluteValue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ThrowFileException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="DuplicateBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ReadBlobLSBLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="RelinquishVirtualMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetPixelAlpha">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="FlipImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="GetPixelChannels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="GetStringInfoDatum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="CopyMagickString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="LogMagickEvent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="AcquireVirtualMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="TellBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ReadBlobLSBShort">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="BMP_DENOM">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ReplaceImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="zero">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SyncImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="PerceptibleReciprocal">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SyncNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="AcquireStringInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="SeekBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="ValidateColormapValue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadBMPImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_71">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_72">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_73">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_74">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_75">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_76">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_77">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_78">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_79">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_80">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_81">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_82">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_83">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_84">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_85">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_86">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_87">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_88">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_89">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_90">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_91">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_92">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_93">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_94">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_95">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_96">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_97">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_98">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_99">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_100">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_101">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_102">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_103">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_104">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_105">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_106">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_107">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_108">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_109">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_110">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_111">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_112">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_113">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_114">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_115">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_116">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_117">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_118">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_119">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_120">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_121">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_122">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_123">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_124">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="if_125">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_126">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_127">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_128">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_129">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_130">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_131">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_132">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_133">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_134">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_135">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_136">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_137">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_138">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_139">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_140">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_141">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="for_142">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_143">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_144">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_145">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_146">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_147">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_148">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_149">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_150">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_151">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="while_152">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="switch_153">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="switch_154">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="switch_155">
  <data key="d6">contains</data>
</edge>
<edge source="ReadBMPImage" target="switch_156">
  <data key="d6">contains</data>
</edge>
<edge source="packet_size" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="packet_size" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="packet_size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="packet_size" target="for_126">
  <data key="d6">used_in_body</data>
</edge>
<edge source="intent" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="intent" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datum" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datum" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datum" target="if_113">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datum" target="if_114">
  <data key="d6">used_in_body</data>
</edge>
<edge source="datum" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="PerceptibleReciprocal">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gamma" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_66">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_77">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_78">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_80">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_91">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_92">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_95">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_96">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_98">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_103">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_104">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_105">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_106">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_110">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_111">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_112">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_114">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_116">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_143">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_144">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_145">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_146">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_147">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_148">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_149">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_150">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_151">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_153">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_155">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_156">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="one" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_60">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sample" target="while_148">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="while_149">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="while_150">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="while_151">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sample" target="if_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="RelinquishMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bmp_colormap" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bmp_colormap" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bmp_colormap" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>