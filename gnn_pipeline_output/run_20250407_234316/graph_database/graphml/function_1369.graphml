<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-6794</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="DetectFlow">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="pass">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="DetectRun">
  <data key="d3">FunctionCall</data>
</node>
<node id="FlowGetAppProtocol">
  <data key="d3">FunctionCall</data>
</node>
<node id="DeStateUpdateInspectTransactionId">
  <data key="d3">FunctionCall</data>
</node>
<node id="FlowGetDisruptionFlags">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(p-&gt;flags &amp; PKT_NOPACKET_INSPECTION</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pass &amp;&amp; AppLayerParserProtocolSupportsTxs(p-&gt;proto, alproto</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">p-&gt;flowflags &amp; FLOW_PKT_TOSERVER</data>
</node>
<edge source="DetectFlow" target="pass">
  <data key="d5">declares</data>
</edge>
<edge source="DetectFlow" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="DetectFlow" target="DetectRun">
  <data key="d5">calls</data>
</edge>
<edge source="DetectFlow" target="FlowGetAppProtocol">
  <data key="d5">calls</data>
</edge>
<edge source="DetectFlow" target="DeStateUpdateInspectTransactionId">
  <data key="d5">calls</data>
</edge>
<edge source="DetectFlow" target="FlowGetDisruptionFlags">
  <data key="d5">calls</data>
</edge>
<edge source="DetectFlow" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="DetectFlow" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="DetectFlow" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="pass" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pass" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="DeStateUpdateInspectTransactionId">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="FlowGetDisruptionFlags">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>