<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-6500</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadSUNImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="bytes_per_pixel">
  <data key="d4">Variable</data>
</node>
<node id="one">
  <data key="d4">Variable</data>
</node>
<node id="sun_colormap">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="bit">
  <data key="d4">Variable</data>
</node>
<node id="GetAuthenticIndexQueue">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DecodeImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireNextImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowFileException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="InheritException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobMSBLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.magic != 0x59a66a95</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.height != 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.type != RT_STANDARD</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.maptype == RMT_NONE</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.depth != 1</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.maptype != RMT_NONE</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.depth &lt; 24</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.maptype == RMT_NONE</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.maptype == RMT_EQUAL_RGB</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,image-&gt;colors</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_colormap == (unsigned char *</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_colormap == (unsigned char *</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.length == 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sun_info.type != RT_ENCODED</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">HeapOverflowSanityCheck(sun_info.width,sun_info.depth</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_data == (unsigned char *</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(height == 0</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bytes_per_line &gt;&gt; 1</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">HeapOverflowSanityCheck(height,bytes_per_line</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_pixels == (unsigned char *</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.type == RT_ENCODED</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.length &gt; pixels_length</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.depth == 1</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 8</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(((image-&gt;columns/8</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 2</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte != MagickFalse</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;matte != MagickFalse</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.type == RT_STANDARD</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colors != 0</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((bytes_per_pixel*image-&gt;columns</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;number_scenes != 0</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sun_info.magic == 0x59a66a95</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetNextImageInList(image</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="for_61">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_62">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_63">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_64">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_65">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_66">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=7; bit &gt;= 0; bit--</data>
</node>
<node id="for_67">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=7; bit &gt;= (int</data>
</node>
<node id="for_68">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_69">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_70">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_71">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_72">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sun_info.magic == 0x59a66a95</data>
</node>
<node id="switch_73">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">sun_info.maptype</data>
</node>
<edge source="ReadSUNImage" target="bytes_per_pixel">
  <data key="d6">declares</data>
</edge>
<edge source="ReadSUNImage" target="one">
  <data key="d6">declares</data>
</edge>
<edge source="ReadSUNImage" target="sun_colormap">
  <data key="d6">declares</data>
</edge>
<edge source="ReadSUNImage" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="ReadSUNImage" target="bit">
  <data key="d6">declares</data>
</edge>
<edge source="ReadSUNImage" target="GetAuthenticIndexQueue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="DecodeImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="AcquireNextImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ScaleCharToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ThrowFileException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="InheritException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="ReadBlobMSBLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="CopyMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="SyncNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadSUNImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_61">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_62">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_63">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_64">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_65">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_66">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_67">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_68">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_69">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_70">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="for_71">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="while_72">
  <data key="d6">contains</data>
</edge>
<edge source="ReadSUNImage" target="switch_73">
  <data key="d6">contains</data>
</edge>
<edge source="bytes_per_pixel" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bytes_per_pixel" target="if_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes_per_pixel" target="if_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes_per_pixel" target="for_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="one" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sun_colormap" target="RelinquishMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sun_colormap" target="AcquireQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sun_colormap" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sun_colormap" target="ScaleCharToQuantum">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sun_colormap" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="for_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="for_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="for_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sun_colormap" target="switch_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_43">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bit" target="for_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="for_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bit" target="SetPixelIndex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bit" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="for_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="for_65">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>