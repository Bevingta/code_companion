<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-2148</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="xmalloc_optname_optval">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="option">
  <data key="d5">Variable</data>
</node>
<node id="nip">
  <data key="d5">Variable</data>
</node>
<node id="optflag">
  <data key="d5">Variable</data>
</node>
<node id="mask">
  <data key="d5">Variable</data>
</node>
<node id="val_u16">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="upper_length">
  <data key="d5">Variable</data>
</node>
<node id="pfx">
  <data key="d5">Variable</data>
</node>
<node id="opt_name">
  <data key="d5">Variable</data>
</node>
<node id="val_u32">
  <data key="d5">Variable</data>
</node>
<node id="bytes">
  <data key="d5">Variable</data>
</node>
<node id="move_from_unaligned32">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="prefix">
  <data key="d5">FunctionCall</data>
</node>
<node id="dname_dec">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprint_nip">
  <data key="d5">FunctionCall</data>
</node>
<node id="move_from_unaligned16">
  <data key="d5">FunctionCall</data>
</node>
<node id="6rdBRIPv4Address">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="format">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprint_nip6">
  <data key="d5">FunctionCall</data>
</node>
<node id="xmalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">type == OPTION_IP</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">type == OPTION_STRING_HOST &amp;&amp; !good_hostname(dest</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">mask &gt; 32</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &lt; 4</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &gt;= (1 + 1 + 16 + 4</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &lt; 0</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">dest</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">option[-1] == 0</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">dest</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">option[-1] == 1</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &lt; 0</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &lt; optlen /* || !(optflag-&gt;flags &amp; OPTION_LIST</data>
</node>
<node id="while_12">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">len &gt;= optlen</data>
</node>
<node id="while_13">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">len &gt;= 1 + 4</data>
</node>
<node id="while_14">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">--bytes &gt;= 0</data>
</node>
<node id="while_15">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">1</data>
</node>
<node id="while_16">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">1</data>
</node>
<node id="switch_17">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">type</data>
</node>
<edge source="xmalloc_optname_optval" target="option">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="nip">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="optflag">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="mask">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="val_u16">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="upper_length">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="pfx">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="opt_name">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="val_u32">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="bytes">
  <data key="d7">declares</data>
</edge>
<edge source="xmalloc_optname_optval" target="move_from_unaligned32">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="prefix">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="dname_dec">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="sprint_nip">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="move_from_unaligned16">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="6rdBRIPv4Address">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="sprintf">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="format">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="sprint_nip6">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="xmalloc">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="memcpy">
  <data key="d7">calls</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="while_12">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="while_13">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="while_14">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="while_15">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="while_16">
  <data key="d7">contains</data>
</edge>
<edge source="xmalloc_optname_optval" target="switch_17">
  <data key="d7">contains</data>
</edge>
<edge source="option" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="move_from_unaligned32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="dname_dec">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="sprint_nip">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="move_from_unaligned16">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="sprint_nip6">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="xmalloc_optname_optval">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="option" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="while_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="while_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="while_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="option" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nip" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nip" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nip" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nip" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="optflag" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="optflag" target="xmalloc_optname_optval">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="optflag" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mask" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="mask" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="mask" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mask" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mask" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="mask" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val_u16" target="move_from_unaligned16">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="val_u16" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="val_u16" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val_u16" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val_u16" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="upper_length" target="xmalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pfx" target="sprint_nip">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pfx" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pfx" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pfx" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pfx" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pfx" target="while_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pfx" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="opt_name" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="opt_name" target="xmalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="opt_name" target="xmalloc_optname_optval">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="val_u32" target="move_from_unaligned32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="val_u32" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="val_u32" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="while_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bytes" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="while_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="while_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>