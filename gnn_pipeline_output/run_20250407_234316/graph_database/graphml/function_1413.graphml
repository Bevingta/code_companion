<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-17547</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="TraceBezier">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="number_coordinates">
  <data key="d5">Variable</data>
</node>
<node id="Permutate">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="MagickMin">
  <data key="d5">FunctionCall</data>
</node>
<node id="pow">
  <data key="d5">FunctionCall</data>
</node>
<node id="fabs">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowMagickException">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">alpha &gt; (double</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">alpha &gt; (double</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">alpha &gt; (double</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">alpha &gt; (double</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(coefficients == (double *</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">points != (PointInfo *</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">coefficients != (double *</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">CheckPrimitiveExtent(mvg_info,control_points+1</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">TracePoint(p,points[i]</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">TracePoint(p,end</data>
</node>
<node id="for_10">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_11">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j=i+1; j &lt; (ssize_t</data>
</node>
<node id="for_12">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_13">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_14">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j=0; j &lt; (ssize_t</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<edge source="TraceBezier" target="number_coordinates">
  <data key="d7">declares</data>
</edge>
<edge source="TraceBezier" target="Permutate">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="MagickMin">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="pow">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="fabs">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="ThrowMagickException">
  <data key="d7">calls</data>
</edge>
<edge source="TraceBezier" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_10">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_11">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_12">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_13">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_14">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="TraceBezier" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="number_coordinates" target="MagickMin">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number_coordinates" target="AcquireQuantumMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number_coordinates" target="TraceBezier">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number_coordinates" target="for_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_coordinates" target="for_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_coordinates" target="for_13">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>