<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-6159</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="PassesTimingAllowCheck">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="StripWhiteSpace">
  <data key="d3">FunctionCall</data>
</node>
<node id="Create">
  <data key="d3">FunctionCall</data>
</node>
<node id="ToString">
  <data key="d3">FunctionCall</data>
</node>
<node id="Count">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetString">
  <data key="d3">FunctionCall</data>
</node>
<node id="IsEmpty">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">resource_origin-&gt;IsSameSchemeHostPort(&amp;initiator_security_origin</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">timing_allow_origin_string.IsEmpty(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">timing_allow_origin_string == "*"</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">timing_allow_origins.size(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">timing_allow_origins.size(</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">allow_origin_stripped == security_origin ||
        allow_origin_stripped == "*"</data>
</node>
<node id="for_6">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">const String&amp; allow_origin : timing_allow_origins</data>
</node>
<edge source="PassesTimingAllowCheck" target="StripWhiteSpace">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="Create">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="ToString">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="Count">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="GetString">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="IsEmpty">
  <data key="d5">calls</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="PassesTimingAllowCheck" target="for_6">
  <data key="d5">contains</data>
</edge>
</graph></graphml>