<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2015-1191</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="process">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="suf">
  <data key="d5">Variable</data>
</node>
<node id="path">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="sufs">
  <data key="d5">Variable</data>
</node>
<node id="next">
  <data key="d5">Variable</data>
</node>
<node id="method">
  <data key="d5">Variable</data>
</node>
<node id="st">
  <data key="d5">Variable</data>
</node>
<node id="file">
  <data key="d5">FunctionCall</data>
</node>
<node id="fflush">
  <data key="d5">FunctionCall</data>
</node>
<node id="compressed_suffix">
  <data key="d5">FunctionCall</data>
</node>
<node id="justname">
  <data key="d5">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="copymeta">
  <data key="d5">FunctionCall</data>
</node>
<node id="get_header">
  <data key="d5">FunctionCall</data>
</node>
<node id="show_info">
  <data key="d5">FunctionCall</data>
</node>
<node id="strncpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="bail">
  <data key="d5">FunctionCall</data>
</node>
<node id="MALLOC">
  <data key="d5">FunctionCall</data>
</node>
<node id="unlzw">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcmp">
  <data key="d5">FunctionCall</data>
</node>
<node id="closedir">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="in_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="gz">
  <data key="d5">FunctionCall</data>
</node>
<node id="putc">
  <data key="d5">FunctionCall</data>
</node>
<node id="open">
  <data key="d5">FunctionCall</data>
</node>
<node id="getchar">
  <data key="d5">FunctionCall</data>
</node>
<node id="RELEASE">
  <data key="d5">FunctionCall</data>
</node>
<node id="complain">
  <data key="d5">FunctionCall</data>
</node>
<node id="name">
  <data key="d5">FunctionCall</data>
</node>
<node id="entries">
  <data key="d5">FunctionCall</data>
</node>
<node id="directory">
  <data key="d5">FunctionCall</data>
</node>
<node id="SET_BINARY_MODE">
  <data key="d5">FunctionCall</data>
</node>
<node id="fstat">
  <data key="d5">FunctionCall</data>
</node>
<node id="REALLOC">
  <data key="d5">FunctionCall</data>
</node>
<node id="cat">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="single_compress">
  <data key="d5">FunctionCall</data>
</node>
<node id="list_info">
  <data key="d5">FunctionCall</data>
</node>
<node id="FREE">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">path == NULL</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">path != g.inf</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.inf[sizeof(g.inf</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lstat(g.inf, &amp;st</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">errno == ENOENT &amp;&amp; (g.list || g.decode</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*try == NULL || len + strlen(*try</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">errno == EOVERFLOW || errno == EFBIG</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">errno</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(st.st_mode &amp; S_IFMT</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(st.st_mode &amp; S_IFMT</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(st.st_mode &amp; S_IFMT</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(st.st_mode &amp; S_IFMT</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">here == NULL</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">roll == NULL</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">next-&gt;d_name[0] == 0 ||
                    (next-&gt;d_name[0] == '.' &amp;&amp; (next-&gt;d_name[1] == 0 ||
                     (next-&gt;d_name[1] == '.' &amp;&amp; next-&gt;d_name[2] == 0</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">item + len + 1 &gt; roll + hold</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bigger == NULL</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">base &gt; g.inf &amp;&amp; base[-1] != (unsigned char</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(size_t</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.inf[sizeof(g.inf</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!(g.force || g.list || g.decode</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode == 1 &amp;&amp; !g.pipeout &amp;&amp; !g.list</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">suf == 0</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind &lt; 0</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">method != 8 &amp;&amp; method != 257 &amp;&amp;
                /* gzip -cdf acts like cat on uncompressed input */
                !(method == -2 &amp;&amp; g.force &amp;&amp; g.pipeout &amp;&amp; g.decode != 2 &amp;&amp;
                  !g.list</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">method != -1</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode == 2</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">method == 8</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.list</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.list</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">path == NULL || g.pipeout</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outf == NULL</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!g.decode &amp;&amp; !g.force &amp;&amp; isatty(g.outd</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode &amp;&amp; (g.headis &amp; 1</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outf == NULL</data>
</node>
<node id="if_39">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outd &lt; 0 &amp;&amp; errno == EEXIST &amp;&amp; isatty(0</data>
</node>
<node id="if_40">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">reply &lt; 0 &amp;&amp; ch != ' ' &amp;&amp; ch != '\t'</data>
</node>
<node id="if_41">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">reply == 1</data>
</node>
<node id="if_42">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outd &lt; 0 &amp;&amp; errno == EEXIST</data>
</node>
<node id="if_43">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_44">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outd &lt; 0</data>
</node>
<node id="if_45">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.verbosity &gt; 1</data>
</node>
<node id="if_46">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode</data>
</node>
<node id="if_47">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">method == 8</data>
</node>
<node id="if_48">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">method == 257</data>
</node>
<node id="if_49">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.procs &gt; 1</data>
</node>
<node id="if_50">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.verbosity &gt; 1</data>
</node>
<node id="if_51">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_52">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.outd != 1</data>
</node>
<node id="if_53">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">close(g.outd</data>
</node>
<node id="if_54">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.ind != 0</data>
</node>
<node id="if_55">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!g.keep</data>
</node>
<node id="if_56">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">g.decode &amp;&amp; (g.headis &amp; 2</data>
</node>
<node id="while_57">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">lstat(g.inf, &amp;st</data>
</node>
<node id="while_58">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(next = readdir(here</data>
</node>
<node id="while_59">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">item + len + 1 &gt; roll + hold</data>
</node>
<node id="while_60">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">*item</data>
</node>
<node id="while_61">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">ch != EOF &amp;&amp; ch != '\n' &amp;&amp; ch != '\r'</data>
</node>
<edge source="process" target="suf">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="path">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="sufs">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="next">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="method">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="st">
  <data key="d7">declares</data>
</edge>
<edge source="process" target="file">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="fflush">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="compressed_suffix">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="justname">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="fprintf">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="copymeta">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="get_header">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="show_info">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="strncpy">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="memcpy">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="bail">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="MALLOC">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="unlzw">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="strcmp">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="closedir">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="strcpy">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="in_init">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="gz">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="putc">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="open">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="getchar">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="RELEASE">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="complain">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="name">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="entries">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="directory">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="SET_BINARY_MODE">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="fstat">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="REALLOC">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="cat">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="single_compress">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="list_info">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="FREE">
  <data key="d7">calls</data>
</edge>
<edge source="process" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_39">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_40">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_41">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_42">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_43">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_44">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_45">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_46">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_47">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_48">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_49">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_50">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_51">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_52">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_53">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_54">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_55">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="if_56">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="while_57">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="while_58">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="while_59">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="while_60">
  <data key="d7">contains</data>
</edge>
<edge source="process" target="while_61">
  <data key="d7">contains</data>
</edge>
<edge source="suf" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="suf" target="strcmp">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="strcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="gz">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="complain">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="name">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="suf" target="if_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="path" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="path" target="strncpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="path" target="bail">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="path" target="process">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="path" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="if_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="if_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="if_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="path" target="while_60">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="while_59">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="MALLOC">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="strcmp">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="strcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_35">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_37">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="while_57">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="while_58">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sufs" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sufs" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sufs" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="next" target="while_58">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="strcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="next" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="next" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="if_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="if_35">
  <data key="d7">used_in_body</data>
</edge>
<edge source="next" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_25">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_27">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_29">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_47">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="method" target="if_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="method" target="show_info">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="method" target="complain">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="method" target="if_23">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_24">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_26">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_28">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_43">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_44">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_45">
  <data key="d7">used_in_body</data>
</edge>
<edge source="method" target="if_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="st" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="st" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="st" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="while_57">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="st" target="file">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="fflush">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="fprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="MALLOC">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="strcmp">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="strcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="putc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="complain">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="fstat">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="st" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="st" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>