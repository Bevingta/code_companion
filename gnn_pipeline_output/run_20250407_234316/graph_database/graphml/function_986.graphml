<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9224</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="match_at">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="isnull">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="is_alloca">
  <data key="d4">Variable</data>
</node>
<node id="alloc_base">
  <data key="d4">Variable</data>
</node>
<node id="r">
  <data key="d4">Variable</data>
</node>
<node id="node">
  <data key="d4">Variable</data>
</node>
<node id="scv">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="num_comb_exp_check">
  <data key="d4">Variable</data>
</node>
<node id="mb_len">
  <data key="d4">Variable</data>
</node>
<node id="STACK_PUSH_ALT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_MEM_END">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_OPTION_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="fputs">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_RETURN">
  <data key="d4">FunctionCall</data>
</node>
<node id="STRING_CMP_IC">
  <data key="d4">FunctionCall</data>
</node>
<node id="enclen">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_STATE_CHECK_NUM_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_MEMNUM_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="ONIGENC_STEP_BACK">
  <data key="d4">FunctionCall</data>
</node>
<node id="BIT_STATUS_AT">
  <data key="d4">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="MOP_IN">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_NULL_CHECK_MEMST">
  <data key="d4">FunctionCall</data>
</node>
<node id="DATA_ENSURE">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_POS_NOT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_POS">
  <data key="d4">FunctionCall</data>
</node>
<node id="ONIGENC_MBC_CASE_FOLD">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_GET_MEM_START">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_AT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_NULL_CHECK_START">
  <data key="d4">FunctionCall</data>
</node>
<node id="fputc">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_STATE_CHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="ONIGENC_MBC_TO_CODE">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALIGNMENT_RIGHT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STRING_CMP_VALUE_IC">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_NULL_CHECK_MEMST_REC">
  <data key="d4">FunctionCall</data>
</node>
<node id="onigenc_get_prev_char_head">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_ENSURE">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_NULL_CHECK_END">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_CALL_FRAME">
  <data key="d4">FunctionCall</data>
</node>
<node id="STATE_CHECK_VAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_REPEAT_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="xmemcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="onig_print_compiled_byte_code">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_ABSADDR_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_ENSURED">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_STACK_INDEX">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_LENGTH_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_GET_REPEAT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STRING_CMP_VALUE">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_REPEAT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_NULL_CHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="history_tree_clear">
  <data key="d4">FunctionCall</data>
</node>
<node id="IS_POSIX_REGION">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_POINTER_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_ALT_WITH_STATE_CHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_MEM_END_MARK">
  <data key="d4">FunctionCall</data>
</node>
<node id="history_node_new">
  <data key="d4">FunctionCall</data>
</node>
<node id="STRING_CMP">
  <data key="d4">FunctionCall</data>
</node>
<node id="match">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_NULL_RETURN_MEMERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_LOOK_BEHIND_NOT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_PUSH_MEM_START">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_NULL_CHECK_REC">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_RELADDR_INC">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_INIT">
  <data key="d4">FunctionCall</data>
</node>
<node id="STACK_POS_END">
  <data key="d4">FunctionCall</data>
</node>
<node id="IS_DYNAMIC_OPTION">
  <data key="d4">FunctionCall</data>
</node>
<node id="make_capture_history_tree">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q &lt; end</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; best_len</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_FIND_LONGEST(option</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; msa-&gt;best_len</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">region</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_POSIX_REGION(msa-&gt;options</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[i] != INVALID_STACK_INDEX</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, i</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[i] != INVALID_STACK_INDEX</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, i</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">reg-&gt;capture_history != 0</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NULL(region-&gt;history_root</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r &lt; 0</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">region</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_FIND_CONDITION(option</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_FIND_NOT_EMPTY(option</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_FIND_LONGEST(option</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s++</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *q</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p++ != *s++</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *q</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p != *s</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BITSET_AT(((BitSetRef </data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ONIGENC_IS_MBC_HEAD(encode, s</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! onig_is_in_code_range(p, code</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! onig_is_in_code_range(q, code</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_HEAD(encode, s</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BITSET_AT(((BitSetRef </data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BITSET_AT(((BitSetRef </data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ONIGENC_IS_MBC_HEAD(encode, s</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! DATA_ENSURE_CHECK(mb_len</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">onig_is_in_code_range(p, code</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">onig_is_in_code_range(q, code</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_HEAD(encode, s</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BITSET_AT(((BitSetRef </data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">onig_is_code_in_cc_len(mb_len, code, node</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 1</data>
</node>
<node id="if_71">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == *s</data>
</node>
<node id="if_72">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_73">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == *s</data>
</node>
<node id="if_74">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 1</data>
</node>
<node id="if_75">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">scv</data>
</node>
<node id="if_76">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_77">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">scv</data>
</node>
<node id="if_78">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 1</data>
</node>
<node id="if_79">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_80">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_81">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_BEGIN(s</data>
</node>
<node id="if_82">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_83">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(s</data>
</node>
<node id="if_84">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ONIGENC_IS_MBC_WORD(encode, sprev, end</data>
</node>
<node id="if_85">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_86">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_BEGIN(s</data>
</node>
<node id="if_87">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DATA_ENSURE_CHECK1 &amp;&amp; ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_88">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(s</data>
</node>
<node id="if_89">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_WORD(encode, sprev, end</data>
</node>
<node id="if_90">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_91">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DATA_ENSURE_CHECK1 &amp;&amp; ONIGENC_IS_MBC_WORD(encode, s, end</data>
</node>
<node id="if_92">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_BEGIN(s</data>
</node>
<node id="if_93">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ON_STR_BEGIN(s</data>
</node>
<node id="if_94">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(s</data>
</node>
<node id="if_95">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ON_STR_BEGIN(s</data>
</node>
<node id="if_96">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! ON_STR_END(s</data>
</node>
<node id="if_97">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_BEGIN(s</data>
</node>
<node id="if_98">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NOTBOL(msa-&gt;options</data>
</node>
<node id="if_99">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, sprev, end</data>
</node>
<node id="if_100">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(s</data>
</node>
<node id="if_101">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_EMPTY_STR || !ONIGENC_IS_MBC_NEWLINE(encode, sprev, end</data>
</node>
<node id="if_102">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NOTEOL(msa-&gt;options</data>
</node>
<node id="if_103">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_104">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_CRNL(encode, s, end</data>
</node>
<node id="if_105">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(s</data>
</node>
<node id="if_106">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_EMPTY_STR || !ONIGENC_IS_MBC_NEWLINE(encode, sprev, end</data>
</node>
<node id="if_107">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NOTEOL(msa-&gt;options</data>
</node>
<node id="if_108">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_NEWLINE(encode, s, end</data>
</node>
<node id="if_109">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ONIGENC_IS_MBC_CRNL(encode, s, end</data>
</node>
<node id="if_110">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ON_STR_END(ss</data>
</node>
<node id="if_111">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s != msa-&gt;start</data>
</node>
<node id="if_112">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, mem</data>
</node>
<node id="if_113">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem &gt; num_mem</data>
</node>
<node id="if_114">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[mem]   == INVALID_STACK_INDEX</data>
</node>
<node id="if_115">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_start_stk[mem] == INVALID_STACK_INDEX</data>
</node>
<node id="if_116">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, mem</data>
</node>
<node id="if_117">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem &gt; num_mem</data>
</node>
<node id="if_118">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[mem]   == INVALID_STACK_INDEX</data>
</node>
<node id="if_119">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_start_stk[mem] == INVALID_STACK_INDEX</data>
</node>
<node id="if_120">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, mem</data>
</node>
<node id="if_121">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[mem]   == INVALID_STACK_INDEX</data>
</node>
<node id="if_122">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_start_stk[mem] == INVALID_STACK_INDEX</data>
</node>
<node id="if_123">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, mem</data>
</node>
<node id="if_124">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_fail</data>
</node>
<node id="if_125">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i == tlen</data>
</node>
<node id="if_126">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_end_stk[mem]   == INVALID_STACK_INDEX</data>
</node>
<node id="if_127">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mem_start_stk[mem] == INVALID_STACK_INDEX</data>
</node>
<node id="if_128">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BIT_STATUS_AT(reg-&gt;bt_mem_start, mem</data>
</node>
<node id="if_129">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_fail</data>
</node>
<node id="if_130">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i == tlen</data>
</node>
<node id="if_131">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">backref_match_at_nested_level(reg, stk, stk_base, ic
                     , case_fold_flag, (int </data>
</node>
<node id="if_132">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isnull</data>
</node>
<node id="if_133">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isnull</data>
</node>
<node id="if_134">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isnull == -1</data>
</node>
<node id="if_135">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isnull</data>
</node>
<node id="if_136">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isnull == -1</data>
</node>
<node id="if_137">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">scv</data>
</node>
<node id="if_138">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">scv</data>
</node>
<node id="if_139">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">scv</data>
</node>
<node id="if_140">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == *s &amp;&amp; DATA_ENSURE_CHECK1</data>
</node>
<node id="if_141">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == *s</data>
</node>
<node id="if_142">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">reg-&gt;repeat_range[mem].lower == 0</data>
</node>
<node id="if_143">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">reg-&gt;repeat_range[mem].lower == 0</data>
</node>
<node id="if_144">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stkp-&gt;u.repeat.count &gt;= reg-&gt;repeat_range[mem].upper</data>
</node>
<node id="if_145">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stkp-&gt;u.repeat.count &gt;= reg-&gt;repeat_range[mem].lower</data>
</node>
<node id="if_146">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stkp-&gt;u.repeat.count &lt; reg-&gt;repeat_range[mem].upper</data>
</node>
<node id="if_147">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stkp-&gt;u.repeat.count &gt;= reg-&gt;repeat_range[mem].lower</data>
</node>
<node id="if_148">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stkp-&gt;u.repeat.count == reg-&gt;repeat_range[mem].upper</data>
</node>
<node id="if_149">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NULL(s</data>
</node>
<node id="if_150">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_NULL(q</data>
</node>
<node id="if_151">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stk-&gt;u.state.state_check != 0</data>
</node>
<node id="for_152">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1; i &lt;= num_mem; i++</data>
</node>
<node id="for_153">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0, q = s; i &lt; 7 &amp;&amp; q &lt; end; i++</data>
</node>
<node id="for_154">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 20 - (bp - buf</data>
</node>
<node id="for_155">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1; i &lt;= num_mem; i++</data>
</node>
<node id="for_156">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1; i &lt;= num_mem; i++</data>
</node>
<node id="for_157">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; tlen; i++</data>
</node>
<node id="for_158">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; tlen; i++</data>
</node>
<node id="while_159">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<node id="while_160">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">len-- &gt; 0</data>
</node>
<node id="while_161">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">len-- &gt; 0</data>
</node>
<node id="while_162">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tlen-- &gt; 0</data>
</node>
<node id="while_163">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">p &lt; endp</data>
</node>
<node id="while_164">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">len-- &gt; 0</data>
</node>
<node id="while_165">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tlen-- &gt; 0</data>
</node>
<node id="while_166">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tlen-- &gt; 0</data>
</node>
<node id="while_167">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tlen2-- &gt; 0</data>
</node>
<node id="while_168">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_169">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_170">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_171">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_172">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_173">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">DATA_ENSURE_CHECK1</data>
</node>
<node id="while_174">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sprev + (len = enclen(encode, sprev</data>
</node>
<node id="while_175">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sprev + (len = enclen(encode, sprev</data>
</node>
<node id="while_176">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sprev + (len = enclen(encode, sprev</data>
</node>
<node id="while_177">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sprev + (len = enclen(encode, sprev</data>
</node>
<node id="while_178">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">sprev + (len = enclen(encode, sprev</data>
</node>
<node id="while_179">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<node id="switch_180">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">*p++</data>
</node>
<node id="switch_181">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">*p++</data>
</node>
<edge source="match_at" target="isnull">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="is_alloca">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="alloc_base">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="r">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="node">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="scv">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="num_comb_exp_check">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="mb_len">
  <data key="d6">declares</data>
</edge>
<edge source="match_at" target="STACK_PUSH_ALT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_MEM_END">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_OPTION_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="fputs">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_RETURN">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STRING_CMP_IC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="enclen">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_STATE_CHECK_NUM_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_MEMNUM_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="ONIGENC_STEP_BACK">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="BIT_STATUS_AT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="fprintf">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="MOP_IN">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_NULL_CHECK_MEMST">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="DATA_ENSURE">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_POS_NOT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_POS">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="ONIGENC_MBC_CASE_FOLD">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_GET_MEM_START">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_AT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_NULL_CHECK_START">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="fputc">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_STATE_CHECK">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="ONIGENC_MBC_TO_CODE">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="ALIGNMENT_RIGHT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STRING_CMP_VALUE_IC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_NULL_CHECK_MEMST_REC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="onigenc_get_prev_char_head">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_ENSURE">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_NULL_CHECK_END">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_CALL_FRAME">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STATE_CHECK_VAL">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_REPEAT_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="xmemcpy">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="onig_print_compiled_byte_code">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_ABSADDR_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_ENSURED">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_STACK_INDEX">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_LENGTH_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_GET_REPEAT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STRING_CMP_VALUE">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_REPEAT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_NULL_CHECK">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="history_tree_clear">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="IS_POSIX_REGION">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_POINTER_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_ALT_WITH_STATE_CHECK">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_MEM_END_MARK">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="history_node_new">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STRING_CMP">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="match">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="CHECK_NULL_RETURN_MEMERR">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_LOOK_BEHIND_NOT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_PUSH_MEM_START">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_NULL_CHECK_REC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="GET_RELADDR_INC">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_INIT">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="STACK_POS_END">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="IS_DYNAMIC_OPTION">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="make_capture_history_tree">
  <data key="d6">calls</data>
</edge>
<edge source="match_at" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_71">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_72">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_73">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_74">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_75">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_76">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_77">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_78">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_79">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_80">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_81">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_82">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_83">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_84">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_85">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_86">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_87">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_88">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_89">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_90">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_91">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_92">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_93">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_94">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_95">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_96">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_97">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_98">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_99">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_100">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_101">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_102">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_103">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_104">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_105">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_106">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_107">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_108">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_109">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_110">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_111">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_112">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_113">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_114">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_115">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_116">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_117">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_118">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_119">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_120">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_121">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_122">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_123">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_124">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_125">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_126">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_127">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_128">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_129">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_130">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_131">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_132">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_133">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_134">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_135">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_136">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_137">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_138">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_139">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_140">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_141">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_142">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_143">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_144">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_145">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_146">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_147">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_148">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_149">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_150">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="if_151">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_152">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_153">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_154">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_155">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_156">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_157">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="for_158">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_159">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_160">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_161">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_162">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_163">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_164">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_165">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_166">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_167">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_168">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_169">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_170">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_171">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_172">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_173">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_174">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_175">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_176">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_177">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_178">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="while_179">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="switch_180">
  <data key="d6">contains</data>
</edge>
<edge source="match_at" target="switch_181">
  <data key="d6">contains</data>
</edge>
<edge source="isnull" target="if_132">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="isnull" target="if_133">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="if_134">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="if_135">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="if_136">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="isnull" target="STACK_NULL_CHECK_MEMST">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="isnull" target="STACK_NULL_CHECK_MEMST_REC">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="isnull" target="STACK_NULL_CHECK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="isnull" target="STACK_NULL_CHECK_REC">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="isnull" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="while_178">
  <data key="d6">used_in_body</data>
</edge>
<edge source="isnull" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_125">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_130">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="for_157">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="for_158">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_160">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_161">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_162">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_164">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_165">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_166">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_167">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="while_174">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_175">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_176">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_177">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_178">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="DATA_ENSURE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="GET_LENGTH_INC">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_111">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_113">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_114">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_116">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_117">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_118">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_119">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_121">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_122">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_123">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_124">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_126">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_127">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_128">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_129">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_131">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="for_153">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_163">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="r" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_99">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_101">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_106">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_111">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_112">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_116">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_119">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_120">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_122">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_123">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_127">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_128">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_131">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_142">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_143">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_144">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_145">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_146">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_147">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_148">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_174">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_175">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_176">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_177">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_178">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="node" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="node" target="history_tree_clear">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="node" target="GET_POINTER_INC">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="node" target="CHECK_NULL_RETURN_MEMERR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="node" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="node" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="if_75">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="if_77">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="scv" target="if_137">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="scv" target="if_138">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="scv" target="if_139">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="scv" target="STATE_CHECK_VAL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="scv" target="if_76">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="while_172">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="while_173">
  <data key="d6">used_in_body</data>
</edge>
<edge source="scv" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_68">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_76">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_79">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_80">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_82">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_85">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_87">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_91">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_99">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_101">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_103">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_104">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_106">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_108">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_109">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="while_174">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="while_175">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="while_176">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="while_177">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="while_178">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="STACK_PUSH_ALT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="enclen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="ONIGENC_STEP_BACK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="ONIGENC_MBC_CASE_FOLD">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="ONIGENC_MBC_TO_CODE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="onigenc_get_prev_char_head">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="onig_print_compiled_byte_code">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mb_len" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mb_len" target="DATA_ENSURE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mb_len" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="for_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="while_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mb_len" target="switch_180">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>