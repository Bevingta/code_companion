<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-3872</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="outputBuffers">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="dst">
  <data key="d4">Variable</data>
</node>
<node id="srcV">
  <data key="d4">Variable</data>
</node>
<node id="srcU">
  <data key="d4">Variable</data>
</node>
<node id="srcYStride">
  <data key="d4">Variable</data>
</node>
<node id="height">
  <data key="d4">Variable</data>
</node>
<node id="srcUStride">
  <data key="d4">Variable</data>
</node>
<node id="width">
  <data key="d4">Variable</data>
</node>
<node id="srcVStride">
  <data key="d4">Variable</data>
</node>
<node id="iter">
  <data key="d4">Variable</data>
</node>
<node id="srcY">
  <data key="d4">Variable</data>
</node>
<node id="copyYV12FrameToOutputBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="outputBufferWidth">
  <data key="d4">FunctionCall</data>
</node>
<node id="notifyFillBufferDone">
  <data key="d4">FunctionCall</data>
</node>
<node id="begin">
  <data key="d4">FunctionCall</data>
</node>
<node id="vpx_codec_get_frame">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="getPortQueue">
  <data key="d4">FunctionCall</data>
</node>
<node id="android_errorWriteLog">
  <data key="d4">FunctionCall</data>
</node>
<node id="handlePortSettingsChange">
  <data key="d4">FunctionCall</data>
</node>
<node id="erase">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flushDecoder &amp;&amp; mFrameParallelMode</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vpx_codec_decode((vpx_codec_ctx_t *</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!display</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!flushDecoder</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mImg == NULL</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mImg == NULL</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*portWillReset</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">outHeader-&gt;nAllocLen &gt;= outHeader-&gt;nFilledLen</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!eos</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!outQueue.empty(</data>
</node>
<node id="while_10">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(mImg = vpx_codec_get_frame((vpx_codec_ctx_t *</data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">!outQueue.empty(</data>
</node>
<edge source="outputBuffers" target="dst">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcV">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcU">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcYStride">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="height">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcUStride">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="width">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcVStride">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="iter">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="srcY">
  <data key="d6">declares</data>
</edge>
<edge source="outputBuffers" target="copyYV12FrameToOutputBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="outputBufferWidth">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="notifyFillBufferDone">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="begin">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="vpx_codec_get_frame">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="CHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="getPortQueue">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="android_errorWriteLog">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="handlePortSettingsChange">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="erase">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="outputBuffers" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="while_10">
  <data key="d6">contains</data>
</edge>
<edge source="outputBuffers" target="while_11">
  <data key="d6">contains</data>
</edge>
<edge source="dst" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dst" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dst" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcV" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcV" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcV" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcU" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcU" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcU" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcYStride" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcYStride" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcYStride" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="height" target="handlePortSettingsChange">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="height" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcUStride" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcUStride" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcUStride" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="width" target="handlePortSettingsChange">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="width" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcVStride" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcVStride" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcVStride" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="iter" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="iter" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="iter" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcY" target="copyYV12FrameToOutputBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcY" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcY" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>