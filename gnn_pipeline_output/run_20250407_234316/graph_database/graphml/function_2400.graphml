<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-8867</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="PHP_FUNCTION">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="buffer">
  <data key="d3">Variable</data>
</node>
<node id="buffer_length">
  <data key="d3">Variable</data>
</node>
<node id="strong_result">
  <data key="d3">Variable</data>
</node>
<node id="emalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="efree">
  <data key="d3">FunctionCall</data>
</node>
<node id="RETVAL_STRINGL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="ZVAL_BOOL">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">buffer_length &lt;= 0</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zstrong_result_returned</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">php_win32_get_random_bytes(buffer, (size_t</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">php_win32_get_random_bytes(buffer, (size_t</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zstrong_result_returned</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(strong_result = RAND_pseudo_bytes(buffer, buffer_length</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zstrong_result_returned</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zstrong_result_returned</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zstrong_result_returned</data>
</node>
<edge source="PHP_FUNCTION" target="buffer">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="buffer_length">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="strong_result">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="emalloc">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="efree">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="RETVAL_STRINGL">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zval_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="ZVAL_BOOL">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="buffer" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="buffer" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buffer" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buffer" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buffer" target="emalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer" target="efree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer_length" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="buffer_length" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buffer_length" target="emalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer_length" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buffer_length" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="strong_result" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="strong_result" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="strong_result" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="strong_result" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="strong_result" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="strong_result" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="strong_result" target="zval_dtor">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="strong_result" target="ZVAL_BOOL">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="strong_result" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="strong_result" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>