<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2018-17942</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="convert_to_decimal">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="count">
  <data key="d5">Variable</data>
</node>
<node id="a_len">
  <data key="d5">Variable</data>
</node>
<node id="ptr">
  <data key="d5">Variable</data>
</node>
<node id="c_ptr">
  <data key="d5">Variable</data>
</node>
<node id="num">
  <data key="d5">Variable</data>
</node>
<node id="c_len">
  <data key="d5">Variable</data>
</node>
<node id="remainder">
  <data key="d5">Variable</data>
</node>
<node id="extra_zeroes">
  <data key="d5">Variable</data>
</node>
<node id="a">
  <data key="d5">Variable</data>
</node>
<node id="d_ptr">
  <data key="d5">Variable</data>
</node>
<node id="a_ptr">
  <data key="d5">Variable</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="log">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c_ptr != NULL</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">a_ptr[a_len - 1] == 0</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">d_ptr == c_ptr</data>
</node>
<node id="for_3">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">; extra_zeroes &gt; 0; extra_zeroes--</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">count = a_len; count &gt; 0; count--</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">count = 9; count &gt; 0; count--</data>
</node>
<node id="while_6">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">a_len &gt; 0</data>
</node>
<node id="while_7">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">d_ptr &gt; c_ptr &amp;&amp; d_ptr[-1] == '0'</data>
</node>
<edge source="convert_to_decimal" target="count">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="a_len">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="ptr">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="c_ptr">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="num">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="c_len">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="remainder">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="extra_zeroes">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="a">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="d_ptr">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="a_ptr">
  <data key="d7">declares</data>
</edge>
<edge source="convert_to_decimal" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="convert_to_decimal" target="log">
  <data key="d7">calls</data>
</edge>
<edge source="convert_to_decimal" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="for_3">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="while_6">
  <data key="d7">contains</data>
</edge>
<edge source="convert_to_decimal" target="while_7">
  <data key="d7">contains</data>
</edge>
<edge source="count" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="for_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_len" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a_len" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a_len" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_len" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_len" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ptr" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ptr" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ptr" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ptr" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="c_ptr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="c_ptr" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="c_ptr" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="c_len" target="malloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="remainder" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="remainder" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="remainder" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="remainder" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="remainder" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="extra_zeroes" target="for_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="extra_zeroes" target="malloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="extra_zeroes" target="convert_to_decimal">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="extra_zeroes" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a" target="for_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a" target="while_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="d_ptr" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="d_ptr" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="d_ptr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="d_ptr" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="d_ptr" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="d_ptr" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_ptr" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="a_ptr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_ptr" target="for_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="a_ptr" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>