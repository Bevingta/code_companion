<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-6903</data>
<data key="d3">9.3</data>
<data key="d4">HIGH</data>
<node id="S_AL_Init">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="defaultinputdevice">
  <data key="d5">Variable</data>
</node>
<node id="si">
  <data key="d5">Variable</data>
</node>
<node id="devicelist">
  <data key="d5">Variable</data>
</node>
<node id="inputdevicenames">
  <data key="d5">Variable</data>
</node>
<node id="defaultdevice">
  <data key="d5">Variable</data>
</node>
<node id="inputdevicelist">
  <data key="d5">Variable</data>
</node>
<node id="devicenames">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="curlen">
  <data key="d5">Variable</data>
</node>
<node id="qalcCloseDevice">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcMakeContextCurrent">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcGetString">
  <data key="d5">FunctionCall</data>
</node>
<node id="Com_Printf">
  <data key="d5">FunctionCall</data>
</node>
<node id="QAL_Shutdown">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcOpenDevice">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalDistanceModel">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalDopplerFactor">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalSpeedOfSound">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcIsExtensionPresent">
  <data key="d5">FunctionCall</data>
</node>
<node id="Cvar_Get">
  <data key="d5">FunctionCall</data>
</node>
<node id="S_AL_SrcInit">
  <data key="d5">FunctionCall</data>
</node>
<node id="S_AL_BufferInit">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcCaptureOpenDevice">
  <data key="d5">FunctionCall</data>
</node>
<node id="qalcCreateContext">
  <data key="d5">FunctionCall</data>
</node>
<node id="Q_strcat">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !si </data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !QAL_Init( s_alDriver-&gt;string </data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !Q_stricmp( s_alDriver-&gt;string, ALDRIVER_DEFAULT </data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">device &amp;&amp; !*device</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">inputdevice &amp;&amp; !*inputdevice</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">enumeration_ext || enumeration_all_ext</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">enumeration_all_ext</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!device &amp;&amp; defaultdevice &amp;&amp; !strcmp(defaultdevice, "Generic Hardware"</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">devicelist</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !alDevice &amp;&amp; device </data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !alDevice </data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !alContext </data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!s_alCapture-&gt;integer</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">cl_useMumble-&gt;integer</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">qalcCaptureOpenDevice == NULL</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!qalcIsExtensionPresent(NULL, "ALC_EXT_capture"</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">inputdevicelist</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> !alCaptureDevice &amp;&amp; inputdevice </data>
</node>
<node id="for_18">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; MAX_RAW_STREAMS; i++</data>
</node>
<node id="while_19">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(curlen = strlen(devicelist</data>
</node>
<node id="while_20">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(curlen = strlen(inputdevicelist</data>
</node>
<edge source="S_AL_Init" target="defaultinputdevice">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="si">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="devicelist">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="inputdevicenames">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="defaultdevice">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="inputdevicelist">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="devicenames">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="curlen">
  <data key="d7">declares</data>
</edge>
<edge source="S_AL_Init" target="qalcCloseDevice">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcMakeContextCurrent">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcGetString">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="Com_Printf">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="QAL_Shutdown">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcOpenDevice">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalDistanceModel">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalDopplerFactor">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalSpeedOfSound">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcIsExtensionPresent">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="Cvar_Get">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="S_AL_SrcInit">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="S_AL_BufferInit">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcCaptureOpenDevice">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="qalcCreateContext">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="Q_strcat">
  <data key="d7">calls</data>
</edge>
<edge source="S_AL_Init" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="for_18">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="while_19">
  <data key="d7">contains</data>
</edge>
<edge source="S_AL_Init" target="while_20">
  <data key="d7">contains</data>
</edge>
<edge source="defaultinputdevice" target="Com_Printf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="si" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="si" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="si" target="S_AL_Init">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="si" target="Q_strcat">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="devicelist" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="devicelist" target="while_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="while_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="devicelist" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicelist" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="inputdevicenames" target="Cvar_Get">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="inputdevicenames" target="Q_strcat">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="inputdevicenames" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="inputdevicenames" target="while_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="defaultdevice" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="defaultdevice" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="defaultdevice" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="defaultdevice" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="defaultdevice" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="inputdevicelist" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="inputdevicelist" target="while_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="Cvar_Get">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="devicenames" target="Q_strcat">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="devicenames" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="devicenames" target="while_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="curlen" target="while_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="while_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="curlen" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>