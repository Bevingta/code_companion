<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-15853</data>
<data key="d1">2.1</data>
<data key="d2">LOW</data>
<node id="ExprResolveBoolean">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ctx">
  <data key="d3">Variable</data>
</node>
<node id="ident">
  <data key="d3">Variable</data>
</node>
<node id="log_err">
  <data key="d3">FunctionCall</data>
</node>
<node id="xkb_atom_text">
  <data key="d3">FunctionCall</data>
</node>
<node id="log_wsgo">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">expr-&gt;expr.value_type != EXPR_TYPE_BOOLEAN</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ident</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">istreq(ident, "true"</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">istreq(ident, "false"</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ok</data>
</node>
<node id="switch_5">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">expr-&gt;expr.op</data>
</node>
<edge source="ExprResolveBoolean" target="ctx">
  <data key="d5">declares</data>
</edge>
<edge source="ExprResolveBoolean" target="ident">
  <data key="d5">declares</data>
</edge>
<edge source="ExprResolveBoolean" target="log_err">
  <data key="d5">calls</data>
</edge>
<edge source="ExprResolveBoolean" target="xkb_atom_text">
  <data key="d5">calls</data>
</edge>
<edge source="ExprResolveBoolean" target="log_wsgo">
  <data key="d5">calls</data>
</edge>
<edge source="ExprResolveBoolean" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ExprResolveBoolean" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ExprResolveBoolean" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ExprResolveBoolean" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="ExprResolveBoolean" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="ExprResolveBoolean" target="switch_5">
  <data key="d5">contains</data>
</edge>
<edge source="ctx" target="ExprResolveBoolean">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx" target="log_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx" target="xkb_atom_text">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx" target="log_wsgo">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ctx" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ident" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ident" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ident" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ident" target="log_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ident" target="xkb_atom_text">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ident" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>