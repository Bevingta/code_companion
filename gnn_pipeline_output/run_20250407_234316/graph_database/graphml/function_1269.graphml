<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-16420</data>
<data key="d2">4.6</data>
<data key="d3">MEDIUM</data>
<node id="gemsafe_get_cert_len">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="card">
  <data key="d4">Variable</data>
</node>
<node id="file">
  <data key="d4">Variable</data>
</node>
<node id="path">
  <data key="d4">Variable</data>
</node>
<node id="r">
  <data key="d4">Variable</data>
</node>
<node id="sc_format_path">
  <data key="d4">FunctionCall</data>
</node>
<node id="sc_log">
  <data key="d4">FunctionCall</data>
</node>
<node id="sc_read_binary">
  <data key="d4">FunctionCall</data>
</node>
<node id="sc_select_file">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r != SC_SUCCESS || !file</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r &lt; 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">objlen &lt; 1 || objlen &gt; GEMSAFE_MAX_OBJLEN</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ibuf[ind+1] == 0xFE</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r &lt; 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ibuf[ind] == 0x30 &amp;&amp; ibuf[ind+1] == 0x82</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i == gemsafe_cert_max</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ind+3 &gt;= sizeof ibuf</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">gemsafe_cert[i].label</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; i &lt; gemsafe_cert_max; i++</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; i &lt; gemsafe_cert_max; i++</data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">ibuf[ind] == 0x01</data>
</node>
<node id="while_12">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(size_t</data>
</node>
<node id="while_13">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">ind &lt; objlen - 1</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">i &lt; gemsafe_cert_max &amp;&amp; gemsafe_cert[i].label == NULL</data>
</node>
<edge source="gemsafe_get_cert_len" target="card">
  <data key="d6">declares</data>
</edge>
<edge source="gemsafe_get_cert_len" target="file">
  <data key="d6">declares</data>
</edge>
<edge source="gemsafe_get_cert_len" target="path">
  <data key="d6">declares</data>
</edge>
<edge source="gemsafe_get_cert_len" target="r">
  <data key="d6">declares</data>
</edge>
<edge source="gemsafe_get_cert_len" target="sc_format_path">
  <data key="d6">calls</data>
</edge>
<edge source="gemsafe_get_cert_len" target="sc_log">
  <data key="d6">calls</data>
</edge>
<edge source="gemsafe_get_cert_len" target="sc_read_binary">
  <data key="d6">calls</data>
</edge>
<edge source="gemsafe_get_cert_len" target="sc_select_file">
  <data key="d6">calls</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="while_11">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="while_12">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="while_13">
  <data key="d6">contains</data>
</edge>
<edge source="gemsafe_get_cert_len" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="card" target="gemsafe_get_cert_len">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="card" target="sc_log">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="card" target="sc_read_binary">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="card" target="sc_select_file">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="card" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="while_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="while_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="card" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="file" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="file" target="sc_select_file">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="path" target="sc_format_path">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="path" target="sc_select_file">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="r" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="while_14">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>