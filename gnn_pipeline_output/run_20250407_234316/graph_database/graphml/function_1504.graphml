<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-9578</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="init_device">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="resplen">
  <data key="d4">Variable</data>
</node>
<node id="dev">
  <data key="d4">Variable</data>
</node>
<node id="nonce">
  <data key="d4">Variable</data>
</node>
<node id="resp">
  <data key="d4">Variable</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">obtain_nonce(nonce</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u2fh_sendrecv
       (devs, dev-&gt;id, U2FHID_INIT, nonce, sizeof (nonce</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">resplen &gt; sizeof (initresp</data>
</node>
<edge source="init_device" target="resplen">
  <data key="d6">declares</data>
</edge>
<edge source="init_device" target="dev">
  <data key="d6">declares</data>
</edge>
<edge source="init_device" target="nonce">
  <data key="d6">declares</data>
</edge>
<edge source="init_device" target="resp">
  <data key="d6">declares</data>
</edge>
<edge source="init_device" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="init_device" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="init_device" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="init_device" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="init_device" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="resplen" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="resplen" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="resplen" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="init_device">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nonce" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nonce" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nonce" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="resp" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="resp" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="resp" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="resp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>