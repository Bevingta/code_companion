<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2018-1000127</data>
<data key="d4">5.0</data>
<data key="d5">MEDIUM</data>
<node id="process_get_command">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="ntokens">
  <data key="d6">Variable</data>
</node>
<node id="ii">
  <data key="d6">Variable</data>
</node>
<node id="key_token">
  <data key="d6">Variable</data>
</node>
<node id="tokens">
  <data key="d6">Variable</data>
</node>
<node id="nkey">
  <data key="d6">Variable</data>
</node>
<node id="suffix_len">
  <data key="d6">Variable</data>
</node>
<node id="suffix">
  <data key="d6">Variable</data>
</node>
<node id="i">
  <data key="d6">Variable</data>
</node>
<node id="key">
  <data key="d6">Variable</data>
</node>
<node id="out_string">
  <data key="d6">FunctionCall</data>
</node>
<node id="stats_prefix_record_get">
  <data key="d6">FunctionCall</data>
</node>
<node id="ITEM_clsid">
  <data key="d6">FunctionCall</data>
</node>
<node id="make_ascii_get_suffix">
  <data key="d6">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d6">FunctionCall</data>
</node>
<node id="STATS_UNLOCK">
  <data key="d6">FunctionCall</data>
</node>
<node id="assert">
  <data key="d6">FunctionCall</data>
</node>
<node id="realloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="STATS_LOCK">
  <data key="d6">FunctionCall</data>
</node>
<node id="add_iov">
  <data key="d6">FunctionCall</data>
</node>
<node id="do_cache_alloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="out_of_memory">
  <data key="d6">FunctionCall</data>
</node>
<node id="pthread_mutex_lock">
  <data key="d6">FunctionCall</data>
</node>
<node id="data">
  <data key="d6">FunctionCall</data>
</node>
<node id="tokenize_command">
  <data key="d6">FunctionCall</data>
</node>
<node id="conn_set_state">
  <data key="d6">FunctionCall</data>
</node>
<node id="pthread_mutex_unlock">
  <data key="d6">FunctionCall</data>
</node>
<node id="item_get">
  <data key="d6">FunctionCall</data>
</node>
<node id="MEMCACHED_COMMAND_GET">
  <data key="d6">FunctionCall</data>
</node>
<node id="item_remove">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">nkey &gt; KEY_MAX_LENGTH</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">settings.detail_enabled</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">it</data>
</node>
<node id="if_3">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">i &gt;= c-&gt;isize</data>
</node>
<node id="if_4">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">new_list</data>
</node>
<node id="if_5">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">return_cas || !settings.inline_ascii_response</data>
</node>
<node id="if_6">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">i &gt;= c-&gt;suffixsize</data>
</node>
<node id="if_7">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">new_suffix_list</data>
</node>
<node id="if_8">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">suffix == NULL</data>
</node>
<node id="if_9">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">add_iov(c, "VALUE ", 6</data>
</node>
<node id="if_10">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">(it-&gt;it_flags &amp; ITEM_CHUNKED</data>
</node>
<node id="if_11">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">add_chunked_item_iovs(c, it, it-&gt;nbytes</data>
</node>
<node id="if_12">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">add_iov(c, "VALUE ", 6</data>
</node>
<node id="if_13">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">(it-&gt;it_flags &amp; ITEM_CHUNKED</data>
</node>
<node id="if_14">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">add_iov(c, ITEM_suffix(it</data>
</node>
<node id="if_15">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">add_iov(c, ITEM_suffix(it</data>
</node>
<node id="if_16">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">settings.verbose &gt; 1</data>
</node>
<node id="if_17">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">key_token-&gt;value != NULL</data>
</node>
<node id="if_18">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">return_cas || !settings.inline_ascii_response</data>
</node>
<node id="if_19">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">settings.verbose &gt; 1</data>
</node>
<node id="if_20">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">key_token-&gt;value != NULL || add_iov(c, "END\r\n", 5</data>
</node>
<node id="for_21">
  <data key="d6">ControlStructure_for</data>
  <data key="d7">ii = 0; ii &lt; it-&gt;nkey; ++ii</data>
</node>
<node id="while_22">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">key_token-&gt;length != 0</data>
</node>
<node id="while_23">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">i-- &gt; 0</data>
</node>
<node id="while_24">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">i-- &gt; 0</data>
</node>
<node id="while_25">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">key_token-&gt;value != NULL</data>
</node>
<edge source="process_get_command" target="ntokens">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="ii">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="key_token">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="tokens">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="nkey">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="suffix_len">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="suffix">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="i">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="key">
  <data key="d8">declares</data>
</edge>
<edge source="process_get_command" target="out_string">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="stats_prefix_record_get">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="ITEM_clsid">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="make_ascii_get_suffix">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="fprintf">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="STATS_UNLOCK">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="assert">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="realloc">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="STATS_LOCK">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="add_iov">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="do_cache_alloc">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="out_of_memory">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="pthread_mutex_lock">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="data">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="tokenize_command">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="conn_set_state">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="pthread_mutex_unlock">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="item_get">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="MEMCACHED_COMMAND_GET">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="item_remove">
  <data key="d8">calls</data>
</edge>
<edge source="process_get_command" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_3">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_4">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_5">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_6">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_7">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_8">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_9">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_10">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_11">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_12">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_13">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_14">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_15">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_16">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_17">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_18">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_19">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="if_20">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="for_21">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="while_22">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="while_23">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="while_24">
  <data key="d8">contains</data>
</edge>
<edge source="process_get_command" target="while_25">
  <data key="d8">contains</data>
</edge>
<edge source="ntokens" target="process_get_command">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ntokens" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ii" target="if_5">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="ii" target="if_18">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="ii" target="for_21">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ii" target="fprintf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ii" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ii" target="if_16">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ii" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key_token" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key_token" target="if_20">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key_token" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key_token" target="while_25">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key_token" target="tokenize_command">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tokens" target="process_get_command">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tokens" target="tokenize_command">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tokens" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nkey" target="if_0">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="nkey" target="for_21">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="nkey" target="stats_prefix_record_get">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="nkey" target="item_get">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="nkey" target="MEMCACHED_COMMAND_GET">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="nkey" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nkey" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nkey" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nkey" target="if_16">
  <data key="d8">used_in_body</data>
</edge>
<edge source="nkey" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix_len" target="add_iov">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix_len" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix_len" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix_len" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix" target="if_6">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="suffix" target="if_7">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="suffix" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix" target="if_14">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="suffix" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="suffix" target="make_ascii_get_suffix">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix" target="realloc">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix" target="add_iov">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix" target="do_cache_alloc">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix" target="out_of_memory">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="suffix" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="suffix" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="i" target="if_1">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_19">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="for_21">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="while_23">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="i" target="while_24">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key" target="if_0">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key" target="if_17">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key" target="if_20">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key" target="for_21">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key" target="while_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key" target="while_25">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="key" target="stats_prefix_record_get">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="fprintf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="add_iov">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="tokenize_command">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="item_get">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="MEMCACHED_COMMAND_GET">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="key" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="key" target="if_16">
  <data key="d8">used_in_body</data>
</edge>
</graph></graphml>