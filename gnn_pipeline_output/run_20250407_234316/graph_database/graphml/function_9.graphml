<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2018-20482</data>
<data key="d3">1.9</data>
<data key="d4">LOW</data>
<node id="sparse_dump_region">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="count">
  <data key="d5">Variable</data>
</node>
<node id="wrbytes">
  <data key="d5">Variable</data>
</node>
<node id="file">
  <data key="d5">Variable</data>
</node>
<node id="bytes_left">
  <data key="d5">Variable</data>
</node>
<node id="bytes_read">
  <data key="d5">Variable</data>
</node>
<node id="bufsize">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="read_diag_details">
  <data key="d5">FunctionCall</data>
</node>
<node id="find_next_block">
  <data key="d5">FunctionCall</data>
</node>
<node id="sparse_dump_file">
  <data key="d5">FunctionCall</data>
</node>
<node id="safe_read">
  <data key="d5">FunctionCall</data>
</node>
<node id="blocking_write">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="write_error_details">
  <data key="d5">FunctionCall</data>
</node>
<node id="ERROR">
  <data key="d5">FunctionCall</data>
</node>
<node id="tar_sparse_dump_header">
  <data key="d5">FunctionCall</data>
</node>
<node id="mv_size_left">
  <data key="d5">FunctionCall</data>
</node>
<node id="tar_sparse_dump_region">
  <data key="d5">FunctionCall</data>
</node>
<node id="set_next_block_after">
  <data key="d5">FunctionCall</data>
</node>
<node id="pad_archive">
  <data key="d5">FunctionCall</data>
</node>
<node id="mv_begin_write">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!lseek_or_error (file, file-&gt;stat_info-&gt;sparse_map[i].offset</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bytes_read == SAFE_READ_ERROR</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!blk</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != wrbytes</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != wrbytes</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">rc &amp;&amp; file.optab-&gt;dump_region</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">fd &gt;= 0</data>
</node>
<node id="for_7">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; rc &amp;&amp; i &lt; file.stat_info-&gt;sparse_map_avail; i++</data>
</node>
<node id="while_8">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">bytes_left &gt; 0</data>
</node>
<edge source="sparse_dump_region" target="count">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="wrbytes">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="file">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="bytes_left">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="bytes_read">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="bufsize">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="sparse_dump_region" target="read_diag_details">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="find_next_block">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="sparse_dump_file">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="safe_read">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="blocking_write">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="write_error_details">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="ERROR">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="tar_sparse_dump_header">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="mv_size_left">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="tar_sparse_dump_region">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="set_next_block_after">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="pad_archive">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="mv_begin_write">
  <data key="d7">calls</data>
</edge>
<edge source="sparse_dump_region" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="for_7">
  <data key="d7">contains</data>
</edge>
<edge source="sparse_dump_region" target="while_8">
  <data key="d7">contains</data>
</edge>
<edge source="count" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="write_error_details">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="count" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wrbytes" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wrbytes" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="wrbytes" target="blocking_write">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="wrbytes" target="write_error_details">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="wrbytes" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wrbytes" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="for_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="file" target="read_diag_details">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="safe_read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="blocking_write">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="write_error_details">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="tar_sparse_dump_header">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="mv_size_left">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="tar_sparse_dump_region">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="pad_archive">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="mv_begin_write">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="sparse_dump_region">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes_left" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes_left" target="read_diag_details">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes_left" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes_left" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes_read" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bytes_read" target="memset">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes_read" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes_read" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bufsize" target="safe_read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bufsize" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bufsize" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bufsize" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_7">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>