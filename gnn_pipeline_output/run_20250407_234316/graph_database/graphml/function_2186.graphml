<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-5601</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="lha_read_file_header_1">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="extdsize">
  <data key="d4">Variable</data>
</node>
<node id="lha">
  <data key="d4">Variable</data>
</node>
<node id="a">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="archive_le16dec">
  <data key="d4">FunctionCall</data>
</node>
<node id="archive_strncpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="lha_calcsum">
  <data key="d4">FunctionCall</data>
</node>
<node id="lha_read_file_extended_header">
  <data key="d4">FunctionCall</data>
</node>
<node id="archive_set_error">
  <data key="d4">FunctionCall</data>
</node>
<node id="archive_le32dec">
  <data key="d4">FunctionCall</data>
</node>
<node id="lha_dos_time">
  <data key="d4">FunctionCall</data>
</node>
<node id="only">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p = __archive_read_ahead(a, H1_FIXED_SIZE, NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">namelen &gt; 230 || padding &lt; 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p = __archive_read_ahead(a, lha-&gt;header_size, NULL</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p[i + H1_FILE_NAME_OFFSET] == 0xff</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err2 &lt; ARCHIVE_WARN</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err2 &lt; err</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sum_calculated != headersum</data>
</node>
<node id="for_7">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; namelen; i++</data>
</node>
<edge source="lha_read_file_header_1" target="extdsize">
  <data key="d6">declares</data>
</edge>
<edge source="lha_read_file_header_1" target="lha">
  <data key="d6">declares</data>
</edge>
<edge source="lha_read_file_header_1" target="a">
  <data key="d6">declares</data>
</edge>
<edge source="lha_read_file_header_1" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="lha_read_file_header_1" target="archive_le16dec">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="archive_strncpy">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="lha_calcsum">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="lha_read_file_extended_header">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="archive_set_error">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="archive_le32dec">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="lha_dos_time">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="only">
  <data key="d6">calls</data>
</edge>
<edge source="lha_read_file_header_1" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="lha_read_file_header_1" target="for_7">
  <data key="d6">contains</data>
</edge>
<edge source="lha" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="lha" target="archive_strncpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="lha" target="lha_calcsum">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="lha" target="lha_read_file_extended_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="lha" target="lha_read_file_header_1">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="a" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="for_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>