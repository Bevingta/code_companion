<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-4127</data>
<data key="d2">4.7</data>
<data key="d3">MEDIUM</data>
<node id="vhost_net_set_backend">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="r">
  <data key="d4">Variable</data>
</node>
<node id="fd">
  <data key="d4">Variable</data>
</node>
<node id="index">
  <data key="d4">Variable</data>
</node>
<node id="nvq">
  <data key="d4">Variable</data>
</node>
<node id="vq">
  <data key="d4">Variable</data>
</node>
<node id="n">
  <data key="d4">Variable</data>
</node>
<node id="mutex_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="fput">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_socket">
  <data key="d4">FunctionCall</data>
</node>
<node id="rcu_assign_pointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_dev_check_owner">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_net_enable_vq">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_zerocopy_signal_used">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_net_ubuf_put_and_wait">
  <data key="d4">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_net_disable_vq">
  <data key="d4">FunctionCall</data>
</node>
<node id="rcu_dereference_protected">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_net_ubuf_alloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_init_used">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_net_flush_vq">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">index &gt;= VHOST_NET_VQ_MAX</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!vhost_vq_access_ok(vq</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(sock</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sock != oldsock</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(ubufs</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">oldubufs</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">oldsock</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ubufs</data>
</node>
<edge source="vhost_net_set_backend" target="r">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="fd">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="index">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="nvq">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="vq">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="n">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_net_set_backend" target="mutex_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="fput">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="get_socket">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="rcu_assign_pointer">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_dev_check_owner">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_net_enable_vq">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_zerocopy_signal_used">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_net_ubuf_put_and_wait">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="PTR_ERR">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_net_disable_vq">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="rcu_dereference_protected">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_net_ubuf_alloc">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_init_used">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="mutex_lock">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="vhost_net_flush_vq">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_net_set_backend" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_net_set_backend" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="r" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fd" target="get_socket">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fd" target="vhost_net_set_backend">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="index" target="vhost_net_set_backend">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="vhost_net_flush_vq">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nvq" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vq" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="rcu_assign_pointer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="vhost_net_enable_vq">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="vhost_zerocopy_signal_used">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="vhost_net_disable_vq">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="rcu_dereference_protected">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="vhost_net_ubuf_alloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="vhost_init_used">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="n" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>