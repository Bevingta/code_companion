<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-2694</data>
<data key="d1">5.8</data>
<data key="d2">MEDIUM</data>
<node id="pkinit_server_verify_padata">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="valid_eku">
  <data key="d3">Variable</data>
</node>
<node id="is_signed">
  <data key="d3">Variable</data>
</node>
<node id="valid_kdcPkId">
  <data key="d3">Variable</data>
</node>
<node id="arg">
  <data key="d3">Variable</data>
</node>
<node id="free">
  <data key="d3">FunctionCall</data>
</node>
<node id="k5int_decode_krb5_pa_pk_as_req_draft9">
  <data key="d3">FunctionCall</data>
</node>
<node id="verify_client_san">
  <data key="d3">FunctionCall</data>
</node>
<node id="k5int_decode_krb5_auth_pack_draft9">
  <data key="d3">FunctionCall</data>
</node>
<node id="k5int_decode_krb5_pa_pk_as_req">
  <data key="d3">FunctionCall</data>
</node>
<node id="free_krb5_auth_pack">
  <data key="d3">FunctionCall</data>
</node>
<node id="server_check_dh">
  <data key="d3">FunctionCall</data>
</node>
<node id="verify_client_eku">
  <data key="d3">FunctionCall</data>
</node>
<node id="krb5_c_make_checksum">
  <data key="d3">FunctionCall</data>
</node>
<node id="free_krb5_pa_pk_as_req_draft9">
  <data key="d3">FunctionCall</data>
</node>
<node id="PADATA_TO_KRB5DATA">
  <data key="d3">FunctionCall</data>
</node>
<node id="free_krb5_pa_pk_as_req">
  <data key="d3">FunctionCall</data>
</node>
<node id="free_krb5_auth_pack_draft9">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkiDebug">
  <data key="d3">FunctionCall</data>
</node>
<node id="request_body">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkinit_check_kdc_pkid">
  <data key="d3">FunctionCall</data>
</node>
<node id="print_buffer_bin">
  <data key="d3">FunctionCall</data>
</node>
<node id="cms_signeddata_verify">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkinit_init_kdc_req_context">
  <data key="d3">FunctionCall</data>
</node>
<node id="krb5_set_error_message">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkinit_find_realm_context">
  <data key="d3">FunctionCall</data>
</node>
<node id="print_buffer">
  <data key="d3">FunctionCall</data>
</node>
<node id="OCTETDATA_TO_KRB5DATA">
  <data key="d3">FunctionCall</data>
</node>
<node id="krb5_check_clockskew">
  <data key="d3">FunctionCall</data>
</node>
<node id="k5int_decode_krb5_auth_pack">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">data == NULL || data-&gt;length &lt;= 0 || data-&gt;contents == NULL</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">moddata == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">plgctx == NULL</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">is_signed</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!valid_san</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!valid_eku</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!krb5_principal_compare(context, request-&gt;client,
                                    krb5_anonymous_principal(</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">auth_pack-&gt;clientPublicValue != NULL</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!is_signed</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">cksum.length != auth_pack-&gt;pkAuthenticator.paChecksum.length ||
            k5_bcmp(cksum.contents,
                    auth_pack-&gt;pkAuthenticator.paChecksum.contents,
                    cksum.length</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">reqp-&gt;kdcPkId.data != NULL</data>
</node>
<node id="if_21">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_22">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!valid_kdcPkId</data>
</node>
<node id="if_23">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_24">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">auth_pack9-&gt;clientPublicValue != NULL</data>
</node>
<node id="if_25">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_26">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval &amp;&amp; data-&gt;pa_type == KRB5_PADATA_PK_AS_REQ</data>
</node>
<node id="if_27">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkinit_create_edata(context, plgctx-&gt;cryptoctx, reqctx-&gt;cryptoctx,
                                plgctx-&gt;idctx, plgctx-&gt;opts, retval, &amp;e_data</data>
</node>
<node id="if_28">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">reqctx != NULL</data>
</node>
<node id="switch_29">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">(int</data>
</node>
<node id="switch_30">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">(int</data>
</node>
<node id="switch_31">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">(int</data>
</node>
<edge source="pkinit_server_verify_padata" target="valid_eku">
  <data key="d5">declares</data>
</edge>
<edge source="pkinit_server_verify_padata" target="is_signed">
  <data key="d5">declares</data>
</edge>
<edge source="pkinit_server_verify_padata" target="valid_kdcPkId">
  <data key="d5">declares</data>
</edge>
<edge source="pkinit_server_verify_padata" target="arg">
  <data key="d5">declares</data>
</edge>
<edge source="pkinit_server_verify_padata" target="free">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="k5int_decode_krb5_pa_pk_as_req_draft9">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="verify_client_san">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="k5int_decode_krb5_auth_pack_draft9">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="k5int_decode_krb5_pa_pk_as_req">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="free_krb5_auth_pack">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="server_check_dh">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="verify_client_eku">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="krb5_c_make_checksum">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="free_krb5_pa_pk_as_req_draft9">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="PADATA_TO_KRB5DATA">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="free_krb5_pa_pk_as_req">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="free_krb5_auth_pack_draft9">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="pkiDebug">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="request_body">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="pkinit_check_kdc_pkid">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="print_buffer_bin">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="cms_signeddata_verify">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="pkinit_init_kdc_req_context">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="krb5_set_error_message">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="pkinit_find_realm_context">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="print_buffer">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="OCTETDATA_TO_KRB5DATA">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="krb5_check_clockskew">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="k5int_decode_krb5_auth_pack">
  <data key="d5">calls</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_20">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_21">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_22">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_23">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_24">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_25">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_26">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_27">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="if_28">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="switch_29">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="switch_30">
  <data key="d5">contains</data>
</edge>
<edge source="pkinit_server_verify_padata" target="switch_31">
  <data key="d5">contains</data>
</edge>
<edge source="valid_eku" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="valid_eku" target="verify_client_eku">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="valid_eku" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="is_signed" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="is_signed" target="if_17">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="is_signed" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="is_signed" target="switch_29">
  <data key="d5">used_in_body</data>
</edge>
<edge source="is_signed" target="switch_30">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valid_kdcPkId" target="if_22">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="valid_kdcPkId" target="if_20">
  <data key="d5">used_in_body</data>
</edge>
<edge source="valid_kdcPkId" target="switch_30">
  <data key="d5">used_in_body</data>
</edge>
<edge source="arg" target="pkinit_server_verify_padata">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="arg" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="arg" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="arg" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>