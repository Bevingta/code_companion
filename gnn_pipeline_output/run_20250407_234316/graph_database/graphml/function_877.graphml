<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-13050</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="rpki_rtr_pdu_print">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="tptr">
  <data key="d4">Variable</data>
</node>
<node id="indent">
  <data key="d4">Variable</data>
</node>
<node id="msg">
  <data key="d4">Variable</data>
</node>
<node id="EXTRACT_32BITS">
  <data key="d4">FunctionCall</data>
</node>
<node id="EXTRACT_16BITS">
  <data key="d4">FunctionCall</data>
</node>
<node id="ND_PRINT">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="print_unknown_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="ND_TCHECK2">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">encapsulated_pdu_length &amp;&amp;
		(encapsulated_pdu_length &lt;= tlen</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rpki_rtr_pdu_print(ndo, tptr, indent+2</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tlen &gt; 4</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">text_length &amp;&amp; (text_length &lt;= tlen </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">fn_printn(ndo, tptr, text_length, ndo-&gt;ndo_snapend</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ndo-&gt;ndo_vflag &gt; 1 || (ndo-&gt;ndo_vflag &amp;&amp; hexdump</data>
</node>
<node id="switch_6">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">pdu_type</data>
</node>
<edge source="rpki_rtr_pdu_print" target="tptr">
  <data key="d6">declares</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="indent">
  <data key="d6">declares</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="msg">
  <data key="d6">declares</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="EXTRACT_32BITS">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="EXTRACT_16BITS">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="ND_PRINT">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="print_unknown_data">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="ND_TCHECK2">
  <data key="d6">calls</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="rpki_rtr_pdu_print" target="switch_6">
  <data key="d6">contains</data>
</edge>
<edge source="tptr" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="EXTRACT_32BITS">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tptr" target="rpki_rtr_pdu_print">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tptr" target="print_unknown_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tptr" target="ND_TCHECK2">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tptr" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tptr" target="switch_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indent" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="indent" target="ND_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="indent" target="rpki_rtr_pdu_print">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="indent" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indent" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indent" target="switch_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg" target="EXTRACT_32BITS">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="switch_6">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>