<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-6640</data>
<data key="d1">9.3</data>
<data key="d2">HIGH</data>
<node id="prctl_set_vma_anon_name">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="unmapped_error">
  <data key="d3">Variable</data>
</node>
<node id="error">
  <data key="d3">Variable</data>
</node>
<node id="tmp">
  <data key="d3">Variable</data>
</node>
<node id="long">
  <data key="d3">Variable</data>
</node>
<node id="prctl_update_vma_anon_name">
  <data key="d3">FunctionCall</data>
</node>
<node id="find_vma">
  <data key="d3">FunctionCall</data>
</node>
<node id="find_vma_prev">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">vma &amp;&amp; start &gt; vma-&gt;vm_start</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!vma</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">start &lt; vma-&gt;vm_start</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">start &gt;= end</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">end &lt; tmp</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">error</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">prev &amp;&amp; start &lt; prev-&gt;vm_end</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">start &gt;= end</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">prev</data>
</node>
<node id="for_9">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">;;</data>
</node>
<edge source="prctl_set_vma_anon_name" target="unmapped_error">
  <data key="d5">declares</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="error">
  <data key="d5">declares</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="tmp">
  <data key="d5">declares</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="long">
  <data key="d5">declares</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="prctl_update_vma_anon_name">
  <data key="d5">calls</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="find_vma">
  <data key="d5">calls</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="find_vma_prev">
  <data key="d5">calls</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="prctl_set_vma_anon_name" target="for_9">
  <data key="d5">contains</data>
</edge>
<edge source="unmapped_error" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="unmapped_error" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="unmapped_error" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="unmapped_error" target="for_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="error" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error" target="for_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tmp" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="tmp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tmp" target="for_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="long" target="prctl_set_vma_anon_name">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>