<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-6890</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="foveon_load_camf">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="fseek">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="getbits">
  <data key="d5">FunctionCall</data>
</node>
<node id="ljpeg_diff">
  <data key="d5">FunctionCall</data>
</node>
<node id="foveon_huff">
  <data key="d5">FunctionCall</data>
</node>
<node id="get4">
  <data key="d5">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="merror">
  <data key="d5">FunctionCall</data>
</node>
<node id="fread">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">type == 2</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">type == 4</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">col &lt; 2</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">col &amp; 1</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; meta_length; i++</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j=row=0; row &lt; high; row++</data>
</node>
<node id="for_6">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">col=0; col &lt; wide; col++</data>
</node>
<edge source="foveon_load_camf" target="fseek">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="getbits">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="ljpeg_diff">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="foveon_huff">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="get4">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="fprintf">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="merror">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="fread">
  <data key="d7">calls</data>
</edge>
<edge source="foveon_load_camf" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="foveon_load_camf" target="for_6">
  <data key="d7">contains</data>
</edge>
</graph></graphml>