<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-1000524</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="layer_resize">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="tile_width">
  <data key="d4">Variable</data>
</node>
<node id="old_height">
  <data key="d4">Variable</data>
</node>
<node id="x_size">
  <data key="d4">Variable</data>
</node>
<node id="old_width">
  <data key="d4">Variable</data>
</node>
<node id="tile_height">
  <data key="d4">Variable</data>
</node>
<node id="y_size">
  <data key="d4">Variable</data>
</node>
<node id="layer">
  <data key="d4">Variable</data>
</node>
<node id="tileset_get_delay">
  <data key="d4">FunctionCall</data>
</node>
<node id="free">
  <data key="d4">FunctionCall</data>
</node>
<node id="fmax">
  <data key="d4">FunctionCall</data>
</node>
<node id="vector_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="tileset_get_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(tilemap = malloc(x_size * y_size * sizeof(struct map_tile</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x &lt; old_width &amp;&amp; y &lt; old_height</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!s_map-&gt;layers[i].is_parallax</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zone-&gt;bounds.x1 &gt;= s_map-&gt;width || zone-&gt;bounds.y1 &gt;= s_map-&gt;height</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zone-&gt;bounds.x2 &gt; s_map-&gt;width</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zone-&gt;bounds.y2 &gt; s_map-&gt;height</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">trigger-&gt;x &gt;= s_map-&gt;width || trigger-&gt;y &gt;= s_map-&gt;height</data>
</node>
<node id="for_7">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x = 0; x &lt; x_size; ++x</data>
</node>
<node id="for_8">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = 0; y &lt; y_size; ++y</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; s_map-&gt;num_layers; ++i</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = (int</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = (int</data>
</node>
<edge source="layer_resize" target="tile_width">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="old_height">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="x_size">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="old_width">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="tile_height">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="y_size">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="layer">
  <data key="d6">declares</data>
</edge>
<edge source="layer_resize" target="tileset_get_delay">
  <data key="d6">calls</data>
</edge>
<edge source="layer_resize" target="free">
  <data key="d6">calls</data>
</edge>
<edge source="layer_resize" target="fmax">
  <data key="d6">calls</data>
</edge>
<edge source="layer_resize" target="vector_get">
  <data key="d6">calls</data>
</edge>
<edge source="layer_resize" target="tileset_get_size">
  <data key="d6">calls</data>
</edge>
<edge source="layer_resize" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="for_7">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="for_8">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="layer_resize" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="tile_width" target="fmax">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tile_width" target="tileset_get_size">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tile_width" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tile_width" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_height" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="old_height" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_height" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_height" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="x_size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="x_size" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="x_size" target="layer_resize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="x_size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="x_size" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_width" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_width" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_width" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="old_width" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tile_height" target="fmax">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tile_height" target="tileset_get_size">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tile_height" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tile_height" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="y_size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="y_size" target="for_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y_size" target="layer_resize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="y_size" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer" target="free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer" target="fmax">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer" target="layer_resize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>