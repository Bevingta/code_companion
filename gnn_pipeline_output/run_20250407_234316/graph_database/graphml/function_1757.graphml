<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-0895</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="CopyDirectory">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="to_path_stat">
  <data key="d4">Variable</data>
</node>
<node id="top_dir">
  <data key="d4">Variable</data>
</node>
<node id="traverse_type">
  <data key="d4">Variable</data>
</node>
<node id="traversal">
  <data key="d4">FunctionCall</data>
</node>
<node id="Next">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetFindInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="DCHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="DirName">
  <data key="d4">FunctionCall</data>
</node>
<node id="DCHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="DLOG">
  <data key="d4">FunctionCall</data>
</node>
<node id="Append">
  <data key="d4">FunctionCall</data>
</node>
<node id="AssertIOAllowed">
  <data key="d4">FunctionCall</data>
</node>
<node id="suffix">
  <data key="d4">FunctionCall</data>
</node>
<node id="erase">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base::strlcpy(top_dir, from_path.value(</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PathExists(real_to_path</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!AbsolutePath(&amp;real_to_path</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!AbsolutePath(&amp;real_to_path</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!AbsolutePath(&amp;real_from_path</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">real_to_path.value(</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">recursive</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stat(from_path.value(</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">recursive &amp;&amp; stat(to_path.value(</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!suffix.empty(</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">S_ISDIR(info.stat.st_mode</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mkdir(target_path.value(</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">S_ISREG(info.stat.st_mode</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CopyFile(current, target_path</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">success &amp;&amp; !current.empty(</data>
</node>
<edge source="CopyDirectory" target="to_path_stat">
  <data key="d6">declares</data>
</edge>
<edge source="CopyDirectory" target="top_dir">
  <data key="d6">declares</data>
</edge>
<edge source="CopyDirectory" target="traverse_type">
  <data key="d6">declares</data>
</edge>
<edge source="CopyDirectory" target="traversal">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="Next">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="GetFindInfo">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="DCHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="DirName">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="DCHECK">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="DLOG">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="Append">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="AssertIOAllowed">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="suffix">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="erase">
  <data key="d6">calls</data>
</edge>
<edge source="CopyDirectory" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="CopyDirectory" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="top_dir" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="traverse_type" target="traversal">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>