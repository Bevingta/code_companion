<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-8849</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="mount">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="proc">
  <data key="d3">FunctionCall</data>
</node>
<node id="kill">
  <data key="d3">FunctionCall</data>
</node>
<node id="setType">
  <data key="d3">FunctionCall</data>
</node>
<node id="fromUtf8">
  <data key="d3">FunctionCall</data>
</node>
<node id="start">
  <data key="d3">FunctionCall</data>
</node>
<node id="defined">
  <data key="d3">FunctionCall</data>
</node>
<node id="setProcessEnvironment">
  <data key="d3">FunctionCall</data>
</node>
<node id="addData">
  <data key="d3">FunctionCall</data>
</node>
<node id="toStringList">
  <data key="d3">FunctionCall</data>
</node>
<node id="setErrorDescription">
  <data key="d3">FunctionCall</data>
</node>
<node id="setOutputChannelMode">
  <data key="d3">FunctionCall</data>
</node>
<node id="setProgram">
  <data key="d3">FunctionCall</data>
</node>
<node id="it">
  <data key="d3">FunctionCall</data>
</node>
<node id="toString">
  <data key="d3">FunctionCall</data>
</node>
<node id="value">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">proc.waitForStarted(-1</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">HelperSupport::isStopped(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">proc.exitStatus(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!userKill</data>
</node>
<edge source="mount" target="proc">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="kill">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="setType">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="fromUtf8">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="start">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="defined">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="setProcessEnvironment">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="addData">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="toStringList">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="setErrorDescription">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="setOutputChannelMode">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="setProgram">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="it">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="toString">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="value">
  <data key="d5">calls</data>
</edge>
<edge source="mount" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="mount" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="mount" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="mount" target="if_3">
  <data key="d5">contains</data>
</edge>
</graph></graphml>