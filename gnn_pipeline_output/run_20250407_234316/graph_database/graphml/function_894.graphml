<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-13025</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="mobility_opt_print">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="bp">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="ND_TCHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="ND_TCHECK_16BITS">
  <data key="d4">FunctionCall</data>
</node>
<node id="ND_PRINT">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bp[i] == IP6MOPT_PAD1</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i + 1 &lt; len</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i + optlen &gt; len</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_MINLEN</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_REFRESH_MINLEN</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_ALTCOA_MINLEN</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_NONCEID_MINLEN</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_AUTH_MINLEN</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len - i &lt; IP6MOPT_MINLEN</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; len; i += optlen</data>
</node>
<node id="switch_10">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">bp[i]</data>
</node>
<edge source="mobility_opt_print" target="bp">
  <data key="d6">declares</data>
</edge>
<edge source="mobility_opt_print" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="mobility_opt_print" target="ND_TCHECK">
  <data key="d6">calls</data>
</edge>
<edge source="mobility_opt_print" target="ND_TCHECK_16BITS">
  <data key="d6">calls</data>
</edge>
<edge source="mobility_opt_print" target="ND_PRINT">
  <data key="d6">calls</data>
</edge>
<edge source="mobility_opt_print" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="mobility_opt_print" target="switch_10">
  <data key="d6">contains</data>
</edge>
<edge source="bp" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bp" target="switch_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bp" target="ND_TCHECK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bp" target="mobility_opt_print">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bp" target="ND_TCHECK_16BITS">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bp" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bp" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="ND_TCHECK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="mobility_opt_print">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="ND_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="switch_10">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>