<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-1078</data>
<data key="d1">1.9</data>
<data key="d2">LOW</data>
<node id="sco_sock_getsockopt_old">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="__user">
  <data key="d3">Variable</data>
</node>
<node id="cinfo">
  <data key="d3">Variable</data>
</node>
<node id="optname">
  <data key="d3">Variable</data>
</node>
<node id="opts">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="lock_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="BT_DBG">
  <data key="d3">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d3">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sco_pi">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">get_user(len, optlen</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_state != BT_CONNECTED</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_to_user(optval, (char *</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_state != BT_CONNECTED</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_to_user(optval, (char *</data>
</node>
<node id="switch_5">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">optname</data>
</node>
<edge source="sco_sock_getsockopt_old" target="__user">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="cinfo">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="optname">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="opts">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="lock_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="BT_DBG">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="min_t">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="release_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="sco_pi">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="sco_sock_getsockopt_old" target="switch_5">
  <data key="d5">contains</data>
</edge>
<edge source="__user" target="sco_sock_getsockopt_old">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cinfo" target="min_t">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cinfo" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cinfo" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cinfo" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="switch_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="optname" target="sco_sock_getsockopt_old">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opts" target="BT_DBG">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opts" target="min_t">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opts" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opts" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="BT_DBG">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sco_pi">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="sco_sock_getsockopt_old">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>