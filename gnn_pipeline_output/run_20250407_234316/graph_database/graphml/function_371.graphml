<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-1956</data>
<data key="d1">2.1</data>
<data key="d2">LOW</data>
<node id="create_user_ns">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="group">
  <data key="d3">Variable</data>
</node>
<node id="owner">
  <data key="d3">Variable</data>
</node>
<node id="new">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="atomic_set">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmem_cache_zalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_cred_user_ns">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmem_cache_free">
  <data key="d3">FunctionCall</data>
</node>
<node id="proc_alloc_inum">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!kuid_has_mapping(parent_ns, owner</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ns</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret</data>
</node>
<edge source="create_user_ns" target="group">
  <data key="d5">declares</data>
</edge>
<edge source="create_user_ns" target="owner">
  <data key="d5">declares</data>
</edge>
<edge source="create_user_ns" target="new">
  <data key="d5">declares</data>
</edge>
<edge source="create_user_ns" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="create_user_ns" target="atomic_set">
  <data key="d5">calls</data>
</edge>
<edge source="create_user_ns" target="kmem_cache_zalloc">
  <data key="d5">calls</data>
</edge>
<edge source="create_user_ns" target="set_cred_user_ns">
  <data key="d5">calls</data>
</edge>
<edge source="create_user_ns" target="kmem_cache_free">
  <data key="d5">calls</data>
</edge>
<edge source="create_user_ns" target="proc_alloc_inum">
  <data key="d5">calls</data>
</edge>
<edge source="create_user_ns" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="create_user_ns" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="create_user_ns" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="owner" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="new" target="set_cred_user_ns">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new" target="create_user_ns">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>