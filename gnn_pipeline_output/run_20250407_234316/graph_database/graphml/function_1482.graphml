<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-12098</data>
<data key="d3">5.8</data>
<data key="d4">MEDIUM</data>
<node id="krb5_init_creds_step">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="int">
  <data key="d5">Variable</data>
</node>
<node id="eflags">
  <data key="d5">Variable</data>
</node>
<node id="buf2">
  <data key="d5">Variable</data>
</node>
<node id="_krb5_debug">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_data_free">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_AS_REQ">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_error_from_rd_error">
  <data key="d5">FunctionCall</data>
</node>
<node id="heim_assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="_krb5_extract_ticket">
  <data key="d5">FunctionCall</data>
</node>
<node id="ASN1_MALLOC_ENCODE">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_KRB_ERROR">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_AS_REP">
  <data key="d5">FunctionCall</data>
</node>
<node id="prompter">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="process_pa_data_to_key">
  <data key="d5">FunctionCall</data>
</node>
<node id="change_password">
  <data key="d5">FunctionCall</data>
</node>
<node id="decode_METHOD_DATA">
  <data key="d5">FunctionCall</data>
</node>
<node id="process_pa_data_to_md">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_init_creds_ctx">
  <data key="d5">FunctionCall</data>
</node>
<node id="fast_unwrap_as_rep">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_rd_error">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_data_zero">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_EncASRepPart">
  <data key="d5">FunctionCall</data>
</node>
<node id="init_as_req">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_METHOD_DATA">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_principal_set_realm">
  <data key="d5">FunctionCall</data>
</node>
<node id="decode_AS_REP">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_set_error_message">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_init_creds_set_service">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_free_keyblock">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_init_creds_set_password">
  <data key="d5">FunctionCall</data>
</node>
<node id="copy_AS_REQ">
  <data key="d5">FunctionCall</data>
</node>
<node id="krb5_set_real_time">
  <data key="d5">FunctionCall</data>
</node>
<node id="fast_wrap_req">
  <data key="d5">FunctionCall</data>
</node>
<node id="fast_unwrap_error">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;as_req.req_body.cname == NULL</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;pa_counter &gt; MAX_PA_COUNTER</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">in &amp;&amp; in-&gt;length</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == 0</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;flags.canonicalize</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;ic_flags &amp; KRB5_INIT_CREDS_NO_C_CANON_CHECK</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == 0</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret &amp;&amp; in-&gt;length &amp;&amp; ((char*</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == KRB5KDC_ERR_PREAUTH_REQUIRED</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;error.e_data</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == KRB5KRB_AP_ERR_SKEW &amp;&amp; context-&gt;kdc_sec_offset == 0</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">context-&gt;kdc_sec_offset</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == KRB5_KDC_ERR_WRONG_REALM &amp;&amp; ctx-&gt;flags.canonicalize</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;error.crealm == NULL</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">krb5_principal_is_krbtgt(context, ctx-&gt;cred.server</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == KRB5KDC_ERR_KEY_EXP &amp;&amp; ctx-&gt;runflags.change_password == 0 &amp;&amp; ctx-&gt;prompter</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;in_tkt_service != NULL &amp;&amp; strcmp(ctx-&gt;in_tkt_service, "kadmin/changepw"</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;prompter == NULL</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret == KRB5KDC_ERR_PREAUTH_FAILED</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;fast_state.flags &amp; KRB5_FAST_DISABLED</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;fast_state.flags &amp; (KRB5_FAST_REQUIRED | KRB5_FAST_EXPECTED</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;as_req.req_body.cname == NULL</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ctx-&gt;as_req.padata</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len != ctx-&gt;req_buffer.length</data>
</node>
<edge source="krb5_init_creds_step" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="krb5_init_creds_step" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="krb5_init_creds_step" target="int">
  <data key="d7">declares</data>
</edge>
<edge source="krb5_init_creds_step" target="eflags">
  <data key="d7">declares</data>
</edge>
<edge source="krb5_init_creds_step" target="buf2">
  <data key="d7">declares</data>
</edge>
<edge source="krb5_init_creds_step" target="_krb5_debug">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_data_free">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_AS_REQ">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_error_from_rd_error">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="heim_assert">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="_krb5_extract_ticket">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="ASN1_MALLOC_ENCODE">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_KRB_ERROR">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_AS_REP">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="prompter">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="process_pa_data_to_key">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="change_password">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="decode_METHOD_DATA">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="process_pa_data_to_md">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_init_creds_ctx">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="fast_unwrap_as_rep">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_rd_error">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_data_zero">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_EncASRepPart">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="init_as_req">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="free_METHOD_DATA">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_principal_set_realm">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="decode_AS_REP">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_set_error_message">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_init_creds_set_service">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_free_keyblock">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_init_creds_set_password">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="copy_AS_REQ">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="krb5_set_real_time">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="fast_wrap_req">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="fast_unwrap_error">
  <data key="d7">calls</data>
</edge>
<edge source="krb5_init_creds_step" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="krb5_init_creds_step" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="size" target="heim_assert">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="ASN1_MALLOC_ENCODE">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="memset">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="change_password">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="decode_AS_REP">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="heim_assert">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="ASN1_MALLOC_ENCODE">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="decode_METHOD_DATA">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="decode_AS_REP">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="int" target="heim_assert">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="int" target="krb5_init_creds_step">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="eflags" target="_krb5_extract_ticket">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="eflags" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="eflags" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="eflags" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="eflags" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="eflags" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf2" target="change_password">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf2" target="krb5_init_creds_set_password">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf2" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf2" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf2" target="if_23">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf2" target="if_24">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>