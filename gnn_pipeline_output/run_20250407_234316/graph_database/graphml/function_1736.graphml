<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-2909</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="constructBidiRunsForSegment">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="object">
  <data key="d3">FunctionCall</data>
</node>
<node id="setPositionIgnoringNestedIsolates">
  <data key="d3">FunctionCall</data>
</node>
<node id="toRenderInline">
  <data key="d3">FunctionCall</data>
</node>
<node id="setupResolverToResumeInIsolate">
  <data key="d3">FunctionCall</data>
</node>
<node id="setStatus">
  <data key="d3">FunctionCall</data>
</node>
<node id="position">
  <data key="d3">FunctionCall</data>
</node>
<node id="InlineIterator">
  <data key="d3">FunctionCall</data>
</node>
<node id="style">
  <data key="d3">FunctionCall</data>
</node>
<node id="ASSERT">
  <data key="d3">FunctionCall</data>
</node>
<node id="createBidiRunsForLine">
  <data key="d3">FunctionCall</data>
</node>
<node id="isolatedRuns">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">unicodeBidi == Plaintext</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">isolatedResolver.runs(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!isolatedResolver.isolatedRuns(</data>
</node>
<node id="while_3">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">!topResolver.isolatedRuns(</data>
</node>
<edge source="constructBidiRunsForSegment" target="object">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="setPositionIgnoringNestedIsolates">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="toRenderInline">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="setupResolverToResumeInIsolate">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="setStatus">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="position">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="InlineIterator">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="style">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="ASSERT">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="createBidiRunsForLine">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="isolatedRuns">
  <data key="d5">calls</data>
</edge>
<edge source="constructBidiRunsForSegment" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="constructBidiRunsForSegment" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="constructBidiRunsForSegment" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="constructBidiRunsForSegment" target="while_3">
  <data key="d5">contains</data>
</edge>
</graph></graphml>