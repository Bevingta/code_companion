<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-12973</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="bmp_read_rle8_data">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="c">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="c1_int">
  <data key="d4">Variable</data>
</node>
<node id="getc">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c1_int == EOF</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == 0x00</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == 0x01</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == 0x02</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c1_int == EOF</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(OPJ_UINT32</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="for_12">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; (j &lt; c</data>
</node>
<node id="for_13">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; (j &lt; c</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">y &lt; height</data>
</node>
<node id="while_15">
  <data key="d4">ControlStructure_while</data>
  <data key="d5"></data>
</node>
<edge source="bmp_read_rle8_data" target="c">
  <data key="d6">declares</data>
</edge>
<edge source="bmp_read_rle8_data" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="bmp_read_rle8_data" target="c1_int">
  <data key="d6">declares</data>
</edge>
<edge source="bmp_read_rle8_data" target="getc">
  <data key="d6">calls</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="for_12">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="for_13">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="bmp_read_rle8_data" target="while_15">
  <data key="d6">contains</data>
</edge>
<edge source="c" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="for_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="for_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c1_int" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c1_int" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c1_int" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c1_int" target="for_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c1_int" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>