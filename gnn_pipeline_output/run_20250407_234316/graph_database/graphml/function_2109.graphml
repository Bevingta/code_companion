<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-5353</data>
<data key="d2">3.5</data>
<data key="d3">LOW</data>
<node id="krb5_ldap_get_password_policy_from_dn">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="pol_name">
  <data key="d4">Variable</data>
</node>
<node id="pol_dn">
  <data key="d4">Variable</data>
</node>
<node id="policy">
  <data key="d4">Variable</data>
</node>
<node id="krb5_ldap_free_password_policy">
  <data key="d4">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="krb5_ldap_put_handle_to_pool">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_HANDLE">
  <data key="d4">FunctionCall</data>
</node>
<node id="LDAP_SEARCH">
  <data key="d4">FunctionCall</data>
</node>
<node id="krb5_clear_error_message">
  <data key="d4">FunctionCall</data>
</node>
<node id="ldap_msgfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="SETUP_CONTEXT">
  <data key="d4">FunctionCall</data>
</node>
<node id="ldap_first_entry">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pol_dn == NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*policy == NULL</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ent != NULL</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(st = populate_policy(context, ld, ent, pol_name, *policy</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">st != 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*policy != NULL</data>
</node>
<edge source="krb5_ldap_get_password_policy_from_dn" target="pol_name">
  <data key="d6">declares</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="pol_dn">
  <data key="d6">declares</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="policy">
  <data key="d6">declares</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="krb5_ldap_free_password_policy">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="malloc">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="krb5_ldap_put_handle_to_pool">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="GET_HANDLE">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="LDAP_SEARCH">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="krb5_clear_error_message">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="ldap_msgfree">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="SETUP_CONTEXT">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="ldap_first_entry">
  <data key="d6">calls</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="krb5_ldap_get_password_policy_from_dn" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="pol_name" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pol_name" target="krb5_ldap_get_password_policy_from_dn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pol_name" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pol_dn" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pol_dn" target="LDAP_SEARCH">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pol_dn" target="krb5_ldap_get_password_policy_from_dn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="policy" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="policy" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="policy" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="policy" target="krb5_ldap_free_password_policy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="policy" target="malloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="policy" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="policy" target="krb5_ldap_get_password_policy_from_dn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="policy" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="policy" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>