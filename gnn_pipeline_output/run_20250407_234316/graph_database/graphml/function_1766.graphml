<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-5155</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="ReturnsValidPath">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="default_profile_path">
  <data key="d4">Variable</data>
</node>
<node id="dir_type">
  <data key="d4">Variable</data>
</node>
<node id="arraysize">
  <data key="d4">FunctionCall</data>
</node>
<node id="Get">
  <data key="d4">FunctionCall</data>
</node>
<node id="defined">
  <data key="d4">FunctionCall</data>
</node>
<node id="empty">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dir_type == base::DIR_CACHE</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dir_type == base::DIR_USER_DESKTOP</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dir_type == base::DIR_DEFAULT_USER_QUICK_LAUNCH</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base::win::GetVersion(</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dir_type == base::DIR_TASKBAR_PINS</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base::win::GetVersion(</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dir_type != base::DIR_EXE &amp;&amp; dir_type != base::DIR_MODULE &amp;&amp;
       dir_type != base::FILE_EXE &amp;&amp; dir_type != base::FILE_MODULE</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">path.ReferencesParent(</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">path.ReferencesParent(</data>
</node>
<edge source="ReturnsValidPath" target="default_profile_path">
  <data key="d6">declares</data>
</edge>
<edge source="ReturnsValidPath" target="dir_type">
  <data key="d6">declares</data>
</edge>
<edge source="ReturnsValidPath" target="arraysize">
  <data key="d6">calls</data>
</edge>
<edge source="ReturnsValidPath" target="Get">
  <data key="d6">calls</data>
</edge>
<edge source="ReturnsValidPath" target="defined">
  <data key="d6">calls</data>
</edge>
<edge source="ReturnsValidPath" target="empty">
  <data key="d6">calls</data>
</edge>
<edge source="ReturnsValidPath" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReturnsValidPath" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="default_profile_path" target="arraysize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="default_profile_path" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="default_profile_path" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="default_profile_path" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="default_profile_path" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dir_type" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dir_type" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dir_type" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dir_type" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dir_type" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dir_type" target="Get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dir_type" target="ReturnsValidPath">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>