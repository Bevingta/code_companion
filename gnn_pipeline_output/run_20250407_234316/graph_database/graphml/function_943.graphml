<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-12427</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ProcessMSLScript">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="message">
  <data key="d4">Variable</data>
</node>
<node id="n">
  <data key="d4">Variable</data>
</node>
<node id="status">
  <data key="d4">Variable</data>
</node>
<node id="CloneImageInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="xmlSubstituteEntitiesDefault">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowFileException">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="xmlParseChunk">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloneDrawInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="xmlFreeParserCtxt">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="xmlCreatePushParserCtxt">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="LogMagickEvent">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(msl_info.image_info == (ImageInfo **</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*image != (Image *</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n == 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status != 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msl_info.exception-&gt;severity &gt;= ErrorException</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msl_info.exception-&gt;severity == UndefinedException</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*image == (Image *</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msl_info.exception-&gt;severity != UndefinedException</data>
</node>
<node id="while_10">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">ReadBlobString(msl_image,message</data>
</node>
<edge source="ProcessMSLScript" target="message">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMSLScript" target="n">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMSLScript" target="status">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMSLScript" target="CloneImageInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="xmlSubstituteEntitiesDefault">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="ThrowFileException">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="AcquireMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="xmlParseChunk">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="CloneDrawInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="xmlFreeParserCtxt">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="xmlCreatePushParserCtxt">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="LogMagickEvent">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMSLScript" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMSLScript" target="while_10">
  <data key="d6">contains</data>
</edge>
<edge source="message" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="message" target="xmlParseChunk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="message" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="message" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="message" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="n" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="while_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="status" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="status" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="status" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>