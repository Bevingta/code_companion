<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-4539</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="_xml_characterDataHandler">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="doprint">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="userData">
  <data key="d4">Variable</data>
</node>
<node id="decoded_value">
  <data key="d4">Variable</data>
</node>
<node id="decoded_len">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="newlen">
  <data key="d4">Variable</data>
</node>
<node id="zend_hash_internal_pointer_end_ex">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRVAL_PP">
  <data key="d4">FunctionCall</data>
</node>
<node id="MAKE_STD_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_error_docref">
  <data key="d4">FunctionCall</data>
</node>
<node id="efree">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_next_index_insert">
  <data key="d4">FunctionCall</data>
</node>
<node id="add_assoc_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="_xml_add_to_info">
  <data key="d4">FunctionCall</data>
</node>
<node id="TSRMLS_FETCH">
  <data key="d4">FunctionCall</data>
</node>
<node id="array_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="_xml_xmlchar_zval">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRLEN_PP">
  <data key="d4">FunctionCall</data>
</node>
<node id="_xml_resource_zval">
  <data key="d4">FunctionCall</data>
</node>
<node id="add_assoc_long">
  <data key="d4">FunctionCall</data>
</node>
<node id="xml_utf8_decode">
  <data key="d4">FunctionCall</data>
</node>
<node id="strncpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_ptr_dtor">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser-&gt;characterDataHandler</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(retval = xml_call_handler(parser, parser-&gt;characterDataHandler, parser-&gt;characterDataPtr, 2, args</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser-&gt;data</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">doprint</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">doprint || (! parser-&gt;skipwhite</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser-&gt;lastwasopen</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_find(Z_ARRVAL_PP(parser-&gt;ctag</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hpos &amp;&amp; (zend_hash_get_current_data_ex(Z_ARRVAL_P(parser-&gt;data</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_find(Z_ARRVAL_PP(curtag</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!strcmp(Z_STRVAL_PP(mytype</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_find(Z_ARRVAL_PP(curtag</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser-&gt;level &lt;= XML_MAXLEVEL</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parser-&gt;level == (XML_MAXLEVEL + 1</data>
</node>
<node id="for_14">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; decoded_len; i++</data>
</node>
<node id="switch_15">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">decoded_value[i]</data>
</node>
<edge source="_xml_characterDataHandler" target="doprint">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="userData">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="decoded_value">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="decoded_len">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="newlen">
  <data key="d6">declares</data>
</edge>
<edge source="_xml_characterDataHandler" target="zend_hash_internal_pointer_end_ex">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="Z_STRVAL_PP">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="MAKE_STD_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="php_error_docref">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="efree">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="zend_hash_next_index_insert">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="add_assoc_string">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="_xml_add_to_info">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="TSRMLS_FETCH">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="array_init">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="_xml_xmlchar_zval">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="Z_STRLEN_PP">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="_xml_resource_zval">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="add_assoc_long">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="xml_utf8_decode">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="strncpy">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="zval_ptr_dtor">
  <data key="d6">calls</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="for_14">
  <data key="d6">contains</data>
</edge>
<edge source="_xml_characterDataHandler" target="switch_15">
  <data key="d6">contains</data>
</edge>
<edge source="doprint" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="doprint" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="doprint" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="doprint" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="doprint" target="for_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="doprint" target="switch_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="for_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="_xml_characterDataHandler">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="_xml_xmlchar_zval">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="xml_utf8_decode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="userData" target="_xml_characterDataHandler">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="decoded_value" target="switch_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="decoded_value" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="decoded_value" target="add_assoc_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="decoded_value" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_value" target="for_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="for_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="decoded_len" target="xml_utf8_decode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="decoded_len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="decoded_len" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="newlen" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newlen" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>