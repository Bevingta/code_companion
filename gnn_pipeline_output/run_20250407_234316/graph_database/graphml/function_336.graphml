<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-3237</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="vsock_stream_recvmsg">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="vsk">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="read">
  <data key="d4">Variable</data>
</node>
<node id="msg">
  <data key="d4">Variable</data>
</node>
<node id="timeout">
  <data key="d4">Variable</data>
</node>
<node id="recv_data">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="target">
  <data key="d4">Variable</data>
</node>
<node id="kiocb">
  <data key="d4">Variable</data>
</node>
<node id="sock">
  <data key="d4">Variable</data>
</node>
<node id="copied">
  <data key="d4">Variable</data>
</node>
<node id="sk">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="notify_recv_pre_dequeue">
  <data key="d4">FunctionCall</data>
</node>
<node id="notify_recv_pre_block">
  <data key="d4">FunctionCall</data>
</node>
<node id="stream_dequeue">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_state_change">
  <data key="d4">FunctionCall</data>
</node>
<node id="prepare_to_wait">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_intr_errno">
  <data key="d4">FunctionCall</data>
</node>
<node id="lock_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_rcvlowat">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_rcvtimeo">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_set_flag">
  <data key="d4">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="schedule_timeout">
  <data key="d4">FunctionCall</data>
</node>
<node id="notify_recv_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="DEFINE_WAIT">
  <data key="d4">FunctionCall</data>
</node>
<node id="vsock_sk">
  <data key="d4">FunctionCall</data>
</node>
<node id="vsock_stream_has_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="finish_wait">
  <data key="d4">FunctionCall</data>
</node>
<node id="notify_recv_post_dequeue">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_state != SS_CONNECTED</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sock_flag(sk, SOCK_DONE</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; MSG_OOB</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!len</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">target &gt;= transport-&gt;stream_rcvhiwat(vsk</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err &lt; 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ready &lt; 0</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ready &gt; 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err &lt; 0</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">read &lt; 0</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err &lt; 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">read &gt;= target || flags &amp; MSG_PEEK</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_err != 0 || (sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">timeout == 0</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err &lt; 0</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">signal_pending(current</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">timeout == 0</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_err</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copied &gt; 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(flags &amp; MSG_PEEK</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vsk-&gt;peer_shutdown &amp; SEND_SHUTDOWN</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vsock_stream_has_data(vsk</data>
</node>
<node id="while_24">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<edge source="vsock_stream_recvmsg" target="vsk">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="read">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="msg">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="timeout">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="recv_data">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="target">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="kiocb">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sock">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="copied">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sk">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="vsock_stream_recvmsg" target="notify_recv_pre_dequeue">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="notify_recv_pre_block">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="stream_dequeue">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sk_state_change">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="prepare_to_wait">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sock_intr_errno">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="lock_sock">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sock_rcvlowat">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sock_rcvtimeo">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="sock_set_flag">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="release_sock">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="schedule_timeout">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="notify_recv_init">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="DEFINE_WAIT">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="vsock_sk">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="vsock_stream_has_data">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="finish_wait">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="notify_recv_post_dequeue">
  <data key="d6">calls</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="vsock_stream_recvmsg" target="while_24">
  <data key="d6">contains</data>
</edge>
<edge source="vsk" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vsk" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vsk" target="notify_recv_pre_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="notify_recv_pre_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="notify_recv_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="vsock_stream_has_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="notify_recv_post_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vsk" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vsk" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="read" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="read" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="read" target="notify_recv_post_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="read" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="vsock_stream_recvmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="msg" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeout" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeout" target="sock_intr_errno">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="timeout" target="schedule_timeout">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="timeout" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="recv_data" target="notify_recv_pre_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="recv_data" target="notify_recv_pre_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="recv_data" target="notify_recv_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="recv_data" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="recv_data" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="recv_data" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="recv_data" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="recv_data" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="sock_rcvlowat">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="vsock_stream_recvmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="target" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="notify_recv_pre_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="target" target="notify_recv_pre_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="target" target="notify_recv_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="target" target="notify_recv_post_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="target" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="kiocb" target="vsock_stream_recvmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sock" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sock" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sock" target="vsock_stream_recvmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="copied" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copied" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="copied" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copied" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copied" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copied" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copied" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="notify_recv_pre_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="notify_recv_pre_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_state_change">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="prepare_to_wait">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_rcvlowat">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_rcvtimeo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_set_flag">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="notify_recv_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="vsock_sk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="vsock_stream_has_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="finish_wait">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="notify_recv_post_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="flags" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="flags" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="flags" target="stream_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="sock_rcvlowat">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="sock_rcvtimeo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="vsock_stream_recvmsg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="notify_recv_post_dequeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>