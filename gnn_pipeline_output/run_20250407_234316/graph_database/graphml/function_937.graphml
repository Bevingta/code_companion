<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-12664</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="WritePALMImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="transparentIndex">
  <data key="d4">Variable</data>
</node>
<node id="x">
  <data key="d4">Variable</data>
</node>
<node id="y">
  <data key="d4">Variable</data>
</node>
<node id="GetAuthenticIndexQueue">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteBlobMSBShort">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetNumberColors">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="RemapImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="else">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteBlobMSBLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageType">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelOpacity">
  <data key="d4">FunctionCall</data>
</node>
<node id="IsPaletteImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantizeInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyQuantizeInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireExceptionInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="MagickMin">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyExceptionInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="TransformImageColorspace">
  <data key="d4">FunctionCall</data>
</node>
<node id="SortColormapByIntensity">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="QuantizeImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBlobSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="ConstituteImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel &gt; 16</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel &lt; 16</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel &lt; 8</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image_info-&gt;compression == RLECompression</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel &gt; 1</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image_info-&gt;compression == RLECompression</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;compression == RLECompression</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;compression == FaxCompression</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel == 16</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel == 8</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; PALM_HAS_COLORMAP_FLAG</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; PALM_IS_COMPRESSED_FLAG</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;compression == FaxCompression</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">one_row == (unsigned char *</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p == (PixelPacket *</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel == 16</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetPixelOpacity(p</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel &gt;= 8</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bit != 0</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % (8/bits_per_pixel</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;compression == RLECompression</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;compression == FaxCompression</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(y == 0</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; PALM_HAS_TRANSPARENCY_FLAG</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bits_per_pixel == 16</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">flags &amp; PALM_IS_COMPRESSED_FLAG</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">one_row != (unsigned char *</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">lastrow != (unsigned char *</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetNextImageInList(image</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="for_34">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bits_per_pixel=1;  (one &lt;&lt; bits_per_pixel</data>
</node>
<node id="for_35">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">count = 0; count &lt; image-&gt;colors; count++</data>
</node>
<node id="for_36">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_37">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_38">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_39">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_40">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_41">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x = 0;  x &lt; (ssize_t</data>
</node>
<node id="for_42">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=0, byte=0; bit &lt; (unsigned char</data>
</node>
<node id="for_43">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">cc=(GetBlobSize(image</data>
</node>
<node id="while_44">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">x &lt; (ssize_t</data>
</node>
<node id="while_45">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(one_row[++x] == byte</data>
</node>
<node id="while_46">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">image_info-&gt;adjoin != MagickFalse</data>
</node>
<edge source="WritePALMImage" target="transparentIndex">
  <data key="d6">declares</data>
</edge>
<edge source="WritePALMImage" target="x">
  <data key="d6">declares</data>
</edge>
<edge source="WritePALMImage" target="y">
  <data key="d6">declares</data>
</edge>
<edge source="WritePALMImage" target="GetAuthenticIndexQueue">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="WriteBlobMSBShort">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetNumberColors">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="RemapImage">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="DestroyImage">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="else">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="WriteBlobMSBLong">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SetImageType">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetPixelOpacity">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="IsPaletteImage">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="AcquireQuantizeInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="DestroyQuantizeInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SyncNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="AcquireExceptionInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="WriteBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="MagickMin">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="DestroyExceptionInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="TransformImageColorspace">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SortColormapByIntensity">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="WriteBlob">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="QuantizeImage">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="CopyMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="GetBlobSize">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="ConstituteImage">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="SeekBlob">
  <data key="d6">calls</data>
</edge>
<edge source="WritePALMImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_34">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_35">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_36">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_37">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_38">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_39">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_40">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_41">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_42">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="for_43">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="while_44">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="while_45">
  <data key="d6">contains</data>
</edge>
<edge source="WritePALMImage" target="while_46">
  <data key="d6">contains</data>
</edge>
<edge source="transparentIndex" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="transparentIndex" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="transparentIndex" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="x" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="while_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="while_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="while_45">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>