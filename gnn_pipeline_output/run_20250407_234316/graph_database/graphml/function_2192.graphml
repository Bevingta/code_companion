<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-10054</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="sixel_decode">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="y">
  <data key="d4">Variable</data>
</node>
<node id="ny">
  <data key="d4">Variable</data>
</node>
<node id="nx">
  <data key="d4">Variable</data>
</node>
<node id="sixel_palet">
  <data key="d4">Variable</data>
</node>
<node id="param">
  <data key="d4">Variable</data>
</node>
<node id="SIXEL_RGB">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="hls_to_rgb">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="SIXEL_XRGB">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">imbuf == NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p[0] == '\033' &amp;&amp; p[1] == 'P'</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '\033'</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == 'q'</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 2</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[2] == 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">attributed_pan &lt;= 0</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">attributed_pad &lt;= 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p[0] == '\033' &amp;&amp; p[1] == '\\'</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '"'</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 1</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 2 &amp;&amp; param[2] &gt; 0</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 3 &amp;&amp; param[3] &gt; 0</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">attributed_pan &lt;= 0</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">attributed_pad &lt;= 0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">imsx &lt; attributed_ph || imsy &lt; attributed_pv</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dmbuf == (unsigned char *</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '!'</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '#'</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 0</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(color_index = param[0]</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">color_index &gt;= SIXEL_PALETTE_MAX</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt; 4</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[1] == 1</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[2] &gt; 360</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[3] &gt; 100</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[4] &gt; 100</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[1] == 2</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[2] &gt; 100</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[3] &gt; 100</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">param[4] &gt; 100</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '$'</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '-'</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p &gt;= '?' &amp;&amp; *p &lt;= '\177'</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">imsx &lt; (posision_x + repeat_count</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dmbuf == (unsigned char *</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">color_index &gt; max_color_index</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(b = *(p++</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">repeat_count &lt;= 1</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(b &amp; sixel_vertical_mask</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">max_x &lt; posision_x</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">max_y &lt; (posision_y + i</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(b &amp; sixel_vertical_mask</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(b &amp; c</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">max_x &lt; (posision_x + repeat_count - 1</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">max_y &lt; (posision_y + i + n - 1</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">++max_x &lt; attributed_ph</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">++max_y &lt; attributed_pv</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">imsx &gt; max_x || imsy &gt; max_y</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dmbuf = (unsigned char *</data>
</node>
<node id="for_53">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">n = 0; n &lt; 16; n++</data>
</node>
<node id="for_54">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">r = 0; r &lt; 6; r++</data>
</node>
<node id="for_55">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">g = 0; g &lt; 6; g++</data>
</node>
<node id="for_56">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">b = 0; b &lt; 6; b++</data>
</node>
<node id="for_57">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 24; i++</data>
</node>
<node id="for_58">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; n &lt; SIXEL_PALETTE_MAX; n++</data>
</node>
<node id="for_59">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = 0; y &lt; imsy; ++y</data>
</node>
<node id="for_60">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = 0; y &lt; imsy; ++y</data>
</node>
<node id="for_61">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 6; i++</data>
</node>
<node id="for_62">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 6; i++</data>
</node>
<node id="for_63">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">n = 1; (i + n</data>
</node>
<node id="for_64">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = posision_y + i; y &lt; posision_y + i + n; ++y</data>
</node>
<node id="for_65">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = 0; y &lt; dmsy; ++y</data>
</node>
<node id="for_66">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">n = 0; n &lt; (ssize_t</data>
</node>
<node id="while_67">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">*p != '\0'</data>
</node>
<node id="while_68">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">nx &lt; (posision_x + repeat_count</data>
</node>
<node id="switch_69">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">param[0]</data>
</node>
<edge source="sixel_decode" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="y">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="ny">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="nx">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="sixel_palet">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="param">
  <data key="d6">declares</data>
</edge>
<edge source="sixel_decode" target="SIXEL_RGB">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="hls_to_rgb">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="CopyMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="SIXEL_XRGB">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="get_params">
  <data key="d6">calls</data>
</edge>
<edge source="sixel_decode" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_53">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_54">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_55">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_56">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_57">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_58">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_59">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_60">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_61">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_62">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_63">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_64">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_65">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="for_66">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="while_67">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="while_68">
  <data key="d6">contains</data>
</edge>
<edge source="sixel_decode" target="switch_69">
  <data key="d6">contains</data>
</edge>
<edge source="char" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="sixel_decode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="char" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="char" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="y" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="for_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ny" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ny" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ny" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ny" target="while_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nx" target="while_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nx" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nx" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nx" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="for_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sixel_palet" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="switch_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="param" target="hls_to_rgb">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="param" target="SIXEL_XRGB">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="param" target="get_params">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="param" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="param" target="while_67">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>