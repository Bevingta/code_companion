<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-15652</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="file_continue">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i_ctx_p">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="devlen">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="push_op_estack">
  <data key="d4">FunctionCall</data>
</node>
<node id="r_set_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="ref_assign">
  <data key="d4">FunctionCall</data>
</node>
<node id="r_size">
  <data key="d4">FunctionCall</data>
</node>
<node id="enumerate_next">
  <data key="d4">FunctionCall</data>
</node>
<node id="push">
  <data key="d4">FunctionCall</data>
</node>
<node id="r_ptr">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len &lt; devlen</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code == ~(uint</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt; len</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">iodev != iodev_default(imemory</data>
</node>
<node id="while_4">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<edge source="file_continue" target="i_ctx_p">
  <data key="d6">declares</data>
</edge>
<edge source="file_continue" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="file_continue" target="devlen">
  <data key="d6">declares</data>
</edge>
<edge source="file_continue" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="file_continue" target="push_op_estack">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="r_set_size">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="ref_assign">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="r_size">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="enumerate_next">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="push">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="r_ptr">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="file_continue" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="file_continue" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="file_continue" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="file_continue" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="file_continue" target="while_4">
  <data key="d6">contains</data>
</edge>
<edge source="i_ctx_p" target="file_continue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="r_set_size">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="devlen" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="devlen" target="r_set_size">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="devlen" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="devlen" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="devlen" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="r_set_size">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>