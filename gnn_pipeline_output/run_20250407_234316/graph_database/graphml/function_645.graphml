<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7115</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="handle_packet">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d3">Variable</data>
</node>
<node id="success">
  <data key="d3">Variable</data>
</node>
<node id="data_len">
  <data key="d3">Variable</data>
</node>
<node id="pkthdr">
  <data key="d3">Variable</data>
</node>
<node id="cpkt">
  <data key="d3">Variable</data>
</node>
<node id="odata">
  <data key="d3">Variable</data>
</node>
<node id="checks">
  <data key="d3">FunctionCall</data>
</node>
<node id="signal">
  <data key="d3">FunctionCall</data>
</node>
<node id="parse_control_packet">
  <data key="d3">FunctionCall</data>
</node>
<node id="the">
  <data key="d3">FunctionCall</data>
</node>
<node id="send_auth">
  <data key="d3">FunctionCall</data>
</node>
<node id="init_packet">
  <data key="d3">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d3">FunctionCall</data>
</node>
<node id="send_udp">
  <data key="d3">FunctionCall</data>
</node>
<node id="raw_term">
  <data key="d3">FunctionCall</data>
</node>
<node id="setvbuf">
  <data key="d3">FunctionCall</data>
</node>
<node id="parse_packet">
  <data key="d3">FunctionCall</data>
</node>
<node id="fwrite">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">data_len &lt; MT_HEADER_LEN</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkthdr.seskey != sessionkey</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkthdr.ptype == MT_PTYPE_DATA</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkthdr.counter &gt; incounter || (incounter - pkthdr.counter</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">cpkt.cptype == MT_CPTYPE_PASSSALT</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">cpkt.cptype == MT_CPTYPE_PLAINDATA</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">cpkt.cptype == MT_CPTYPE_END_AUTH</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">is_a_tty</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkthdr.ptype == MT_PTYPE_ACK</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pkthdr.ptype == MT_PTYPE_END</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!quiet_mode</data>
</node>
<node id="while_11">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">success</data>
</node>
<edge source="handle_packet" target="char">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="success">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="data_len">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="pkthdr">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="cpkt">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="odata">
  <data key="d5">declares</data>
</edge>
<edge source="handle_packet" target="checks">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="signal">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="parse_control_packet">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="the">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="send_auth">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="init_packet">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="fprintf">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="send_udp">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="raw_term">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="setvbuf">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="parse_packet">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="fwrite">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="handle_packet" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="handle_packet" target="while_11">
  <data key="d5">contains</data>
</edge>
<edge source="char" target="handle_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="char" target="setvbuf">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="char" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="char" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="char" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="char" target="while_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="success" target="while_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="success" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="data_len" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="data_len" target="parse_control_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data_len" target="init_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data_len" target="handle_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="data_len" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pkthdr" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pkthdr" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pkthdr" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pkthdr" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pkthdr" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pkthdr" target="init_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pkthdr" target="parse_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cpkt" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cpkt" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cpkt" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cpkt" target="parse_control_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cpkt" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cpkt" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cpkt" target="while_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="odata" target="init_packet">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="odata" target="send_udp">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="odata" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="odata" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>