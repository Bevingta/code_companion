<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-7526</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="InsertRow">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="y">
  <data key="d4">Variable</data>
</node>
<node id="bpp">
  <data key="d4">Variable</data>
</node>
<node id="x">
  <data key="d4">Variable</data>
</node>
<node id="bit">
  <data key="d4">Variable</data>
</node>
<node id="ConstrainColormapIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetAuthenticIndexQueue">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRGBO">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 8</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 4</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 4</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 4</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns % 2</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (PixelPacket *</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!SyncAuthenticPixels(image,exception</data>
</node>
<node id="for_15">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_16">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=0; bit &lt; 8; bit++</data>
</node>
<node id="for_17">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">bit=0; bit &lt; (ssize_t</data>
</node>
<node id="for_18">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_19">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; ((ssize_t</data>
</node>
<node id="for_20">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_21">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="switch_22">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">bpp</data>
</node>
<edge source="InsertRow" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="InsertRow" target="y">
  <data key="d6">declares</data>
</edge>
<edge source="InsertRow" target="bpp">
  <data key="d6">declares</data>
</edge>
<edge source="InsertRow" target="x">
  <data key="d6">declares</data>
</edge>
<edge source="InsertRow" target="bit">
  <data key="d6">declares</data>
</edge>
<edge source="InsertRow" target="ConstrainColormapIndex">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="GetAuthenticIndexQueue">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="SetPixelRGBO">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="InsertRow" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_15">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_16">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_17">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_18">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_19">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_20">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="for_21">
  <data key="d6">contains</data>
</edge>
<edge source="InsertRow" target="switch_22">
  <data key="d6">contains</data>
</edge>
<edge source="char" target="InsertRow">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="y" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="y" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bpp" target="switch_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bpp" target="InsertRow">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="x" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bit" target="for_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="for_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="SetPixelIndex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bit" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bit" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>