<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-2015</data>
<data key="d1">4.7</data>
<data key="d2">MEDIUM</data>
<node id="ext4_orphan_del">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="prev">
  <data key="d3">Variable</data>
</node>
<node id="sbi">
  <data key="d3">Variable</data>
</node>
<node id="iloc">
  <data key="d3">Variable</data>
</node>
<node id="ei">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="handle">
  <data key="d3">Variable</data>
</node>
<node id="inode">
  <data key="d3">Variable</data>
</node>
<node id="i_prev">
  <data key="d3">Variable</data>
</node>
<node id="iloc2">
  <data key="d3">Variable</data>
</node>
<node id="ext4_reserve_inode_write">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="EXT4_I">
  <data key="d3">FunctionCall</data>
</node>
<node id="NEXT_ORPHAN">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_del_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="cpu_to_le32">
  <data key="d3">FunctionCall</data>
</node>
<node id="ext4_handle_dirty_super">
  <data key="d3">FunctionCall</data>
</node>
<node id="ext4_std_error">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_entry">
  <data key="d3">FunctionCall</data>
</node>
<node id="ext4_mark_iloc_dirty">
  <data key="d3">FunctionCall</data>
</node>
<node id="jbd_debug">
  <data key="d3">FunctionCall</data>
</node>
<node id="ext4_journal_get_write_access">
  <data key="d3">FunctionCall</data>
</node>
<node id="BUFFER_TRACE">
  <data key="d3">FunctionCall</data>
</node>
<node id="brelse">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="EXT4_SB">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!EXT4_SB(inode-&gt;i_sb</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">list_empty(&amp;ei-&gt;i_orphan</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!handle</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">prev == &amp;sbi-&gt;s_orphan</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<edge source="ext4_orphan_del" target="prev">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="sbi">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="iloc">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="ei">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="handle">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="inode">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="i_prev">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="iloc2">
  <data key="d5">declares</data>
</edge>
<edge source="ext4_orphan_del" target="ext4_reserve_inode_write">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="EXT4_I">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="NEXT_ORPHAN">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="list_del_init">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="cpu_to_le32">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="ext4_handle_dirty_super">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="ext4_std_error">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="list_entry">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="ext4_mark_iloc_dirty">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="jbd_debug">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="ext4_journal_get_write_access">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="BUFFER_TRACE">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="brelse">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="EXT4_SB">
  <data key="d5">calls</data>
</edge>
<edge source="ext4_orphan_del" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="ext4_orphan_del" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="prev" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="prev" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prev" target="NEXT_ORPHAN">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prev" target="list_entry">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prev" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prev" target="jbd_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prev" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="ext4_journal_get_write_access">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="BUFFER_TRACE">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iloc" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iloc" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iloc" target="brelse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ei" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ei" target="list_del_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="ext4_std_error">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="handle" target="ext4_handle_dirty_super">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="handle" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="handle" target="ext4_journal_get_write_access">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="handle" target="ext4_orphan_del">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="handle" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="handle" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="mutex_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="EXT4_I">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="NEXT_ORPHAN">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="ext4_handle_dirty_super">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="ext4_std_error">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="list_entry">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="jbd_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="ext4_orphan_del">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="mutex_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="EXT4_SB">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="i_prev" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_prev" target="NEXT_ORPHAN">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_prev" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_prev" target="jbd_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_prev" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iloc2" target="ext4_reserve_inode_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iloc2" target="ext4_mark_iloc_dirty">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iloc2" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>