<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2018-12453</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="xgroupCommand">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="pending">
  <data key="d5">Variable</data>
</node>
<node id="opt">
  <data key="d5">Variable</data>
</node>
<node id="help">
  <data key="d5">Variable</data>
</node>
<node id="addReplyHelp">
  <data key="d5">FunctionCall</data>
</node>
<node id="lookupKeyWriteOrReply">
  <data key="d5">FunctionCall</data>
</node>
<node id="raxRemove">
  <data key="d5">FunctionCall</data>
</node>
<node id="addReply">
  <data key="d5">FunctionCall</data>
</node>
<node id="streamDelConsumer">
  <data key="d5">FunctionCall</data>
</node>
<node id="streamFreeCG">
  <data key="d5">FunctionCall</data>
</node>
<node id="addReplySds">
  <data key="d5">FunctionCall</data>
</node>
<node id="addReplyErrorFormat">
  <data key="d5">FunctionCall</data>
</node>
<node id="addReplyLongLong">
  <data key="d5">FunctionCall</data>
</node>
<node id="streamCreateCG">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c-&gt;argc &gt;= 4</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">o == NULL</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(cg = streamLookupCG(s,grpname</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcasecmp(opt,"CREATE"</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcmp(c-&gt;argv[4]-&gt;ptr,"$"</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">streamParseIDOrReply(c,c-&gt;argv[4],&amp;id,0</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">cg</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcasecmp(opt,"SETID"</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcmp(c-&gt;argv[4]-&gt;ptr,"$"</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">streamParseIDOrReply(c,c-&gt;argv[4],&amp;id,0</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcasecmp(opt,"DESTROY"</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">cg</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcasecmp(opt,"DELCONSUMER"</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!strcasecmp(opt,"HELP"</data>
</node>
<edge source="xgroupCommand" target="pending">
  <data key="d7">declares</data>
</edge>
<edge source="xgroupCommand" target="opt">
  <data key="d7">declares</data>
</edge>
<edge source="xgroupCommand" target="help">
  <data key="d7">declares</data>
</edge>
<edge source="xgroupCommand" target="addReplyHelp">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="lookupKeyWriteOrReply">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="raxRemove">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="addReply">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="streamDelConsumer">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="streamFreeCG">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="addReplySds">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="addReplyErrorFormat">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="addReplyLongLong">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="streamCreateCG">
  <data key="d7">calls</data>
</edge>
<edge source="xgroupCommand" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="xgroupCommand" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="pending" target="addReplyLongLong">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pending" target="if_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="opt" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="opt" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="opt" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="opt" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="opt" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="opt" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="help" target="addReplyHelp">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="help" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>