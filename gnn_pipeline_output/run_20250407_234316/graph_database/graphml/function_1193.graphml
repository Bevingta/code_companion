<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-8900</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadHDRImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">Variable</data>
</node>
<node id="target">
  <data key="d4">Variable</data>
</node>
<node id="c">
  <data key="d4">Variable</data>
</node>
<node id="gamma">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="comment">
  <data key="d4">Variable</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="pow">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProperty">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageColorspace">
  <data key="d4">FunctionCall</data>
</node>
<node id="FormatLocaleString">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelChannels">
  <data key="d4">FunctionCall</data>
</node>
<node id="StringToDouble">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="sscanf">
  <data key="d4">FunctionCall</data>
</node>
<node id="RGBE">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireString">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResizeQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == (int</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(c == EOF</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">comment == (char *</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">comment == (char *</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isalnum(c</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '='</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleCompare(keyword,"Y"</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">value_expected == MagickFalse</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleCompare(keyword,"format"</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleCompare(keyword,"gamma"</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleCompare(keyword,"primaries"</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">strcmp(keyword,target</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns == 0</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(LocaleCompare(format,"32-bit_rle_rgbe"</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;columns == 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleCompare(format,"32-bit_rle_xyze"</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixels == (unsigned char *</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;compression != RLECompression</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != 4</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count &lt; 1</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixel[0] &gt; 128</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count == 0</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count == 0</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">--count &gt; 0</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count &lt; 1</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;compression == RLECompression</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pixel[3] != 0</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="for_41">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">p=comment; comment != (char *</data>
</node>
<node id="for_42">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_43">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; 4; i++</data>
</node>
<node id="for_44">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_45">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">isgraph(c</data>
</node>
<node id="while_46">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">isalnum(c</data>
</node>
<node id="while_47">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(isspace((int</data>
</node>
<node id="while_48">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(c != '\n'</data>
</node>
<node id="while_49">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">isspace((int</data>
</node>
<node id="while_50">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">p &lt; end</data>
</node>
<node id="while_51">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">count-- &gt; 0</data>
</node>
<node id="switch_52">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">*keyword</data>
</node>
<edge source="ReadHDRImage" target="length">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="target">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="c">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="gamma">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="comment">
  <data key="d6">declares</data>
</edge>
<edge source="ReadHDRImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="pow">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="DestroyString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="DestroyImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetImageProperty">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetImageColorspace">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="FormatLocaleString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="GetPixelChannels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="StringToDouble">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="sscanf">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="RGBE">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="CopyMagickString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="ReadBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="AcquireString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="ResizeQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadHDRImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="for_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="for_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="for_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="for_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="while_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadHDRImage" target="switch_52">
  <data key="d6">contains</data>
</edge>
<edge source="length" target="ResizeQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="while_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="target" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="while_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="target" target="switch_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="for_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="while_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gamma" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="SetPixelGreen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gamma" target="SetPixelRed">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gamma" target="SetPixelBlue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gamma" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="for_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="for_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="while_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gamma" target="switch_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="for_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_45">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="for_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="DestroyString">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="SetImageProperty">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="ResizeQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="while_45">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>