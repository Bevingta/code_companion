<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-11072</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="burl_normalize_2F_to_slash_fix">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="blen">
  <data key="d5">Variable</data>
</node>
<node id="j">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="qs">
  <data key="d5">Variable</data>
</node>
<node id="used">
  <data key="d5">Variable</data>
</node>
<node id="buffer_string_length">
  <data key="d5">FunctionCall</data>
</node>
<node id="memmove">
  <data key="d5">FunctionCall</data>
</node>
<node id="buffer_string_set_length">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">s[i] == '%' &amp;&amp; s[i+1] == '2' &amp;&amp; s[i+2] == 'F'</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">qs &gt;= 0</data>
</node>
<node id="for_2">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">; i &lt; used; ++i, ++j</data>
</node>
<edge source="burl_normalize_2F_to_slash_fix" target="blen">
  <data key="d7">declares</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="j">
  <data key="d7">declares</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="qs">
  <data key="d7">declares</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="used">
  <data key="d7">declares</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="buffer_string_length">
  <data key="d7">calls</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="memmove">
  <data key="d7">calls</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="buffer_string_set_length">
  <data key="d7">calls</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="burl_normalize_2F_to_slash_fix" target="for_2">
  <data key="d7">contains</data>
</edge>
<edge source="blen" target="memmove">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="blen" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="j" target="for_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="qs" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="qs" target="memmove">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="qs" target="burl_normalize_2F_to_slash_fix">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="used" target="for_2">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>