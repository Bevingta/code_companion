<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2015-3836</data>
<data key="d3">10.0</data>
<data key="d4">HIGH</data>
<node id="Parse_wave">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="pSample">
  <data key="d5">Variable</data>
</node>
<node id="EAS_ReportEx">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = EAS_HWFileSeek(pDLSData-&gt;hwInstData, pDLSData-&gt;fileHandle, pos</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = NextChunk(pDLSData, &amp;pos, &amp;temp, &amp;size</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">temp != CHUNK_WAVE</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = NextChunk(pDLSData, &amp;pos, &amp;temp, &amp;size</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">dataSize &gt; MAX_DLS_WAVE_SIZE</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pDLSData-&gt;pDLS == NULL</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!fmtPos</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!dataPos</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">wsmpPos</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = Parse_wsmp(pDLSData, wsmpPos, p</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = Parse_fmt(pDLSData, fmtPos, p</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitDepth == 8</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p-&gt;bitsPerSample == 8</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p-&gt;loopLength</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p-&gt;bitsPerSample == 16</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p-&gt;loopLength</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pDLSData-&gt;pDLS == NULL</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pDLSData-&gt;wavePoolOffset &gt; pDLSData-&gt;wavePoolSize</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(result = Parse_data(pDLSData, dataPos, dataSize, p, pSample</data>
</node>
<node id="while_19">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">pos &lt; endChunk</data>
</node>
<node id="switch_20">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">temp</data>
</node>
<edge source="Parse_wave" target="pSample">
  <data key="d7">declares</data>
</edge>
<edge source="Parse_wave" target="EAS_ReportEx">
  <data key="d7">calls</data>
</edge>
<edge source="Parse_wave" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="while_19">
  <data key="d7">contains</data>
</edge>
<edge source="Parse_wave" target="switch_20">
  <data key="d7">contains</data>
</edge>
<edge source="pSample" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>