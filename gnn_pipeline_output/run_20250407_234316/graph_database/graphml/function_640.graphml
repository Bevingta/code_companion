<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7130</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="php_wddx_pop_element">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="new_str">
  <data key="d3">Variable</data>
</node>
<node id="user_data">
  <data key="d3">Variable</data>
</node>
<node id="new_len">
  <data key="d3">Variable</data>
</node>
<node id="STR_FREE">
  <data key="d3">FunctionCall</data>
</node>
<node id="MAKE_STD_ZVAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_next_index_insert">
  <data key="d3">FunctionCall</data>
</node>
<node id="object_init_ex">
  <data key="d3">FunctionCall</data>
</node>
<node id="Z_DELREF_P">
  <data key="d3">FunctionCall</data>
</node>
<node id="Z_STRVAL_P">
  <data key="d3">FunctionCall</data>
</node>
<node id="call_user_function_ex">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_str_tolower">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_ptr_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="php_store_class_name">
  <data key="d3">FunctionCall</data>
</node>
<node id="php_base64_decode">
  <data key="d3">FunctionCall</data>
</node>
<node id="TSRMLS_FETCH">
  <data key="d3">FunctionCall</data>
</node>
<node id="wddx_stack_top">
  <data key="d3">FunctionCall</data>
</node>
<node id="Z_STRLEN_P">
  <data key="d3">FunctionCall</data>
</node>
<node id="HASH_OF">
  <data key="d3">FunctionCall</data>
</node>
<node id="add_property_zval">
  <data key="d3">FunctionCall</data>
</node>
<node id="efree">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_symtable_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="__wakeup">
  <data key="d3">FunctionCall</data>
</node>
<node id="EG">
  <data key="d3">FunctionCall</data>
</node>
<node id="FREE_ZVAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_merge">
  <data key="d3">FunctionCall</data>
</node>
<node id="ZVAL_STRING">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stack-&gt;top == 0</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!strcmp(name, EL_STRING</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ent1-&gt;data</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stack-&gt;top &gt; 1</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!strcmp(name, EL_BINARY</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_P(ent1-&gt;data</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">retval</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stack-&gt;top &gt; 1</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ent2-&gt;type == ST_FIELD &amp;&amp; ent2-&gt;data == NULL</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_P(ent2-&gt;data</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ent1-&gt;varname</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!strcmp(ent1-&gt;varname, PHP_CLASS_NAME_VAR</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_hash_find(EG(class_table</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">incomplete_class</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_P(ent2-&gt;data</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!strcmp(name, EL_VAR</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!strcmp(name, EL_FIELD</data>
</node>
<edge source="php_wddx_pop_element" target="new_str">
  <data key="d5">declares</data>
</edge>
<edge source="php_wddx_pop_element" target="user_data">
  <data key="d5">declares</data>
</edge>
<edge source="php_wddx_pop_element" target="new_len">
  <data key="d5">declares</data>
</edge>
<edge source="php_wddx_pop_element" target="STR_FREE">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="MAKE_STD_ZVAL">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zend_hash_next_index_insert">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="object_init_ex">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="Z_DELREF_P">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="Z_STRVAL_P">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="call_user_function_ex">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zend_str_tolower">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zval_ptr_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="php_store_class_name">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="php_base64_decode">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="TSRMLS_FETCH">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="wddx_stack_top">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="Z_STRLEN_P">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="HASH_OF">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="add_property_zval">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="efree">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zend_symtable_update">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="__wakeup">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="EG">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="FREE_ZVAL">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zval_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="zend_hash_merge">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="ZVAL_STRING">
  <data key="d5">calls</data>
</edge>
<edge source="php_wddx_pop_element" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="php_wddx_pop_element" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="new_str" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_str" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="user_data" target="php_wddx_pop_element">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_len" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_len" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>