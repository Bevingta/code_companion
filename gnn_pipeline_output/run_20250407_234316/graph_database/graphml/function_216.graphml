<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-9382</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ps_parser_skip_PS_token">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="FT_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="skip_spaces">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_THROW">
  <data key="d4">FunctionCall</data>
</node>
<node id="skip_literal_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="skip_procedure">
  <data key="d4">FunctionCall</data>
</node>
<node id="skip_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="name">
  <data key="d4">FunctionCall</data>
</node>
<node id="expressions">
  <data key="d4">FunctionCall</data>
</node>
<node id="invalid">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur &gt;= limit </data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '[' || *cur == ']' </data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '{' </data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '(' </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '&lt;' </data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur + 1 &lt; limit &amp;&amp; *(cur + 1</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '&gt;' </data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur &gt;= limit || *cur != '&gt;' </data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '/' </data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> IS_PS_DELIM( *cur </data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur &lt; limit &amp;&amp; cur == parser-&gt;cursor </data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5"> cur &lt; limit </data>
</node>
<edge source="ps_parser_skip_PS_token" target="FT_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="skip_spaces">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="FT_THROW">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="skip_literal_string">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="skip_procedure">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="skip_string">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="name">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="expressions">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="invalid">
  <data key="d6">calls</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ps_parser_skip_PS_token" target="while_11">
  <data key="d6">contains</data>
</edge>
</graph></graphml>