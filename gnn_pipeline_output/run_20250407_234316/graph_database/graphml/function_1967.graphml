<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-2417</data>
<data key="d3">10.0</data>
<data key="d4">HIGH</data>
<node id="onTransact">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="sideband_handle">
  <data key="d5">Variable</data>
</node>
<node id="pid">
  <data key="d5">Variable</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="err">
  <data key="d5">Variable</data>
</node>
<node id="buffer_data">
  <data key="d5">Variable</data>
</node>
<node id="parameter_name">
  <data key="d5">Variable</data>
</node>
<node id="name">
  <data key="d5">Variable</data>
</node>
<node id="code">
  <data key="d5">Variable</data>
</node>
<node id="flags">
  <data key="d5">Variable</data>
</node>
<node id="params">
  <data key="d5">Variable</data>
</node>
<node id="readCString">
  <data key="d5">FunctionCall</data>
</node>
<node id="setInternalOption">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="end">
  <data key="d5">FunctionCall</data>
</node>
<node id="storeMetaDataInBuffers">
  <data key="d5">FunctionCall</data>
</node>
<node id="write">
  <data key="d5">FunctionCall</data>
</node>
<node id="configureVideoTunnelMode">
  <data key="d5">FunctionCall</data>
</node>
<node id="readInt32">
  <data key="d5">FunctionCall</data>
</node>
<node id="readInt64">
  <data key="d5">FunctionCall</data>
</node>
<node id="useGraphicBuffer">
  <data key="d5">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="GraphicBuffer">
  <data key="d5">FunctionCall</data>
</node>
<node id="setParameter">
  <data key="d5">FunctionCall</data>
</node>
<node id="CHECK_OMX_INTERFACE">
  <data key="d5">FunctionCall</data>
</node>
<node id="TRESPASS">
  <data key="d5">FunctionCall</data>
</node>
<node id="updateGraphicBufferInMeta">
  <data key="d5">FunctionCall</data>
</node>
<node id="writeInt64">
  <data key="d5">FunctionCall</data>
</node>
<node id="getConfig">
  <data key="d5">FunctionCall</data>
</node>
<node id="enableGraphicBuffers">
  <data key="d5">FunctionCall</data>
</node>
<node id="read">
  <data key="d5">FunctionCall</data>
</node>
<node id="readStrongBinder">
  <data key="d5">FunctionCall</data>
</node>
<node id="getState">
  <data key="d5">FunctionCall</data>
</node>
<node id="getExtensionIndex">
  <data key="d5">FunctionCall</data>
</node>
<node id="writeInt32">
  <data key="d5">FunctionCall</data>
</node>
<node id="writeNativeHandle">
  <data key="d5">FunctionCall</data>
</node>
<node id="allocateBufferWithBackup">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d5">FunctionCall</data>
</node>
<node id="signalEndOfInputStream">
  <data key="d5">FunctionCall</data>
</node>
<node id="allocateBuffer">
  <data key="d5">FunctionCall</data>
</node>
<node id="writeString8">
  <data key="d5">FunctionCall</data>
</node>
<node id="listNodes">
  <data key="d5">FunctionCall</data>
</node>
<node id="getParameter">
  <data key="d5">FunctionCall</data>
</node>
<node id="prepareForAdaptivePlayback">
  <data key="d5">FunctionCall</data>
</node>
<node id="allocateNode">
  <data key="d5">FunctionCall</data>
</node>
<node id="writeStrongBinder">
  <data key="d5">FunctionCall</data>
</node>
<node id="getGraphicBufferUsage">
  <data key="d5">FunctionCall</data>
</node>
<node id="createInputSurface">
  <data key="d5">FunctionCall</data>
</node>
<node id="useBuffer">
  <data key="d5">FunctionCall</data>
</node>
<node id="setConfig">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(code == GET_PARAMETER || code == GET_CONFIG</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!isSecure(node</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">err == OK</data>
</node>
<node id="for_10">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">List&lt;ComponentInfo&gt;::iterator it = list.begin(</data>
</node>
<node id="for_11">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">List&lt;String8&gt;::iterator role_it = cur.mRoles.begin(</data>
</node>
<node id="switch_12">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">code</data>
</node>
<node id="switch_13">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">code</data>
</node>
<edge source="onTransact" target="sideband_handle">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="pid">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="err">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="buffer_data">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="parameter_name">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="name">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="code">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="flags">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="params">
  <data key="d7">declares</data>
</edge>
<edge source="onTransact" target="readCString">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="setInternalOption">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="end">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="storeMetaDataInBuffers">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="write">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="configureVideoTunnelMode">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="readInt32">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="readInt64">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="useGraphicBuffer">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="GraphicBuffer">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="setParameter">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="CHECK_OMX_INTERFACE">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="TRESPASS">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="updateGraphicBufferInMeta">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="writeInt64">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="getConfig">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="enableGraphicBuffers">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="read">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="readStrongBinder">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="getState">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="getExtensionIndex">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="writeInt32">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="writeNativeHandle">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="allocateBufferWithBackup">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="ALOGE">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="signalEndOfInputStream">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="allocateBuffer">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="writeString8">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="listNodes">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="getParameter">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="prepareForAdaptivePlayback">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="allocateNode">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="writeStrongBinder">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="getGraphicBufferUsage">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="createInputSurface">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="useBuffer">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="setConfig">
  <data key="d7">calls</data>
</edge>
<edge source="onTransact" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="for_10">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="for_11">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="switch_12">
  <data key="d7">contains</data>
</edge>
<edge source="onTransact" target="switch_13">
  <data key="d7">contains</data>
</edge>
<edge source="sideband_handle" target="configureVideoTunnelMode">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sideband_handle" target="writeNativeHandle">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sideband_handle" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sideband_handle" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pid" target="writeInt32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pid" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="setInternalOption">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="write">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="malloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="setParameter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="getConfig">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="writeInt32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="allocateBuffer">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="getParameter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="setConfig">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="for_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="switch_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="err" target="writeInt32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="err" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="err" target="switch_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_data" target="allocateBuffer">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buffer_data" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer_data" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="parameter_name" target="getExtensionIndex">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="parameter_name" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="getExtensionIndex">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="name" target="allocateNode">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="name" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="code" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="code" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="code" target="switch_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="code" target="onTransact">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="writeInt32">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="onTransact">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="params" target="setInternalOption">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="free">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="write">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="setParameter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="getConfig">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="allocateBufferWithBackup">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="getParameter">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="useBuffer">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="setConfig">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="params" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="params" target="switch_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="params" target="switch_13">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>