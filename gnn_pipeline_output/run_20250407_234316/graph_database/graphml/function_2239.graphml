<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2019-6974</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="kvm_ioctl_create_device">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ops">
  <data key="d3">Variable</data>
</node>
<node id="kvm">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="dev">
  <data key="d3">Variable</data>
</node>
<node id="cd">
  <data key="d3">Variable</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="destroy">
  <data key="d3">FunctionCall</data>
</node>
<node id="kvm_get_kvm">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_add">
  <data key="d3">FunctionCall</data>
</node>
<node id="create">
  <data key="d3">FunctionCall</data>
</node>
<node id="anon_inode_getfd">
  <data key="d3">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_del">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">cd-&gt;type &gt;= ARRAY_SIZE(kvm_device_ops_table</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ops == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">test</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dev</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret &lt; 0</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ops-&gt;init</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret &lt; 0</data>
</node>
<edge source="kvm_ioctl_create_device" target="ops">
  <data key="d5">declares</data>
</edge>
<edge source="kvm_ioctl_create_device" target="kvm">
  <data key="d5">declares</data>
</edge>
<edge source="kvm_ioctl_create_device" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="kvm_ioctl_create_device" target="dev">
  <data key="d5">declares</data>
</edge>
<edge source="kvm_ioctl_create_device" target="cd">
  <data key="d5">declares</data>
</edge>
<edge source="kvm_ioctl_create_device" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="destroy">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="kvm_get_kvm">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="list_add">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="create">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="anon_inode_getfd">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="kzalloc">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="list_del">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="kfree">
  <data key="d5">calls</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="kvm_ioctl_create_device" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="ops" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ops" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ops" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ops" target="anon_inode_getfd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ops" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="mutex_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="mutex_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="kvm_ioctl_create_device">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="kvm_get_kvm">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="list_add">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="anon_inode_getfd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="kvm" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="kvm" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="kvm_ioctl_create_device">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="destroy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="list_add">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="create">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="anon_inode_getfd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="kzalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="list_del">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cd" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cd" target="kvm_ioctl_create_device">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cd" target="create">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>