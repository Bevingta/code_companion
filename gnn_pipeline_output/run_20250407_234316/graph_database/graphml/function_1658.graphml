<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-10887</data>
<data key="d2">5.8</data>
<data key="d3">MEDIUM</data>
<node id="git_delta_apply">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="cmd">
  <data key="d4">Variable</data>
</node>
<node id="off">
  <data key="d4">Variable</data>
</node>
<node id="out_len">
  <data key="d4">Variable</data>
</node>
<node id="delta_end">
  <data key="d4">Variable</data>
</node>
<node id="base_len">
  <data key="d4">Variable</data>
</node>
<node id="delta_len">
  <data key="d4">Variable</data>
</node>
<node id="res_dp">
  <data key="d4">Variable</data>
</node>
<node id="GITERR_CHECK_ALLOC_ADD">
  <data key="d4">FunctionCall</data>
</node>
<node id="git__free">
  <data key="d4">FunctionCall</data>
</node>
<node id="giterr_set">
  <data key="d4">FunctionCall</data>
</node>
<node id="GITERR_CHECK_ALLOC">
  <data key="d4">FunctionCall</data>
</node>
<node id="git__malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(hdr_sz(&amp;base_sz, &amp;delta, delta_end</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hdr_sz(&amp;res_sz, &amp;delta, delta_end</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x80</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x01</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x02</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x04</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x08</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x10</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x20</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd &amp; 0x40</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!len</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base_len &lt; off + len || res_sz &lt; len</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cmd</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">delta_end - delta &lt; cmd || res_sz &lt; cmd</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">delta != delta_end || res_sz</data>
</node>
<node id="while_15">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">delta &lt; delta_end</data>
</node>
<edge source="git_delta_apply" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="cmd">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="off">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="out_len">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="delta_end">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="base_len">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="delta_len">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="res_dp">
  <data key="d6">declares</data>
</edge>
<edge source="git_delta_apply" target="GITERR_CHECK_ALLOC_ADD">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="git__free">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="giterr_set">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="GITERR_CHECK_ALLOC">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="git__malloc">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="git_delta_apply" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="git_delta_apply" target="while_15">
  <data key="d6">contains</data>
</edge>
<edge source="char" target="git_delta_apply">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="char" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cmd" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cmd" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="off" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="off" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="off" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="off" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out_len" target="git_delta_apply">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="delta_end" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="delta_end" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="delta_end" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="delta_end" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="delta_end" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_end" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base_len" target="git_delta_apply">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base_len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="delta_len" target="git_delta_apply">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res_dp" target="GITERR_CHECK_ALLOC">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res_dp" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res_dp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res_dp" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>