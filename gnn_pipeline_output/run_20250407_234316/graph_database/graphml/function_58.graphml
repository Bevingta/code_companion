<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-10971</data>
<data key="d1">6.5</data>
<data key="d2">MEDIUM</data>
<node id="ProcSendEvent">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="GetMaster">
  <data key="d3">FunctionCall</data>
</node>
<node id="REQUEST_SIZE_MATCH">
  <data key="d3">FunctionCall</data>
</node>
<node id="wDontPropagateMask">
  <data key="d3">FunctionCall</data>
</node>
<node id="REQUEST">
  <data key="d3">FunctionCall</data>
</node>
<node id="PickPointer">
  <data key="d3">FunctionCall</data>
</node>
<node id="dixLookupWindow">
  <data key="d3">FunctionCall</data>
</node>
<node id="bit">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!((stuff-&gt;event.u.u.type &gt; X_Reply &amp;&amp;
           stuff-&gt;event.u.u.type &lt; LASTEvent</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stuff-&gt;event.u.u.type == ClientMessage &amp;&amp;
         stuff-&gt;event.u.u.detail != 8 &amp;&amp;
         stuff-&gt;event.u.u.detail != 16 &amp;&amp; stuff-&gt;event.u.u.detail != 32</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stuff-&gt;destination == PointerWindow</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stuff-&gt;destination == InputFocus</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">inputFocus == NoneWin</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">inputFocus == PointerRootWin</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IsParent(inputFocus, pSprite-&gt;win</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!pWin</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(stuff-&gt;propagate != xFalse</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stuff-&gt;propagate</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">XaceHook(XACE_SEND_ACCESS, client, NULL, pWin,
                         &amp;stuff-&gt;event, 1</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">DeliverEventsToWindow(dev, pWin,
                                      &amp;stuff-&gt;event, 1, stuff-&gt;eventMask,
                                      NullGrab</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pWin == effectiveFocus</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!stuff-&gt;eventMask</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!XaceHook(XACE_SEND_ACCESS, client, NULL, pWin, &amp;stuff-&gt;event, 1</data>
</node>
<node id="for_15">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">; pWin; pWin = pWin-&gt;parent</data>
</node>
<edge source="ProcSendEvent" target="GetMaster">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="REQUEST_SIZE_MATCH">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="wDontPropagateMask">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="REQUEST">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="PickPointer">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="dixLookupWindow">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="bit">
  <data key="d5">calls</data>
</edge>
<edge source="ProcSendEvent" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="ProcSendEvent" target="for_15">
  <data key="d5">contains</data>
</edge>
</graph></graphml>