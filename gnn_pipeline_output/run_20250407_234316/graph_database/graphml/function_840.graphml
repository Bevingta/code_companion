<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-14497</data>
<data key="d2">7.2</data>
<data key="d3">HIGH</data>
<node id="tpacket_rcv">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="skb_len">
  <data key="d4">Variable</data>
</node>
<node id="ts">
  <data key="d4">Variable</data>
</node>
<node id="sll">
  <data key="d4">Variable</data>
</node>
<node id="maclen">
  <data key="d4">Variable</data>
</node>
<node id="orig_dev">
  <data key="d4">Variable</data>
</node>
<node id="status">
  <data key="d4">Variable</data>
</node>
<node id="skb">
  <data key="d4">Variable</data>
</node>
<node id="copy_skb">
  <data key="d4">Variable</data>
</node>
<node id="dev">
  <data key="d4">Variable</data>
</node>
<node id="pt">
  <data key="d4">Variable</data>
</node>
<node id="sk">
  <data key="d4">Variable</data>
</node>
<node id="po">
  <data key="d4">Variable</data>
</node>
<node id="spin_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_copy_bits">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="smp_mb">
  <data key="d4">FunctionCall</data>
</node>
<node id="packet_current_rx_frame">
  <data key="d4">FunctionCall</data>
</node>
<node id="packet_increment_rx_head">
  <data key="d4">FunctionCall</data>
</node>
<node id="TPACKET_ALIGN">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_network_offset">
  <data key="d4">FunctionCall</data>
</node>
<node id="PAGE_ALIGN">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="dev_parse_header">
  <data key="d4">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="getsockopt">
  <data key="d4">FunctionCall</data>
</node>
<node id="smp_wmb">
  <data key="d4">FunctionCall</data>
</node>
<node id="prb_clear_blk_fill_status">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_pull">
  <data key="d4">FunctionCall</data>
</node>
<node id="BUILD_BUG_ON">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_PBDQC_FROM_RB">
  <data key="d4">FunctionCall</data>
</node>
<node id="flush_dcache_page">
  <data key="d4">FunctionCall</data>
</node>
<node id="kfree_skb">
  <data key="d4">FunctionCall</data>
</node>
<node id="pkt_sk">
  <data key="d4">FunctionCall</data>
</node>
<node id="ntohs">
  <data key="d4">FunctionCall</data>
</node>
<node id="run_filter">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_data_ready">
  <data key="d4">FunctionCall</data>
</node>
<node id="__skb_queue_tail">
  <data key="d4">FunctionCall</data>
</node>
<node id="BUG">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_clone">
  <data key="d4">FunctionCall</data>
</node>
<node id="pr_err_once">
  <data key="d4">FunctionCall</data>
</node>
<node id="__packet_set_status">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_vlan_tag_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb-&gt;pkt_type == PACKET_LOOPBACK</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!net_eq(dev_net(dev</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dev-&gt;header_ops</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_type != SOCK_DGRAM</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb-&gt;pkt_type == PACKET_OUTGOING</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!res</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb-&gt;ip_summed == CHECKSUM_PARTIAL</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb-&gt;pkt_type != PACKET_OUTGOING &amp;&amp;
		 (skb-&gt;ip_summed == CHECKSUM_COMPLETE ||
		  skb_csum_unnecessary(skb</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">snaplen &gt; res</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_type == SOCK_DGRAM</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;has_vnet_hdr</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;tp_version &lt;= TPACKET_V2</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">macoff + snaplen &gt; po-&gt;rx_ring.frame_size</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;copy_thresh &amp;&amp;
			    atomic_read(&amp;sk-&gt;sk_rmem_alloc</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb_shared(skb</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_skb</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(int</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(macoff + snaplen &gt;
 			    GET_PBDQC_FROM_RB(&amp;po-&gt;rx_ring</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely((int</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!h.raw</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;tp_version &lt;= TPACKET_V2</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;stats.stats1.tp_drops</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_skb</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;has_vnet_hdr</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">virtio_net_hdr_from_skb(skb, h.raw + macoff -
 					    sizeof(struct virtio_net_hdr</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(ts_status = tpacket_get_timestamp(skb, &amp;ts, po-&gt;tp_tstamp</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb_vlan_tag_present(skb</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(po-&gt;origdev</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;tp_version &lt;= TPACKET_V2</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">po-&gt;tp_version &lt;= TPACKET_V2</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb_head != skb-&gt;data &amp;&amp; skb_shared(skb</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!is_drop_n_account</data>
</node>
<node id="for_32">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">start = h.raw; start &lt; end; start += PAGE_SIZE</data>
</node>
<node id="switch_33">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">po-&gt;tp_version</data>
</node>
<edge source="tpacket_rcv" target="skb_len">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="ts">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="sll">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="maclen">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="orig_dev">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="status">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="skb">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="copy_skb">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="dev">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="pt">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="sk">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="po">
  <data key="d6">declares</data>
</edge>
<edge source="tpacket_rcv" target="spin_lock">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_copy_bits">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="smp_mb">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="packet_current_rx_frame">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="packet_increment_rx_head">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="TPACKET_ALIGN">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_network_offset">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="PAGE_ALIGN">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_get">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="dev_parse_header">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="spin_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="getsockopt">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="smp_wmb">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="prb_clear_blk_fill_status">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_pull">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="BUILD_BUG_ON">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="GET_PBDQC_FROM_RB">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="flush_dcache_page">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="kfree_skb">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="pkt_sk">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="ntohs">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="run_filter">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="sk_data_ready">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="__skb_queue_tail">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="BUG">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_clone">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="pr_err_once">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="__packet_set_status">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="skb_vlan_tag_get">
  <data key="d6">calls</data>
</edge>
<edge source="tpacket_rcv" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="for_32">
  <data key="d6">contains</data>
</edge>
<edge source="tpacket_rcv" target="switch_33">
  <data key="d6">contains</data>
</edge>
<edge source="skb_len" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ts" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ts" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ts" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sll" target="dev_parse_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="maclen" target="TPACKET_ALIGN">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="orig_dev" target="tpacket_rcv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="status" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="__packet_set_status">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="status" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="for_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skb" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skb" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skb" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skb" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="skb" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="skb_copy_bits">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="packet_current_rx_frame">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="skb_network_offset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="skb_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="dev_parse_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="skb_pull">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="kfree_skb">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="tpacket_rcv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="ntohs">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="run_filter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="__skb_queue_tail">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="skb_clone">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="skb_vlan_tag_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="skb" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="skb" target="switch_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="copy_skb" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="kfree_skb">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="copy_skb" target="__skb_queue_tail">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="copy_skb" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="copy_skb" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dev" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dev" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dev" target="tpacket_rcv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pt" target="tpacket_rcv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="spin_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_copy_bits">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="packet_current_rx_frame">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_network_offset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="dev_parse_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="spin_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_pull">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="kfree_skb">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="pkt_sk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tpacket_rcv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="ntohs">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="run_filter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_data_ready">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="__skb_queue_tail">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_clone">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_vlan_tag_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="for_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="switch_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="po" target="packet_current_rx_frame">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="packet_increment_rx_head">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="TPACKET_ALIGN">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="prb_clear_blk_fill_status">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="GET_PBDQC_FROM_RB">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="__packet_set_status">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="po" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="po" target="for_32">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>