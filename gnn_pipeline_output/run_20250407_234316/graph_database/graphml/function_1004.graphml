<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-8890</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="inet_csk_clone_lock">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="newsk">
  <data key="d3">Variable</data>
</node>
<node id="priority">
  <data key="d3">Variable</data>
</node>
<node id="req">
  <data key="d3">Variable</data>
</node>
<node id="newicsk">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="sk_clone_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_csk">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="security_inet_csk_clone">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_reset_flag">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_rsk">
  <data key="d3">FunctionCall</data>
</node>
<node id="atomic64_set">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newsk</data>
</node>
<edge source="inet_csk_clone_lock" target="newsk">
  <data key="d5">declares</data>
</edge>
<edge source="inet_csk_clone_lock" target="priority">
  <data key="d5">declares</data>
</edge>
<edge source="inet_csk_clone_lock" target="req">
  <data key="d5">declares</data>
</edge>
<edge source="inet_csk_clone_lock" target="newicsk">
  <data key="d5">declares</data>
</edge>
<edge source="inet_csk_clone_lock" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="inet_csk_clone_lock" target="sk_clone_lock">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="inet_csk">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="inet_sk">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="security_inet_csk_clone">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="sock_reset_flag">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="inet_rsk">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="atomic64_set">
  <data key="d5">calls</data>
</edge>
<edge source="inet_csk_clone_lock" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="newsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="inet_csk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="security_inet_csk_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sock_reset_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="atomic64_set">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priority" target="sk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priority" target="inet_csk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="sk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="security_inet_csk_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="inet_csk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="inet_rsk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="atomic64_set">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newicsk" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newicsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="sk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="security_inet_csk_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk_clone_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_reset_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="atomic64_set">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>