<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7514</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="WriteImageChannels">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="compact_pixels">
  <data key="d3">Variable</data>
</node>
<node id="WriteBlobMSBShort">
  <data key="d3">FunctionCall</data>
</node>
<node id="WriteOneChannel">
  <data key="d3">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d3">FunctionCall</data>
</node>
<node id="WritePackbitsLength">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;compression == RLECompression</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">compact_pixels == (unsigned char *</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IsImageGray(next_image</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;compression == RLECompression</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;compression == RLECompression</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;compression == RLECompression</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next_image-&gt;compression == RLECompression</data>
</node>
<edge source="WriteImageChannels" target="compact_pixels">
  <data key="d5">declares</data>
</edge>
<edge source="WriteImageChannels" target="WriteBlobMSBShort">
  <data key="d5">calls</data>
</edge>
<edge source="WriteImageChannels" target="WriteOneChannel">
  <data key="d5">calls</data>
</edge>
<edge source="WriteImageChannels" target="AcquireQuantumMemory">
  <data key="d5">calls</data>
</edge>
<edge source="WriteImageChannels" target="SetImageProgress">
  <data key="d5">calls</data>
</edge>
<edge source="WriteImageChannels" target="WritePackbitsLength">
  <data key="d5">calls</data>
</edge>
<edge source="WriteImageChannels" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="WriteImageChannels" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="compact_pixels" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="WriteOneChannel">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="compact_pixels" target="AcquireQuantumMemory">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="compact_pixels" target="WritePackbitsLength">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="compact_pixels" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>