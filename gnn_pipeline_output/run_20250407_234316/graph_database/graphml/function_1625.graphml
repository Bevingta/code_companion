<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-9995</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="decode_unit">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="nc">
  <data key="d5">Variable</data>
</node>
<node id="step">
  <data key="d5">Variable</data>
</node>
<node id="rval">
  <data key="d5">Variable</data>
</node>
<node id="i16_17">
  <data key="d5">Variable</data>
</node>
<node id="sum">
  <data key="d5">Variable</data>
</node>
<node id="totfr">
  <data key="d5">Variable</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ret = s-&gt;get_freq(rc, totfr, &amp;value</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value &gt;= cumfr + cnt_x</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value &gt;= cumfr + cnt_c</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ret = s-&gt;decode(gb, rc, cumfr, cnt_c, totfr</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">totfr &gt; BOT</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; 256; i++</data>
</node>
<node id="for_6">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; 16; i++</data>
</node>
<node id="for_7">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j = 0; j &lt; 16; j++</data>
</node>
<node id="while_8">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">x &lt; 16</data>
</node>
<node id="while_9">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">c &lt; 256</data>
</node>
<edge source="decode_unit" target="nc">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="step">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="rval">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="i16_17">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="sum">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="totfr">
  <data key="d7">declares</data>
</edge>
<edge source="decode_unit" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="for_6">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="for_7">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="while_8">
  <data key="d7">contains</data>
</edge>
<edge source="decode_unit" target="while_9">
  <data key="d7">contains</data>
</edge>
<edge source="nc" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nc" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nc" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nc" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="step" target="decode_unit">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rval" target="decode_unit">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="i16_17" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i16_17" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i16_17" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i16_17" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sum" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sum" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sum" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sum" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="totfr" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="totfr" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="totfr" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="totfr" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="totfr" target="for_5">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>