<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-15115</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="sctp_do_peeloff">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="asoc">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="sp">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="id">
  <data key="d3">Variable</data>
</node>
<node id="to_sk_daddr">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_copy_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_id2assoc">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_create">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_sock_migrate">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!asoc</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">waitqueue_active(&amp;asoc-&gt;wait</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!sctp_style(sk, UDP</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err &lt; 0</data>
</node>
<edge source="sctp_do_peeloff" target="asoc">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="sp">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="id">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_do_peeloff" target="to_sk_daddr">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="sctp_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="sctp_copy_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="sctp_id2assoc">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="sock_create">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="sctp_sock_migrate">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_do_peeloff" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_do_peeloff" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_do_peeloff" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_do_peeloff" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="asoc" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="asoc" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="asoc" target="to_sk_daddr">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="asoc" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="asoc" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sock" target="sctp_do_peeloff">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="sock_create">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="sctp_do_peeloff">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="to_sk_daddr">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_id2assoc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_create">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_sock_migrate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="id" target="sctp_do_peeloff">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="id" target="sctp_id2assoc">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>