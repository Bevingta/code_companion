<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-2926</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="formatSelection">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="deepEquivalent">
  <data key="d3">FunctionCall</data>
</node>
<node id="setEndingSelection">
  <data key="d3">FunctionCall</data>
</node>
<node id="appendNode">
  <data key="d3">FunctionCall</data>
</node>
<node id="endOfParagraph">
  <data key="d3">FunctionCall</data>
</node>
<node id="endOfNextParagrahSplittingTextNodesIfNeeded">
  <data key="d3">FunctionCall</data>
</node>
<node id="enclosingNodeOfType">
  <data key="d3">FunctionCall</data>
</node>
<node id="ASSERT_NOT_REACHED">
  <data key="d3">FunctionCall</data>
</node>
<node id="next">
  <data key="d3">FunctionCall</data>
</node>
<node id="createBreakElement">
  <data key="d3">FunctionCall</data>
</node>
<node id="insertNodeAt">
  <data key="d3">FunctionCall</data>
</node>
<node id="formatRange">
  <data key="d3">FunctionCall</data>
</node>
<node id="createBlockElement">
  <data key="d3">FunctionCall</data>
</node>
<node id="rangeForParagraphSplittingTextNodesIfNeeded">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">isAtUnsplittableElement(start</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">endOfCurrentParagraph.deepEquivalent(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">enclosingCell &amp;&amp; enclosingCell != enclosingNodeOfType(endOfNextParagraph.deepEquivalent(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">endAfterSelection.isNotNull(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">endOfNextParagraph.isNotNull(</data>
</node>
<node id="while_5">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">endOfCurrentParagraph != endAfterSelection &amp;&amp; !atEnd</data>
</node>
<edge source="formatSelection" target="deepEquivalent">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="setEndingSelection">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="appendNode">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="endOfParagraph">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="endOfNextParagrahSplittingTextNodesIfNeeded">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="enclosingNodeOfType">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="ASSERT_NOT_REACHED">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="next">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="createBreakElement">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="insertNodeAt">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="formatRange">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="createBlockElement">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="rangeForParagraphSplittingTextNodesIfNeeded">
  <data key="d5">calls</data>
</edge>
<edge source="formatSelection" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="formatSelection" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="formatSelection" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="formatSelection" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="formatSelection" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="formatSelection" target="while_5">
  <data key="d5">contains</data>
</edge>
</graph></graphml>