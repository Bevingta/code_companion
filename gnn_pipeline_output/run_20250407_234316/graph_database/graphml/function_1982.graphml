<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-0815</data>
<data key="d2">10.0</data>
<data key="d3">HIGH</data>
<node id="fragmentedRead">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="cts">
  <data key="d4">Variable</data>
</node>
<node id="seekTimeUs">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">FunctionCall</data>
</node>
<node id="nextMoof">
  <data key="d4">Variable</data>
</node>
<node id="offset">
  <data key="d4">Variable</data>
</node>
<node id="src">
  <data key="d4">Variable</data>
</node>
<node id="num_bytes_read">
  <data key="d4">Variable</data>
</node>
<node id="nal_size">
  <data key="d4">Variable</data>
</node>
<node id="nalLength">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="totalTime">
  <data key="d4">Variable</data>
</node>
<node id="targetSampleTimeUs">
  <data key="d4">Variable</data>
</node>
<node id="data">
  <data key="d4">FunctionCall</data>
</node>
<node id="dstOffset">
  <data key="d4">Variable</data>
</node>
<node id="numSidxEntries">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="drm">
  <data key="d4">Variable</data>
</node>
<node id="max_size">
  <data key="d4">Variable</data>
</node>
<node id="totalOffset">
  <data key="d4">Variable</data>
</node>
<node id="srcOffset">
  <data key="d4">Variable</data>
</node>
<node id="dstData">
  <data key="d4">Variable</data>
</node>
<node id="setData">
  <data key="d4">FunctionCall</data>
</node>
<node id="set_range">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="setInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="clear">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="parseChunk">
  <data key="d4">FunctionCall</data>
</node>
<node id="findInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="meta_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="clone">
  <data key="d4">FunctionCall</data>
</node>
<node id="parseNALSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="acquire_buffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGV">
  <data key="d4">FunctionCall</data>
</node>
<node id="readAt">
  <data key="d4">FunctionCall</data>
</node>
<node id="release">
  <data key="d4">FunctionCall</data>
</node>
<node id="isInRange">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">options &amp;&amp; options-&gt;getSeekTo(&amp;seekTimeUs, &amp;mode</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">numSidxEntries != 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">totalTime + se-&gt;mDurationUs &gt; seekTimeUs</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(mode == ReadOptions::SEEK_NEXT_SYNC</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer != NULL</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer == NULL</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mCurrentSampleIndex &gt;= mCurrentSamples.size(</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mCurrentSampleIndex &gt;= mCurrentSamples.size(</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err != OK</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size &gt; mBuffer-&gt;size(</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">smpl-&gt;encryptedsizes.size(</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!mIsAVC || mWantsNALFragments</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">newBuffer</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!isInRange((size_t</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">num_bytes_read &lt; (ssize_t</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">targetSampleTimeUs &gt;= 0</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isSyncSample</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!mIsAVC</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mNALLengthSize &gt; SIZE_MAX - nal_size</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer-&gt;range_length(</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer-&gt;range_length(</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">usesDRM</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer == NULL || !isInRange((size_t</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mFormat == NULL
 || !mFormat-&gt;findInt32(kKeyMaxInputSize, &amp;max_size</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isMalFormed || data == NULL</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mBuffer != NULL</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">num_bytes_read &lt; (ssize_t</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">usesDRM</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!isMalFormed</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isMalFormed</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">nalLength == 0</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">targetSampleTimeUs &gt;= 0</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">isSyncSample</data>
</node>
<node id="for_33">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">int i = 0; i &lt; numSidxEntries; i++</data>
</node>
<node id="while_34">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">srcOffset &lt; size</data>
</node>
<edge source="fragmentedRead" target="cts">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="seekTimeUs">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="size">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="nextMoof">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="offset">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="src">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="num_bytes_read">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="nal_size">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="nalLength">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="totalTime">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="targetSampleTimeUs">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="data">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="dstOffset">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="numSidxEntries">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="drm">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="max_size">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="totalOffset">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="srcOffset">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="dstData">
  <data key="d6">declares</data>
</edge>
<edge source="fragmentedRead" target="setData">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="set_range">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="CHECK">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="CHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="setInt32">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="clear">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="parseChunk">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="findInt32">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="meta_data">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="clone">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="parseNALSize">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="acquire_buffer">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="ALOGV">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="readAt">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="release">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="isInRange">
  <data key="d6">calls</data>
</edge>
<edge source="fragmentedRead" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="for_33">
  <data key="d6">contains</data>
</edge>
<edge source="fragmentedRead" target="while_34">
  <data key="d6">contains</data>
</edge>
<edge source="cts" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cts" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cts" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="seekTimeUs" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="seekTimeUs" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="seekTimeUs" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="seekTimeUs" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="while_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="setData">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="set_range">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="CHECK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="CHECK_EQ">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="findInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="ALOGE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="readAt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="isInRange">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nextMoof" target="parseChunk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nextMoof" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nextMoof" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="set_range">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="readAt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="src" target="while_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="src" target="CHECK_EQ">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="src" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="src" target="parseNALSize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="src" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_bytes_read" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="num_bytes_read" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="num_bytes_read" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_bytes_read" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nal_size" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nal_size" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nalLength" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nalLength" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nalLength" target="ALOGE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nalLength" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nalLength" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nalLength" target="while_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="totalTime" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalTime" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalTime" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalTime" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalTime" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="targetSampleTimeUs" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="targetSampleTimeUs" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="targetSampleTimeUs" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="targetSampleTimeUs" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="data" target="readAt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="data" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dstOffset" target="set_range">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dstOffset" target="CHECK">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dstOffset" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dstOffset" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dstOffset" target="while_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="numSidxEntries" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="numSidxEntries" target="for_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="numSidxEntries" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="ALOGE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="ALOGV">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drm" target="findInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="max_size" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="max_size" target="findInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="totalOffset" target="parseChunk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="totalOffset" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalOffset" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalOffset" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalOffset" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="totalOffset" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcOffset" target="while_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srcOffset" target="CHECK_EQ">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcOffset" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcOffset" target="parseNALSize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srcOffset" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dstData" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dstData" target="while_34">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>