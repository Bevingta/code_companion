<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-1583</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="ecryptfs_privileged_open">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="lower_mnt">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="cred">
  <data key="d3">Variable</data>
</node>
<node id="req">
  <data key="d3">Variable</data>
</node>
<node id="lower_dentry">
  <data key="d3">Variable</data>
</node>
<node id="rc">
  <data key="d3">Variable</data>
</node>
<node id="wake_up">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="dput">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_add_tail">
  <data key="d3">FunctionCall</data>
</node>
<node id="dentry_open">
  <data key="d3">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d3">FunctionCall</data>
</node>
<node id="wait_for_completion">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="init_completion">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!IS_ERR(*lower_file</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(flags &amp; O_ACCMODE</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ecryptfs_kthread_ctl.flags &amp; ECRYPTFS_KTHREAD_ZOMBIE</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IS_ERR(*lower_file</data>
</node>
<edge source="ecryptfs_privileged_open" target="lower_mnt">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="cred">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="req">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="lower_dentry">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="rc">
  <data key="d5">declares</data>
</edge>
<edge source="ecryptfs_privileged_open" target="wake_up">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="dput">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="list_add_tail">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="dentry_open">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="PTR_ERR">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="wait_for_completion">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="init_completion">
  <data key="d5">calls</data>
</edge>
<edge source="ecryptfs_privileged_open" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ecryptfs_privileged_open" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ecryptfs_privileged_open" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ecryptfs_privileged_open" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="lower_mnt" target="ecryptfs_privileged_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="dentry_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cred" target="ecryptfs_privileged_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cred" target="dentry_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="list_add_tail">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="dentry_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="wait_for_completion">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="init_completion">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lower_dentry" target="ecryptfs_privileged_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rc" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>