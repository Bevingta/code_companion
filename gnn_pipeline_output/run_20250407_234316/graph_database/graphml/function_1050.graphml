<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-6214</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="tcp_splice_read">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="ppos">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="int">
  <data key="d4">Variable</data>
</node>
<node id="tss">
  <data key="d4">Variable</data>
</node>
<node id="pipe">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="timeo">
  <data key="d4">Variable</data>
</node>
<node id="sock">
  <data key="d4">Variable</data>
</node>
<node id="spliced">
  <data key="d4">Variable</data>
</node>
<node id="sk">
  <data key="d4">Variable</data>
</node>
<node id="sock_intr_errno">
  <data key="d4">FunctionCall</data>
</node>
<node id="lock_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_rps_record_flow">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_wait_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_rcvtimeo">
  <data key="d4">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d4">FunctionCall</data>
</node>
<node id="__tcp_splice_read">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_error">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(*ppos</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ret</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">spliced</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sock_flag(sk, SOCK_DONE</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_err</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_state == TCP_CLOSE</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!sock_flag(sk, SOCK_DONE</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!timeo</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">signal_pending(current</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!timeo</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk-&gt;sk_err || sk-&gt;sk_state == TCP_CLOSE ||
		    (sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">spliced</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">tss.len</data>
</node>
<edge source="tcp_splice_read" target="ppos">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="int">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="tss">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="pipe">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="timeo">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="sock">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="spliced">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="sk">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_splice_read" target="sock_intr_errno">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="lock_sock">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="sock_rps_record_flow">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="sk_wait_data">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="sock_rcvtimeo">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="release_sock">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="__tcp_splice_read">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="sock_error">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_splice_read" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_splice_read" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="ppos" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ppos" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tss" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tss" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tss" target="__tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tss" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pipe" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeo" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeo" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeo" target="sock_intr_errno">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="timeo" target="sk_wait_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="timeo" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeo" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeo" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeo" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeo" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sock" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sock" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sock" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sock" target="sock_rcvtimeo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="spliced" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="spliced" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="spliced" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="spliced" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="spliced" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="spliced" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_rps_record_flow">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_wait_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_rcvtimeo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="__tcp_splice_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_error">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>