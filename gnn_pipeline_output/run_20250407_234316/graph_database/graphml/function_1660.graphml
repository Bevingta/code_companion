<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-9988</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="ssl_parse_server_key_exchange">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="md_alg">
  <data key="d4">Variable</data>
</node>
<node id="hash">
  <data key="d4">Variable</data>
</node>
<node id="pk_alg">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="params_len">
  <data key="d4">Variable</data>
</node>
<node id="ciphersuite_info">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="params">
  <data key="d4">Variable</data>
</node>
<node id="mbedtls_ssl_send_alert_message">
  <data key="d4">FunctionCall</data>
</node>
<node id="mbedtls_ssl_hs_hdr_len">
  <data key="d4">FunctionCall</data>
</node>
<node id="mbedtls_ssl_get_key_exchange_md_ssl_tls">
  <data key="d4">FunctionCall</data>
</node>
<node id="MBEDTLS_SSL_DEBUG_RET">
  <data key="d4">FunctionCall</data>
</node>
<node id="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d4">FunctionCall</data>
</node>
<node id="defined">
  <data key="d4">FunctionCall</data>
</node>
<node id="MBEDTLS_SSL_DEBUG_MSG">
  <data key="d4">FunctionCall</data>
</node>
<node id="MBEDTLS_SSL_DEBUG_BUF">
  <data key="d4">FunctionCall</data>
</node>
<node id="mbedtls_ecjpake_read_round_two">
  <data key="d4">FunctionCall</data>
</node>
<node id="mbedtls_ssl_get_ciphersuite_sig_pk_alg">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_RSA </data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_RSA ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA </data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ( ret = ssl_get_ecdh_params_from_cert( ssl </data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ( ret = mbedtls_ssl_read_record( ssl </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl-&gt;in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE </data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl-&gt;in_msg[0] != MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE </data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
            ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK </data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK </data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl_parse_server_psk_hint( ssl, &amp;p, end </data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK </data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_RSA ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK </data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl_parse_server_dh_params( ssl, &amp;p, end </data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_RSA ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK ||
        ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA </data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl_parse_server_ecdh_params( ssl, &amp;p, end </data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ciphersuite_info-&gt;key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE </data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ret != 0 </data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> mbedtls_ssl_ciphersuite_uses_server_signature( ciphersuite_info </data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl-&gt;minor_ver == MBEDTLS_SSL_MINOR_VERSION_3 </data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl_parse_signature_algorithm( ssl, &amp;p, end,
                                               &amp;md_alg, &amp;pk_alg </data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> pk_alg != mbedtls_ssl_get_ciphersuite_sig_pk_alg( ciphersuite_info </data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl-&gt;minor_ver &lt; MBEDTLS_SSL_MINOR_VERSION_3 </data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> pk_alg == MBEDTLS_PK_ECDSA &amp;&amp; md_alg == MBEDTLS_MD_NONE </data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> p &gt; end - 2 </data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> end != p + sig_len </data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> md_alg == MBEDTLS_MD_NONE </data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ret != 0 </data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> md_alg != MBEDTLS_MD_NONE </data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ret != 0 </data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ssl-&gt;session_negotiate-&gt;peer_cert == NULL </data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! mbedtls_pk_can_do( &amp;ssl-&gt;session_negotiate-&gt;peer_cert-&gt;pk, pk_alg </data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ( ret = mbedtls_pk_verify( &amp;ssl-&gt;session_negotiate-&gt;peer_cert-&gt;pk,
                               md_alg, hash, hashlen, p, sig_len </data>
</node>
<edge source="ssl_parse_server_key_exchange" target="md_alg">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="hash">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="pk_alg">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="params_len">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="ciphersuite_info">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="params">
  <data key="d6">declares</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ssl_send_alert_message">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ssl_hs_hdr_len">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ssl_get_key_exchange_md_ssl_tls">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="MBEDTLS_SSL_DEBUG_RET">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="defined">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="MBEDTLS_SSL_DEBUG_MSG">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="MBEDTLS_SSL_DEBUG_BUF">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ecjpake_read_round_two">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="mbedtls_ssl_get_ciphersuite_sig_pk_alg">
  <data key="d6">calls</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ssl_parse_server_key_exchange" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="md_alg" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="md_alg" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="md_alg" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="md_alg" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="md_alg" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="md_alg" target="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="md_alg" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="md_alg" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="md_alg" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="md_alg" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hash" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="hash" target="mbedtls_ssl_get_key_exchange_md_ssl_tls">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hash" target="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hash" target="MBEDTLS_SSL_DEBUG_BUF">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hash" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hash" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hash" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hash" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hash" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pk_alg" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pk_alg" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pk_alg" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pk_alg" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pk_alg" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pk_alg" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pk_alg" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="MBEDTLS_SSL_DEBUG_RET">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params_len" target="mbedtls_ssl_get_key_exchange_md_ssl_tls">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params_len" target="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params_len" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params_len" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params_len" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params_len" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ciphersuite_info" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ciphersuite_info" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ciphersuite_info" target="mbedtls_ssl_get_ciphersuite_sig_pk_alg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ciphersuite_info" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ciphersuite_info" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ciphersuite_info" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="params" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="params" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="params" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="params" target="mbedtls_ssl_get_key_exchange_md_ssl_tls">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="MBEDTLS_SSL_DEBUG_RET">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="mbedtls_ssl_get_key_exchange_md_tls1_2">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>