<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-2860</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="replaceChild">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ENABLE">
  <data key="d3">FunctionCall</data>
</node>
<node id="willInsertDOMNode">
  <data key="d3">FunctionCall</data>
</node>
<node id="dispatchSubtreeModifiedEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="allowEventDispatch">
  <data key="d3">FunctionCall</data>
</node>
<node id="forbidEventDispatch">
  <data key="d3">FunctionCall</data>
</node>
<node id="end">
  <data key="d3">FunctionCall</data>
</node>
<node id="get">
  <data key="d3">FunctionCall</data>
</node>
<node id="collectChildrenAndRemoveFromOldParent">
  <data key="d3">FunctionCall</data>
</node>
<node id="removeChild">
  <data key="d3">FunctionCall</data>
</node>
<node id="appendChildToContainer">
  <data key="d3">FunctionCall</data>
</node>
<node id="treeScope">
  <data key="d3">FunctionCall</data>
</node>
<node id="ASSERT">
  <data key="d3">FunctionCall</data>
</node>
<node id="updateTreeAfterInsertion">
  <data key="d3">FunctionCall</data>
</node>
<node id="protect">
  <data key="d3">FunctionCall</data>
</node>
<node id="nextSibling">
  <data key="d3">FunctionCall</data>
</node>
<node id="checkReplaceChild">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">oldChild == newChild</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ec</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!oldChild || oldChild-&gt;parentNode(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ec</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next &amp;&amp; (next-&gt;previousSibling(</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ec</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ec</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next &amp;&amp; next-&gt;parentNode(</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">child-&gt;parentNode(</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">next</data>
</node>
<node id="for_10">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">NodeVector::const_iterator it = targets.begin(</data>
</node>
<edge source="replaceChild" target="ENABLE">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="willInsertDOMNode">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="dispatchSubtreeModifiedEvent">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="allowEventDispatch">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="forbidEventDispatch">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="end">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="get">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="collectChildrenAndRemoveFromOldParent">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="removeChild">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="appendChildToContainer">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="treeScope">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="ASSERT">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="updateTreeAfterInsertion">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="protect">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="nextSibling">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="checkReplaceChild">
  <data key="d5">calls</data>
</edge>
<edge source="replaceChild" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="replaceChild" target="for_10">
  <data key="d5">contains</data>
</edge>
</graph></graphml>