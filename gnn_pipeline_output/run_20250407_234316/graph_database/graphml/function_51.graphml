<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-3193</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="test_mod_exp">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="BIO_puts">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_set_word">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_bntest_rand">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_div">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_one">
  <data key="d4">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_sub">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_zero">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_new">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_exp">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_print">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BN_mod_exp(d, a, b, c, ctx</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_mod_exp(d, a, b, c, ctx</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bp != NULL</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!results</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_is_zero(b</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BN_mod_exp_mont_consttime(d, a, b, c, ctx, NULL</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BN_mod_exp_mont_consttime(d, a, b, c, ctx, NULL</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_mod_exp_mont_consttime(d, a, b, c, ctx, NULL</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bp != NULL</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!results</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_is_zero(b</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; num2; i++</data>
</node>
<node id="for_12">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; num2; i++</data>
</node>
<edge source="test_mod_exp" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="test_mod_exp" target="BIO_puts">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_set_word">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_bntest_rand">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_free">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_div">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_one">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="fprintf">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_sub">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_zero">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_new">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_exp">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="BN_print">
  <data key="d6">calls</data>
</edge>
<edge source="test_mod_exp" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="test_mod_exp" target="for_12">
  <data key="d6">contains</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_12">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>