<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="format_string_vulnerability" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2014-3597</data>
<data key="d4">6.8</data>
<data key="d5">MEDIUM</data>
<node id="php_parserr">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="raw">
  <data key="d6">Variable</data>
</node>
<node id="have_v6_break">
  <data key="d6">Variable</data>
</node>
<node id="type_to_fetch">
  <data key="d6">Variable</data>
</node>
<node id="cp">
  <data key="d6">Variable</data>
</node>
<node id="name">
  <data key="d6">Variable</data>
</node>
<node id="ttl">
  <data key="d6">Variable</data>
</node>
<node id="s">
  <data key="d6">Variable</data>
</node>
<node id="ll">
  <data key="d6">Variable</data>
</node>
<node id="store">
  <data key="d6">Variable</data>
</node>
<node id="add_assoc_stringl">
  <data key="d6">FunctionCall</data>
</node>
<node id="emalloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="zval_ptr_dtor">
  <data key="d6">FunctionCall</data>
</node>
<node id="GETLONG">
  <data key="d6">FunctionCall</data>
</node>
<node id="MAKE_STD_ZVAL">
  <data key="d6">FunctionCall</data>
</node>
<node id="dn_expand">
  <data key="d6">FunctionCall</data>
</node>
<node id="GETSHORT">
  <data key="d6">FunctionCall</data>
</node>
<node id="snprintf">
  <data key="d6">FunctionCall</data>
</node>
<node id="add_assoc_zval">
  <data key="d6">FunctionCall</data>
</node>
<node id="array_init">
  <data key="d6">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d6">FunctionCall</data>
</node>
<node id="add_next_index_stringl">
  <data key="d6">FunctionCall</data>
</node>
<node id="add_assoc_string">
  <data key="d6">FunctionCall</data>
</node>
<node id="ALLOC_INIT_ZVAL">
  <data key="d6">FunctionCall</data>
</node>
<node id="add_assoc_long">
  <data key="d6">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">type_to_fetch != T_ANY &amp;&amp; type != type_to_fetch</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!store</data>
</node>
<node id="if_3">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">raw</data>
</node>
<node id="if_4">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">type == DNS_T_CNAME</data>
</node>
<node id="if_5">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">type == DNS_T_NS</data>
</node>
<node id="if_6">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">type == DNS_T_PTR</data>
</node>
<node id="if_7">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_8">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">(ll + n</data>
</node>
<node id="if_9">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_10">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_11">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">s != 0</data>
</node>
<node id="if_12">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">tp &gt; (u_char *</data>
</node>
<node id="if_13">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!have_v6_break</data>
</node>
<node id="if_14">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!in_v6_break</data>
</node>
<node id="if_15">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">have_v6_break &amp;&amp; in_v6_break</data>
</node>
<node id="if_16">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &gt; 15</data>
</node>
<node id="if_17">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n % 16 &gt; 8</data>
</node>
<node id="if_18">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">cp[0] != 0</data>
</node>
<node id="if_19">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">tp &gt; (u_char *</data>
</node>
<node id="if_20">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!have_v6_break</data>
</node>
<node id="if_21">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!in_v6_break</data>
</node>
<node id="if_22">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">s != 0</data>
</node>
<node id="if_23">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">tp &gt; (u_char *</data>
</node>
<node id="if_24">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!have_v6_break</data>
</node>
<node id="if_25">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!in_v6_break</data>
</node>
<node id="if_26">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">have_v6_break &amp;&amp; in_v6_break</data>
</node>
<node id="if_27">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">cp &lt; p + dlen</data>
</node>
<node id="if_28">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_29">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="if_30">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">n &lt; 0</data>
</node>
<node id="for_31">
  <data key="d6">ControlStructure_for</data>
  <data key="d7">i=0; i &lt; 8; i++</data>
</node>
<node id="for_32">
  <data key="d6">ControlStructure_for</data>
  <data key="d7">i = (n + 8</data>
</node>
<node id="while_33">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">ll &lt; dlen</data>
</node>
<node id="switch_34">
  <data key="d6">ControlStructure_switch</data>
  <data key="d7">type</data>
</node>
<edge source="php_parserr" target="raw">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="have_v6_break">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="type_to_fetch">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="cp">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="name">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="ttl">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="s">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="ll">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="store">
  <data key="d8">declares</data>
</edge>
<edge source="php_parserr" target="add_assoc_stringl">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="emalloc">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="zval_ptr_dtor">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="GETLONG">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="MAKE_STD_ZVAL">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="dn_expand">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="GETSHORT">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="snprintf">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="add_assoc_zval">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="array_init">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="sprintf">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="add_next_index_stringl">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="add_assoc_string">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="ALLOC_INIT_ZVAL">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="add_assoc_long">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="memcpy">
  <data key="d8">calls</data>
</edge>
<edge source="php_parserr" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_3">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_4">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_5">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_6">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_7">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_8">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_9">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_10">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_11">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_12">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_13">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_14">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_15">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_16">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_17">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_18">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_19">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_20">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_21">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_22">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_23">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_24">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_25">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_26">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_27">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_28">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_29">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="if_30">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="for_31">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="for_32">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="while_33">
  <data key="d8">contains</data>
</edge>
<edge source="php_parserr" target="switch_34">
  <data key="d8">contains</data>
</edge>
<edge source="raw" target="if_3">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="raw" target="php_parserr">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="have_v6_break" target="if_13">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="have_v6_break" target="if_20">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="if_24">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="if_26">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="have_v6_break" target="if_16">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="for_31">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="for_32">
  <data key="d8">used_in_body</data>
</edge>
<edge source="have_v6_break" target="switch_34">
  <data key="d8">used_in_body</data>
</edge>
<edge source="type_to_fetch" target="if_1">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="type_to_fetch" target="php_parserr">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="if_18">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="if_27">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="add_assoc_stringl">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="GETLONG">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="dn_expand">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="GETSHORT">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="add_next_index_stringl">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="php_parserr">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="cp" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="for_31">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="for_32">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="while_33">
  <data key="d8">used_in_body</data>
</edge>
<edge source="cp" target="switch_34">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="dn_expand">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="name" target="snprintf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="name" target="add_assoc_string">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="name" target="if_11">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="if_17">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="if_18">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="if_22">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="if_27">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="for_31">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="for_32">
  <data key="d8">used_in_body</data>
</edge>
<edge source="name" target="switch_34">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ttl" target="GETLONG">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ttl" target="add_assoc_long">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ttl" target="switch_34">
  <data key="d8">used_in_body</data>
</edge>
<edge source="s" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="s" target="if_11">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="s" target="if_22">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="ll" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ll" target="while_33">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ll" target="add_next_index_stringl">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ll" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ll" target="switch_34">
  <data key="d8">used_in_body</data>
</edge>
<edge source="store" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="store" target="php_parserr">
  <data key="d8">used_as_parameter</data>
</edge>
</graph></graphml>