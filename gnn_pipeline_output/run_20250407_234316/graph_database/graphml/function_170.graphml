<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2011-4029</data>
<data key="d3">1.9</data>
<data key="d4">LOW</data>
<node id="LockServer">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="port">
  <data key="d5">Variable</data>
</node>
<node id="tmppath">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="link">
  <data key="d5">FunctionCall</data>
</node>
<node id="kill">
  <data key="d5">FunctionCall</data>
</node>
<node id="unlink">
  <data key="d5">FunctionCall</data>
</node>
<node id="FatalError">
  <data key="d5">FunctionCall</data>
</node>
<node id="open">
  <data key="d5">FunctionCall</data>
</node>
<node id="chmod">
  <data key="d5">FunctionCall</data>
</node>
<node id="sscanf">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="write">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="close">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nolock</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len &gt; sizeof(LockFile</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lfd &lt; 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lfd &lt; 0</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lfd &lt; 0</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lfd &lt; 0</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">haslock</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">lfd &lt; 0</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">read(lfd, pid_str, 11</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(t&lt; 0</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">((t &lt; 0</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!haslock</data>
</node>
<node id="while_12">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">i &lt; 3</data>
</node>
<node id="while_13">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">i &lt; 3</data>
</node>
<node id="while_14">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(!haslock</data>
</node>
<edge source="LockServer" target="port">
  <data key="d7">declares</data>
</edge>
<edge source="LockServer" target="tmppath">
  <data key="d7">declares</data>
</edge>
<edge source="LockServer" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="LockServer" target="link">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="kill">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="unlink">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="FatalError">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="open">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="chmod">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="sscanf">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="write">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="sprintf">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="close">
  <data key="d7">calls</data>
</edge>
<edge source="LockServer" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="while_12">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="while_13">
  <data key="d7">contains</data>
</edge>
<edge source="LockServer" target="while_14">
  <data key="d7">contains</data>
</edge>
<edge source="port" target="FatalError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="port" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="port" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="port" target="while_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="port" target="while_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tmppath" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="tmppath" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>