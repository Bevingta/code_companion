<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7906</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="SetImageType">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="artifact">
  <data key="d3">Variable</data>
</node>
<node id="assert">
  <data key="d3">FunctionCall</data>
</node>
<node id="QuantizeImage">
  <data key="d3">FunctionCall</data>
</node>
<node id="AcquireImageInfo">
  <data key="d3">FunctionCall</data>
</node>
<node id="BilevelImageChannel">
  <data key="d3">FunctionCall</data>
</node>
<node id="AcquireQuantizeInfo">
  <data key="d3">FunctionCall</data>
</node>
<node id="NormalizeImage">
  <data key="d3">FunctionCall</data>
</node>
<node id="DestroyQuantizeInfo">
  <data key="d3">FunctionCall</data>
</node>
<node id="TransformImageColorspace">
  <data key="d3">FunctionCall</data>
</node>
<node id="DestroyImageInfo">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetImageArtifact">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">artifact != (const char *</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">SetImageMonochrome(image,&amp;image-&gt;exception</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">SetImageGray(image,&amp;image-&gt;exception</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">SetImageGray(image,&amp;image-&gt;exception</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;storage_class != DirectClass</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;storage_class != DirectClass</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;storage_class != DirectClass</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_21">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IssRGBCompatibleColorspace(image-&gt;colorspace</data>
</node>
<node id="if_22">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;storage_class != DirectClass</data>
</node>
<node id="if_23">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_24">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">status == MagickFalse</data>
</node>
<node id="switch_25">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">type</data>
</node>
<edge source="SetImageType" target="artifact">
  <data key="d5">declares</data>
</edge>
<edge source="SetImageType" target="assert">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="QuantizeImage">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="AcquireImageInfo">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="BilevelImageChannel">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="AcquireQuantizeInfo">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="NormalizeImage">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="DestroyQuantizeInfo">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="TransformImageColorspace">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="DestroyImageInfo">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="GetImageArtifact">
  <data key="d5">calls</data>
</edge>
<edge source="SetImageType" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_20">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_21">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_22">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_23">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="if_24">
  <data key="d5">contains</data>
</edge>
<edge source="SetImageType" target="switch_25">
  <data key="d5">contains</data>
</edge>
<edge source="artifact" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>