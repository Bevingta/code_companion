<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-3179</data>
<data key="d3">2.1</data>
<data key="d4">LOW</data>
<node id="processRequest">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="nrep">
  <data key="d5">Variable</data>
</node>
<node id="type">
  <data key="d5">Variable</data>
</node>
<node id="t">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="rbuf">
  <data key="d5">Variable</data>
</node>
<node id="n">
  <data key="d5">Variable</data>
</node>
<node id="read">
  <data key="d5">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="LIST_INSERT_HEAD">
  <data key="d5">FunctionCall</data>
</node>
<node id="syslog">
  <data key="d5">FunctionCall</data>
</node>
<node id="time">
  <data key="d5">FunctionCall</data>
</node>
<node id="DECODELENGTH_CHECKLIMIT">
  <data key="d5">FunctionCall</data>
</node>
<node id="USN">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="CODELENGTH">
  <data key="d5">FunctionCall</data>
</node>
<node id="NT">
  <data key="d5">FunctionCall</data>
</node>
<node id="close">
  <data key="d5">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">n&lt;0</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">errno == EINTR || errno == EAGAIN || errno == EWOULDBLOCK</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">n==0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p+l &gt; buf+n</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l == 0 &amp;&amp; type != 3</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">d-&gt;t &lt; t</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">d-&gt;headers[HEADER_LOCATION].l + d-&gt;headers[HEADER_NT].l
				  + d-&gt;headers[HEADER_USN].l + 6
				  + (rp - rbuf</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> (type==1 &amp;&amp; 0==memcmp(d-&gt;headers[HEADER_NT].p, p, l</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strlen(serv-&gt;location</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> (type==1 &amp;&amp; 0==strncmp(serv-&gt;st, (const char *</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">write(req-&gt;socket, rbuf, rp - rbuf</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!newserv</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">containsForbiddenChars(p, l</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!newserv-&gt;st</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p &gt;= buf + n</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p+l &gt; buf+n</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">containsForbiddenChars(p, l</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!newserv-&gt;usn</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p+l &gt; buf+n</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">containsForbiddenChars(p, l</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!newserv-&gt;server</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p+l &gt; buf+n</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">containsForbiddenChars(p, l</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!newserv-&gt;location</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">0 == strcmp(newserv-&gt;usn, serv-&gt;usn</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">write(req-&gt;socket, rbuf, 1</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">write(req-&gt;socket, rbuf, 1</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">newserv</data>
</node>
<node id="for_28">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">serv = servicelisthead.lh_first;
		    serv &amp;&amp; (nrep &lt; 255</data>
</node>
<node id="for_29">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">serv = servicelisthead.lh_first;
		    serv;
		    serv = serv-&gt;entries.le_next</data>
</node>
<node id="while_30">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">d &amp;&amp; (nrep &lt; 255</data>
</node>
<node id="switch_31">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">type</data>
</node>
<edge source="processRequest" target="nrep">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="type">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="t">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="rbuf">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="n">
  <data key="d7">declares</data>
</edge>
<edge source="processRequest" target="read">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="LIST_INSERT_HEAD">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="syslog">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="time">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="DECODELENGTH_CHECKLIMIT">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="USN">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="CODELENGTH">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="NT">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="close">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="memcpy">
  <data key="d7">calls</data>
</edge>
<edge source="processRequest" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="for_28">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="for_29">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="while_30">
  <data key="d7">contains</data>
</edge>
<edge source="processRequest" target="switch_31">
  <data key="d7">contains</data>
</edge>
<edge source="nrep" target="for_28">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="while_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nrep" target="switch_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="type" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="switch_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="syslog">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="type" target="NT">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="type" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="for_28">
  <data key="d7">used_in_body</data>
</edge>
<edge source="type" target="while_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="t" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_24">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="for_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="for_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="switch_31">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="DECODELENGTH_CHECKLIMIT">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="switch_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rbuf" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rbuf" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rbuf" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rbuf" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rbuf" target="for_28">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rbuf" target="while_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rbuf" target="switch_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="n" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_24">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="for_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="for_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="n" target="while_30">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>