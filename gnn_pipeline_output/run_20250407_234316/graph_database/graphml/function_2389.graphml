<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-4037</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="ehci_advance_state">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="again">
  <data key="d3">Variable</data>
</node>
<node id="async">
  <data key="d3">Variable</data>
</node>
<node id="ehci_state_writeback">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_waitlisthead">
  <data key="d3">FunctionCall</data>
</node>
<node id="g_assert_not_reached">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_fetchentry">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_fetchqh">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_fetchitd">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_horizqh">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_executing">
  <data key="d3">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_fetchqtd">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_execute">
  <data key="d3">FunctionCall</data>
</node>
<node id="ehci_state_fetchsitd">
  <data key="d3">FunctionCall</data>
</node>
<node id="assert">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">q != NULL</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">async</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">async</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!async</data>
</node>
<edge source="ehci_advance_state" target="again">
  <data key="d5">declares</data>
</edge>
<edge source="ehci_advance_state" target="async">
  <data key="d5">declares</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_writeback">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_waitlisthead">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="g_assert_not_reached">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_fetchentry">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_fetchqh">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_fetchitd">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_horizqh">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_executing">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="fprintf">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_fetchqtd">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_execute">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="ehci_state_fetchsitd">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="assert">
  <data key="d5">calls</data>
</edge>
<edge source="ehci_advance_state" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ehci_advance_state" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ehci_advance_state" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ehci_advance_state" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="again" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="async" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="async" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="async" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="async" target="ehci_advance_state">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="ehci_state_waitlisthead">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="ehci_state_fetchentry">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="ehci_state_fetchqh">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="ehci_state_fetchitd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="ehci_state_fetchsitd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="assert">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="async" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>