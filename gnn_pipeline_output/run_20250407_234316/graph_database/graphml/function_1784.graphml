<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-6790</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="openTagToString">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="appendLiteral">
  <data key="d3">FunctionCall</data>
</node>
<node id="saveHTMLContentToBuffer">
  <data key="d3">FunctionCall</data>
</node>
<node id="postActionAfterSerializeOpenTag">
  <data key="d3">FunctionCall</data>
</node>
<node id="end">
  <data key="d3">FunctionCall</data>
</node>
<node id="attributes">
  <data key="d3">FunctionCall</data>
</node>
<node id="append">
  <data key="d3">FunctionCall</data>
</node>
<node id="frame">
  <data key="d3">FunctionCall</data>
</node>
<node id="name">
  <data key="d3">FunctionCall</data>
</node>
<node id="fromFrameOwnerElement">
  <data key="d3">FunctionCall</data>
</node>
<node id="value">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">needSkip</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!it-&gt;value(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">element-&gt;hasLegalLinkAttribute(attrName</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">attrValue.startsWith("javascript:", TextCaseInsensitive</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">m_localLinks.contains(completeURL</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!param-&gt;directoryName.isEmpty(</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">param-&gt;isHTMLDocument</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">element-&gt;hasChildren(</data>
</node>
<node id="for_8">
  <data key="d3">ControlStructure_for</data>
  <data key="d4">AttributeCollection::iterator it = attributes.begin(</data>
</node>
<edge source="openTagToString" target="appendLiteral">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="saveHTMLContentToBuffer">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="postActionAfterSerializeOpenTag">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="end">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="attributes">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="append">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="frame">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="name">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="fromFrameOwnerElement">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="value">
  <data key="d5">calls</data>
</edge>
<edge source="openTagToString" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="openTagToString" target="for_8">
  <data key="d5">contains</data>
</edge>
</graph></graphml>