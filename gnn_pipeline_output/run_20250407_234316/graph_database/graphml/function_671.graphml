<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-5352</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="AirPDcapDecryptWPABroadcastKey">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="eapol_len">
  <data key="d4">Variable</data>
</node>
<node id="crypt_rc4_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="crypt_rc4">
  <data key="d4">FunctionCall</data>
</node>
<node id="DEBUG_DUMP">
  <data key="d4">FunctionCall</data>
</node>
<node id="AirPDcapRsnaMng">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="EK">
  <data key="d4">FunctionCall</data>
</node>
<node id="algorithm">
  <data key="d4">FunctionCall</data>
</node>
<node id="pntoh16">
  <data key="d4">FunctionCall</data>
</node>
<node id="bytes">
  <data key="d4">FunctionCall</data>
</node>
<node id="AIRPDCAP_EAP_KEY_DESCR_VER">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="other">
  <data key="d4">FunctionCall</data>
</node>
<node id="AES_unwrap">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_memdup">
  <data key="d4">FunctionCall</data>
</node>
<node id="IE">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_version == AIRPDCAP_WPA_KEY_VER_NOT_CCMP</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_version == AIRPDCAP_WPA_KEY_VER_AES_CCMP</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_bytes_len &lt; 16</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_bytes_len &lt; GROUP_KEY_MIN_LEN || key_bytes_len &gt; eapol_len - sizeof(EAPOL_RSN_KEY</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_version == AIRPDCAP_WPA_KEY_VER_NOT_CCMP</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_version == AIRPDCAP_WPA_KEY_VER_AES_CCMP</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rsn_id == 0xdd &amp;&amp; type == 0x000fac01</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_found</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_index+8 &gt;= key_bytes_len ||
                key_length &gt; key_bytes_len - key_index - 8</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_length == TKIP_GROUP_KEY_LEN</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_len &gt; key_bytes_len</data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">key_index &lt; (key_bytes_len - 6</data>
</node>
<edge source="AirPDcapDecryptWPABroadcastKey" target="eapol_len">
  <data key="d6">declares</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="crypt_rc4_init">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="crypt_rc4">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="DEBUG_DUMP">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="AirPDcapRsnaMng">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="EK">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="algorithm">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="pntoh16">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="bytes">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="AIRPDCAP_EAP_KEY_DESCR_VER">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="g_free">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="other">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="AES_unwrap">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="g_memdup">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="IE">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="g_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="AirPDcapDecryptWPABroadcastKey" target="while_11">
  <data key="d6">contains</data>
</edge>
<edge source="eapol_len" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="eapol_len" target="AirPDcapDecryptWPABroadcastKey">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>