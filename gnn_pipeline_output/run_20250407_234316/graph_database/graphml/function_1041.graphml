<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-6497</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="ReadPSDChannel">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="option">
  <data key="d3">Variable</data>
</node>
<node id="channel">
  <data key="d3">Variable</data>
</node>
<node id="ReadPSDChannelRaw">
  <data key="d3">FunctionCall</data>
</node>
<node id="else">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetImageOption">
  <data key="d3">FunctionCall</data>
</node>
<node id="ReadPSDChannelZip">
  <data key="d3">FunctionCall</data>
</node>
<node id="ReadPSDRLESizes">
  <data key="d3">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d3">FunctionCall</data>
</node>
<node id="ReadPSDChannelRLE">
  <data key="d3">FunctionCall</data>
</node>
<node id="ThrowBinaryException">
  <data key="d3">FunctionCall</data>
</node>
<node id="CloneImage">
  <data key="d3">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d3">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d3">FunctionCall</data>
</node>
<node id="ThrowMagickException">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">layer_info-&gt;channel_info[channel].type &lt; -1</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(layer_info-&gt;channel_info[channel].type != -2</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sizes == (MagickOffsetType *</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">status == MagickFalse</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">mask != (Image *</data>
</node>
<node id="switch_5">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">compression</data>
</node>
<edge source="ReadPSDChannel" target="option">
  <data key="d5">declares</data>
</edge>
<edge source="ReadPSDChannel" target="channel">
  <data key="d5">declares</data>
</edge>
<edge source="ReadPSDChannel" target="ReadPSDChannelRaw">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="else">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="GetImageOption">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="ReadPSDChannelZip">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="ReadPSDRLESizes">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="RelinquishMagickMemory">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="ReadPSDChannelRLE">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="ThrowBinaryException">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="CloneImage">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="TellBlob">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="SeekBlob">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="ThrowMagickException">
  <data key="d5">calls</data>
</edge>
<edge source="ReadPSDChannel" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="ReadPSDChannel" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="ReadPSDChannel" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="ReadPSDChannel" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="ReadPSDChannel" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="ReadPSDChannel" target="switch_5">
  <data key="d5">contains</data>
</edge>
<edge source="option" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="channel" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="channel" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="channel" target="ReadPSDChannelRaw">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="ReadPSDChannelZip">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="ReadPSDRLESizes">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="ReadPSDChannelRLE">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="ReadPSDChannel">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="SeekBlob">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="channel" target="switch_5">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>