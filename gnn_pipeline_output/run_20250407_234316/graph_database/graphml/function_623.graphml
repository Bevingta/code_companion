<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-8646</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="hash_accept">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ask2">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="newsock">
  <data key="d3">Variable</data>
</node>
<node id="ask">
  <data key="d3">Variable</data>
</node>
<node id="ctx">
  <data key="d3">Variable</data>
</node>
<node id="ctx2">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="req">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="sk2">
  <data key="d3">Variable</data>
</node>
<node id="sock_put">
  <data key="d3">FunctionCall</data>
</node>
<node id="crypto_ahash_statesize">
  <data key="d3">FunctionCall</data>
</node>
<node id="crypto_ahash_export">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_orphan">
  <data key="d3">FunctionCall</data>
</node>
<node id="alg_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="crypto_ahash_import">
  <data key="d3">FunctionCall</data>
</node>
<node id="af_alg_accept">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err</data>
</node>
<edge source="hash_accept" target="ask2">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="newsock">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="ask">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="ctx">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="ctx2">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="req">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="sk2">
  <data key="d5">declares</data>
</edge>
<edge source="hash_accept" target="sock_put">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="crypto_ahash_statesize">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="crypto_ahash_export">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="sock_orphan">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="alg_sk">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="crypto_ahash_import">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="af_alg_accept">
  <data key="d5">calls</data>
</edge>
<edge source="hash_accept" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="hash_accept" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="hash_accept" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="err" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="newsock" target="hash_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsock" target="af_alg_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ask" target="af_alg_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx" target="crypto_ahash_import">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ctx2" target="crypto_ahash_import">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="hash_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="af_alg_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="crypto_ahash_statesize">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="crypto_ahash_export">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="crypto_ahash_import">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_put">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_orphan">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="alg_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="af_alg_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="hash_accept">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk2" target="sock_put">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk2" target="sock_orphan">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk2" target="alg_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk2" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk2" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk2" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>