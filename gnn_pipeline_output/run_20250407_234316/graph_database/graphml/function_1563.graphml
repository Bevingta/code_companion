<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-10749</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="parse_string">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="ptr">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="out">
  <data key="d4">Variable</data>
</node>
<node id="str">
  <data key="d4">Variable</data>
</node>
<node id="ptr2">
  <data key="d4">Variable</data>
</node>
<node id="cJSON_Delete">
  <data key="d4">FunctionCall</data>
</node>
<node id="parse_hex4">
  <data key="d4">FunctionCall</data>
</node>
<node id="cJSON_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*str!='\"'</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*end_ptr++ == '\\'</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!out</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*ptr!='\\'</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr &gt;= end_ptr</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(uc&gt;=0xDC00 &amp;&amp; uc&lt;=0xDFFF</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uc&gt;=0xD800 &amp;&amp; uc&lt;=0xDBFF</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr+6 &gt; end_ptr</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr[1]!='\\' || ptr[2]!='u'</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uc2&lt;0xDC00 || uc2&gt;0xDFFF</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uc&lt;0x80</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uc&lt;0x800</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uc&lt;0x10000</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*ptr=='\"'</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">*end_ptr!='\"' &amp;&amp; *end_ptr &amp;&amp; ++len</data>
</node>
<node id="while_15">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">ptr &lt; end_ptr</data>
</node>
<node id="switch_16">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">*ptr</data>
</node>
<node id="switch_17">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">len</data>
</node>
<edge source="parse_string" target="ptr">
  <data key="d6">declares</data>
</edge>
<edge source="parse_string" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="parse_string" target="out">
  <data key="d6">declares</data>
</edge>
<edge source="parse_string" target="str">
  <data key="d6">declares</data>
</edge>
<edge source="parse_string" target="ptr2">
  <data key="d6">declares</data>
</edge>
<edge source="parse_string" target="cJSON_Delete">
  <data key="d6">calls</data>
</edge>
<edge source="parse_string" target="parse_hex4">
  <data key="d6">calls</data>
</edge>
<edge source="parse_string" target="cJSON_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="parse_string" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="while_15">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="switch_16">
  <data key="d6">contains</data>
</edge>
<edge source="parse_string" target="switch_17">
  <data key="d6">contains</data>
</edge>
<edge source="ptr" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ptr" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ptr" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ptr" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ptr" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="switch_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="parse_hex4">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="switch_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="cJSON_malloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="switch_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="parse_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="switch_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="switch_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr2" target="switch_17">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>