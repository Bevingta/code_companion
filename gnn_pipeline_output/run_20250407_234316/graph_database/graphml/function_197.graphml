<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2013-6462</data>
<data key="d3">9.3</data>
<data key="d4">HIGH</data>
<node id="bdfReadCharacters">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="wx">
  <data key="d5">Variable</data>
</node>
<node id="bh">
  <data key="d5">Variable</data>
</node>
<node id="bw">
  <data key="d5">Variable</data>
</node>
<node id="scan">
  <data key="d5">Variable</data>
</node>
<node id="numEncodedGlyphs">
  <data key="d5">Variable</data>
</node>
<node id="ignore">
  <data key="d5">Variable</data>
</node>
<node id="glyph">
  <data key="d5">Variable</data>
</node>
<node id="nencoding">
  <data key="d5">Variable</data>
</node>
<node id="lineBuf">
  <data key="d5">Variable</data>
</node>
<node id="wy">
  <data key="d5">Variable</data>
</node>
<node id="charName">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="bit">
  <data key="d5">Variable</data>
</node>
<node id="line">
  <data key="d5">Variable</data>
</node>
<node id="byte">
  <data key="d5">Variable</data>
</node>
<node id="bb">
  <data key="d5">Variable</data>
</node>
<node id="t">
  <data key="d5">Variable</data>
</node>
<node id="bl">
  <data key="d5">Variable</data>
</node>
<node id="calloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfGetLine">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfReadBitmap">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfError">
  <data key="d5">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="SEGMENT_MAJOR">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfHexByte">
  <data key="d5">FunctionCall</data>
</node>
<node id="ACCESSENCODINGL">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfIsPrefix">
  <data key="d5">FunctionCall</data>
</node>
<node id="89">
  <data key="d5">FunctionCall</data>
</node>
<node id="bzero">
  <data key="d5">FunctionCall</data>
</node>
<node id="bdfSkipBitmap">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitmapExtra</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!line</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nchars &lt; 1</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nchars &gt; INT32_MAX / sizeof(CharInfoRec</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ci</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitmapExtra</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapExtra-&gt;glyphNames</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitmapExtra</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapExtra-&gt;sWidths</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">sscanf((char *</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitmapExtra</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!line || (t = sscanf((char *</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">enc &lt; -1 || (t == 2 &amp;&amp; enc2 &lt; -1</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">t == 2 &amp;&amp; enc == -1</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">enc == -1</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapExtra</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">enc &gt; MAXENCODING</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">char_row &lt; pFont-&gt;info.firstRow</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">char_row &gt; pFont-&gt;info.lastRow</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">char_col &lt; pFont-&gt;info.firstCol</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">char_col &gt; pFont-&gt;info.lastCol</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bdfEncoding[char_row] == (CharInfoPtr *</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bdfEncoding[char_row]</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bdfEncoding[char_row] != NULL</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!line</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">wy != 0</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bitmapExtra</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!line</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">wy != 0</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!line</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(bh &lt; 0</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(line</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!line || !bdfIsPrefix(line, "BITMAP"</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(strlen(charName</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(charName[0] &gt;= '0'</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">charName[0] == 'x'</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ignore</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ndx + nignored != nchars</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(line</data>
</node>
<node id="if_39">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!line</data>
</node>
<node id="if_40">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">numEncodedGlyphs == 0</data>
</node>
<node id="if_41">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapFont-&gt;encoding</data>
</node>
<node id="if_42">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bdfEncoding[char_row] == (CharInfoPtr *</data>
</node>
<node id="if_43">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bdfEncoding[char_row][char_col]</data>
</node>
<node id="if_44">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapFont-&gt;encoding[SEGMENT_MAJOR(i</data>
</node>
<node id="if_45">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!bitmapFont-&gt;encoding[SEGMENT_MAJOR(i</data>
</node>
<node id="if_46">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bdfEncoding[i]</data>
</node>
<node id="if_47">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">bdfEncoding[i]</data>
</node>
<node id="for_48">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; GLYPHPADOPTIONS; i++</data>
</node>
<node id="for_49">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">ndx = 0; (ndx &lt; nchars</data>
</node>
<node id="for_50">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; 256; i++</data>
</node>
<node id="for_51">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">p = line + strlen("ATTRIBUTES "</data>
</node>
<node id="for_52">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">char_row = pFont-&gt;info.firstRow;
	    char_row &lt;= pFont-&gt;info.lastRow;
	    char_row++</data>
</node>
<node id="for_53">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">char_col = pFont-&gt;info.firstCol;
		    char_col &lt;= pFont-&gt;info.lastCol;
		    char_col++</data>
</node>
<node id="for_54">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; 256; i++</data>
</node>
<node id="for_55">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; 256; i++</data>
</node>
<edge source="bdfReadCharacters" target="wx">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="bh">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="bw">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="scan">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="numEncodedGlyphs">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="ignore">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="glyph">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="nencoding">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="lineBuf">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="wy">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="charName">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="bit">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="line">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="byte">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="bb">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="t">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="bl">
  <data key="d7">declares</data>
</edge>
<edge source="bdfReadCharacters" target="calloc">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfGetLine">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfReadBitmap">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfError">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="malloc">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="SEGMENT_MAJOR">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfHexByte">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="ACCESSENCODINGL">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfIsPrefix">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="89">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bzero">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="bdfSkipBitmap">
  <data key="d7">calls</data>
</edge>
<edge source="bdfReadCharacters" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_39">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_40">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_41">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_42">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_43">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_44">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_45">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_46">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="if_47">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_48">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_49">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_50">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_51">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_52">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_53">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_54">
  <data key="d7">contains</data>
</edge>
<edge source="bdfReadCharacters" target="for_55">
  <data key="d7">contains</data>
</edge>
<edge source="wx" target="if_33">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wx" target="if_34">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wx" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wx" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bh" target="if_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bh" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bh" target="bdfSkipBitmap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bh" target="if_33">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bh" target="if_35">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bh" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bh" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bw" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bw" target="if_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bw" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bw" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="scan" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="scan" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="scan" target="bdfReadBitmap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="scan" target="bdfReadCharacters">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="scan" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="scan" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="numEncodedGlyphs" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="numEncodedGlyphs" target="if_23">
  <data key="d7">used_in_body</data>
</edge>
<edge source="numEncodedGlyphs" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="numEncodedGlyphs" target="for_50">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ignore" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ignore" target="if_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ignore" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ignore" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ignore" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ignore" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ignore" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="glyph" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="glyph" target="bdfReadBitmap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="glyph" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="glyph" target="bdfReadCharacters">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="glyph" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="glyph" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nencoding" target="calloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="nencoding" target="if_40">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nencoding" target="if_41">
  <data key="d7">used_in_body</data>
</edge>
<edge source="lineBuf" target="bdfGetLine">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="lineBuf" target="if_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="lineBuf" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="wy" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="wy" target="if_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="wy" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="charName" target="if_33">
  <data key="d7">used_in_body</data>
</edge>
<edge source="charName" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="charName" target="if_35">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="charName" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="charName" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="charName" target="if_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="charName" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_44">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_45">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_52">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_53">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_44">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="if_45">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bit" target="bdfReadBitmap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bit" target="bdfError">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bit" target="bdfReadCharacters">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bit" target="ACCESSENCODINGL">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bit" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bit" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="line" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_24">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="line" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="if_39">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="for_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="line" target="bdfGetLine">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="line" target="bdfIsPrefix">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="line" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="byte" target="bdfReadBitmap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="byte" target="bdfReadCharacters">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="byte" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="byte" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bb" target="if_33">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bb" target="if_35">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bb" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bb" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="t" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_33">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_42">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_44">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="if_45">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="for_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="for_52">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="t" target="for_53">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="bl" target="if_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bl" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>