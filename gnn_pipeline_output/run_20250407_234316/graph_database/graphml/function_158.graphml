<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-2181</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="dtls1_process_buffered_records">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="dtls1_get_unprocessed_record">
  <data key="d3">FunctionCall</data>
</node>
<node id="RECORD_LAYER_get_rbuf">
  <data key="d3">FunctionCall</data>
</node>
<node id="pqueue_peek">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">item</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s-&gt;rlayer.d-&gt;unprocessed_rcds.epoch != s-&gt;rlayer.d-&gt;r_epoch</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dtls1_process_record(s</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dtls1_buffer_record(s, &amp;(s-&gt;rlayer.d-&gt;processed_rcds</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dtls1_process_record(s</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dtls1_buffer_record(s, &amp;(s-&gt;rlayer.d-&gt;processed_rcds</data>
</node>
<node id="while_6">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">pqueue_peek(s-&gt;rlayer.d-&gt;unprocessed_rcds.q</data>
</node>
<node id="while_7">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">pqueue_peek(s-&gt;rlayer.d-&gt;unprocessed_rcds.q</data>
</node>
<edge source="dtls1_process_buffered_records" target="dtls1_get_unprocessed_record">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_process_buffered_records" target="RECORD_LAYER_get_rbuf">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_process_buffered_records" target="pqueue_peek">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="while_6">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_process_buffered_records" target="while_7">
  <data key="d5">contains</data>
</edge>
</graph></graphml>