<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-3197</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="get_client_hello">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="z">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="STACK_OF">
  <data key="d4">FunctionCall</data>
</node>
<node id="ssl2_read">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_SSL_CIPHER_num">
  <data key="d4">FunctionCall</data>
</node>
<node id="SSLerr">
  <data key="d4">FunctionCall</data>
</node>
<node id="ssl_get_prev_session">
  <data key="d4">FunctionCall</data>
</node>
<node id="SSL_get_ciphers">
  <data key="d4">FunctionCall</data>
</node>
<node id="msg_callback">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_SSL_CIPHER_delete">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_SSL_CIPHER_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="ssl2_return_error">
  <data key="d4">FunctionCall</data>
</node>
<node id="ssl_bytes_to_cipher_list">
  <data key="d4">FunctionCall</data>
</node>
<node id="n2s">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_SSL_CIPHER_dup">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;state == SSL2_ST_GET_CLIENT_HELLO_A</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;state == SSL2_ST_GET_CLIENT_HELLO_B</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i &lt; (9 - s-&gt;init_num</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*(p++</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p[-1] != SSL2_MT_ERROR</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i &lt; s-&gt;version</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(i &lt; 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(i &lt; SSL2_MIN_CHALLENGE_LENGTH</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len &gt; SSL2_MAX_RECORD_LENGTH_3_BYTE_HEADER</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i != n</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;msg_callback</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(s-&gt;s2-&gt;tmp.session_id_length != 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;s2-&gt;tmp.session_id_length == 0</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ssl_get_new_session(s, 1</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i == 1</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i == -1</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;cert == NULL</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ssl_get_new_session(s, 1</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!s-&gt;hit</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cs == NULL</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;options &amp; SSL_OP_CIPHER_SERVER_PREFERENCE</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">prio == NULL</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sk_SSL_CIPHER_find(allow, sk_SSL_CIPHER_value(prio, z</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;s2-&gt;challenge_length &gt; sizeof s-&gt;s2-&gt;challenge</data>
</node>
<node id="for_24">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">z = 0; z &lt; sk_SSL_CIPHER_num(prio</data>
</node>
<edge source="get_client_hello" target="z">
  <data key="d6">declares</data>
</edge>
<edge source="get_client_hello" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="get_client_hello" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="get_client_hello" target="STACK_OF">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="ssl2_read">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="sk_SSL_CIPHER_num">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="SSLerr">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="ssl_get_prev_session">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="SSL_get_ciphers">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="msg_callback">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="sk_SSL_CIPHER_delete">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="sk_SSL_CIPHER_free">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="ssl2_return_error">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="ssl_bytes_to_cipher_list">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="n2s">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="sk_SSL_CIPHER_dup">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="get_client_hello" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="get_client_hello" target="for_24">
  <data key="d6">contains</data>
</edge>
<edge source="z" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="z" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="z" target="for_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="for_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="ssl_get_prev_session">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="ssl_bytes_to_cipher_list">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>