<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-3879</data>
<data key="d2">7.1</data>
<data key="d3">HIGH</data>
<node id="DLSParser">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="Convert_art">
  <data key="d4">FunctionCall</data>
</node>
<node id="EAS_ReportEx">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="DumpDLS">
  <data key="d4">FunctionCall</data>
</node>
<node id="Parse_ptbl">
  <data key="d4">FunctionCall</data>
</node>
<node id="PtrOfs">
  <data key="d4">FunctionCall</data>
</node>
<node id="Parse_lins">
  <data key="d4">FunctionCall</data>
</node>
<node id="EAS_HWMalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="DLSCleanup">
  <data key="d4">FunctionCall</data>
</node>
<node id="EAS_HWMemSet">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = EAS_HWFileSeek(dls.hwInstData, dls.fileHandle, offset</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = EAS_HWReadFile(dls.hwInstData, dls.fileHandle, &amp;temp, sizeof(temp</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = NextChunk(&amp;dls, &amp;pos, &amp;temp, &amp;size</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp != CHUNK_DLS</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = NextChunk(&amp;dls, &amp;pos, &amp;temp, &amp;size</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = Parse_cdl(&amp;dls, size, &amp;temp</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!temp</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">linsSize == 0</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">wvplSize == 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ptblSize == 0</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(result = Parse_ptbl(&amp;dls, ptblPos, wvplPos, wvplSize</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dls.waveCount == 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dls.wsmpData == NULL</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result == EAS_SUCCESS</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dls.regionCount == 0</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dls.artCount == 0</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dls.instCount == 0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size &lt;= 0</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dls.pDLS == NULL</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result == EAS_SUCCESS</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dls.wsmpData</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result == EAS_SUCCESS</data>
</node>
<node id="while_22">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">pos &lt; endDLS</data>
</node>
<node id="switch_23">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">temp</data>
</node>
<edge source="DLSParser" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="DLSParser" target="Convert_art">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="EAS_ReportEx">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="DumpDLS">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="Parse_ptbl">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="PtrOfs">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="Parse_lins">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="EAS_HWMalloc">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="DLSCleanup">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="EAS_HWMemSet">
  <data key="d6">calls</data>
</edge>
<edge source="DLSParser" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="while_22">
  <data key="d6">contains</data>
</edge>
<edge source="DLSParser" target="switch_23">
  <data key="d6">contains</data>
</edge>
<edge source="p" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_23">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>