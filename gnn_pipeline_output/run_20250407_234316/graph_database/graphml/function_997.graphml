<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-9077</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="dccp_v6_request_recv_sock">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="dst">
  <data key="d3">Variable</data>
</node>
<node id="newinet">
  <data key="d3">Variable</data>
</node>
<node id="newsk">
  <data key="d3">Variable</data>
</node>
<node id="np">
  <data key="d3">Variable</data>
</node>
<node id="newnp">
  <data key="d3">Variable</data>
</node>
<node id="newdp6">
  <data key="d3">Variable</data>
</node>
<node id="skb">
  <data key="d3">Variable</data>
</node>
<node id="ireq">
  <data key="d3">Variable</data>
</node>
<node id="fl6">
  <data key="d3">Variable</data>
</node>
<node id="req">
  <data key="d3">Variable</data>
</node>
<node id="req_unhash">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="opt">
  <data key="d3">Variable</data>
</node>
<node id="dccp_create_openreq_child">
  <data key="d3">FunctionCall</data>
</node>
<node id="dccp_v4_request_recv_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="consume_skb">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="dccp_done">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet6_csk_route_req">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_csk">
  <data key="d3">FunctionCall</data>
</node>
<node id="ipv6_dup_options">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_rsk">
  <data key="d3">FunctionCall</data>
</node>
<node id="socket">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet6_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="dst_release">
  <data key="d3">FunctionCall</data>
</node>
<node id="ip6_dst_store">
  <data key="d3">FunctionCall</data>
</node>
<node id="RCU_INIT_POINTER">
  <data key="d3">FunctionCall</data>
</node>
<node id="ipv6_hdr">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_ehash_nolisten">
  <data key="d3">FunctionCall</data>
</node>
<node id="dccp_sync_mss">
  <data key="d3">FunctionCall</data>
</node>
<node id="skb_clone">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_csk_prepare_forced_close">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet6_iif">
  <data key="d3">FunctionCall</data>
</node>
<node id="__NET_INC_STATS">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">skb-&gt;protocol == htons(ETH_P_IP</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newsk == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">skb</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk_acceptq_is_full(sk</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dst</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dst</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newsk == NULL</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">skb</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!opt</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">opt</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">opt</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">__inet_inherit_port(sk, newsk</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">*own_req &amp;&amp; ireq-&gt;pktopts</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newnp-&gt;pktoptions</data>
</node>
<edge source="dccp_v6_request_recv_sock" target="dst">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="newinet">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="newsk">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="np">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="newnp">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="newdp6">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="skb">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="ireq">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="fl6">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="req">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="req_unhash">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="opt">
  <data key="d5">declares</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="dccp_create_openreq_child">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="dccp_v4_request_recv_sock">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet_sk">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="consume_skb">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="dccp_done">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet6_csk_route_req">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet_csk">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="ipv6_dup_options">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet_rsk">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="socket">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet6_sk">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="dst_release">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="ip6_dst_store">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="RCU_INIT_POINTER">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="ipv6_hdr">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet_ehash_nolisten">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="dccp_sync_mss">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="skb_clone">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet_csk_prepare_forced_close">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="inet6_iif">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="__NET_INC_STATS">
  <data key="d5">calls</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="dccp_v6_request_recv_sock" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="dst" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dst" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dst" target="dccp_v4_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dst" target="dccp_v6_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dst" target="dst_release">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dst" target="ip6_dst_store">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dst" target="dccp_sync_mss">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dst" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dst" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dst" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dst" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newinet" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="newsk" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="dccp_done">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_csk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="ipv6_dup_options">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet6_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="ip6_dst_store">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_ehash_nolisten">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="dccp_sync_mss">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_csk_prepare_forced_close">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="np" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="np" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="np" target="RCU_INIT_POINTER">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="np" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="newnp" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newnp" target="RCU_INIT_POINTER">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newnp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newnp" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newdp6" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="skb" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="skb" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="skb" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="skb" target="dccp_create_openreq_child">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="dccp_v4_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="dccp_v6_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="ipv6_hdr">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="skb" target="inet6_iif">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ireq" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ireq" target="consume_skb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ireq" target="skb_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="fl6" target="inet6_csk_route_req">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="fl6" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fl6" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fl6" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fl6" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="req" target="dccp_create_openreq_child">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="dccp_v4_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="consume_skb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="inet6_csk_route_req">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="inet_rsk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="dccp_v6_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="inet_ehash_nolisten">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="skb_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="req_unhash" target="dccp_v4_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req_unhash" target="dccp_v6_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req_unhash" target="inet_ehash_nolisten">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="req_unhash" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="dccp_create_openreq_child">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dccp_v4_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dccp_done">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet6_csk_route_req">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="ipv6_dup_options">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dccp_v6_request_recv_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet6_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="ip6_dst_store">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="ipv6_hdr">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_ehash_nolisten">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dccp_sync_mss">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk_prepare_forced_close">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet6_iif">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="__NET_INC_STATS">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="opt" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="opt" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="opt" target="consume_skb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="ipv6_dup_options">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="RCU_INIT_POINTER">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="skb_clone">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="opt" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>