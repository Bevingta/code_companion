<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-14057</data>
<data key="d3">7.1</data>
<data key="d4">HIGH</data>
<node id="asf_read_marker">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="name_len">
  <data key="d5">Variable</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="pres_time">
  <data key="d5">Variable</data>
</node>
<node id="name">
  <data key="d5">Variable</data>
</node>
<node id="avio_r8">
  <data key="d5">FunctionCall</data>
</node>
<node id="avpriv_new_chapter">
  <data key="d5">FunctionCall</data>
</node>
<node id="avio_rl32">
  <data key="d5">FunctionCall</data>
</node>
<node id="avio_rl64">
  <data key="d5">FunctionCall</data>
</node>
<node id="avio_rl16">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ret = avio_get_str16le(pb, name_len * 2, name,
                                    sizeof(name</data>
</node>
<node id="for_1">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; name_len; i++</data>
</node>
<node id="for_2">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; count; i++</data>
</node>
<edge source="asf_read_marker" target="name_len">
  <data key="d7">declares</data>
</edge>
<edge source="asf_read_marker" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="asf_read_marker" target="pres_time">
  <data key="d7">declares</data>
</edge>
<edge source="asf_read_marker" target="name">
  <data key="d7">declares</data>
</edge>
<edge source="asf_read_marker" target="avio_r8">
  <data key="d7">calls</data>
</edge>
<edge source="asf_read_marker" target="avpriv_new_chapter">
  <data key="d7">calls</data>
</edge>
<edge source="asf_read_marker" target="avio_rl32">
  <data key="d7">calls</data>
</edge>
<edge source="asf_read_marker" target="avio_rl64">
  <data key="d7">calls</data>
</edge>
<edge source="asf_read_marker" target="avio_rl16">
  <data key="d7">calls</data>
</edge>
<edge source="asf_read_marker" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="asf_read_marker" target="for_1">
  <data key="d7">contains</data>
</edge>
<edge source="asf_read_marker" target="for_2">
  <data key="d7">contains</data>
</edge>
<edge source="name_len" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="name_len" target="for_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name_len" target="for_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="size" target="asf_read_marker">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pres_time" target="for_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pres_time" target="for_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="name" target="for_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="for_2">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>