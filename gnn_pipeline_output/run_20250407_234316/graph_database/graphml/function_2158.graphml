<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-17052</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="mm_init">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="user_ns">
  <data key="d3">Variable</data>
</node>
<node id="p">
  <data key="d3">Variable</data>
</node>
<node id="mm">
  <data key="d3">Variable</data>
</node>
<node id="mm_init_aio">
  <data key="d3">FunctionCall</data>
</node>
<node id="mm_init_cpumask">
  <data key="d3">FunctionCall</data>
</node>
<node id="atomic_long_set">
  <data key="d3">FunctionCall</data>
</node>
<node id="mm_nr_pmds_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="INIT_LIST_HEAD">
  <data key="d3">FunctionCall</data>
</node>
<node id="atomic_set">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_lock_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="mmu_notifier_mm_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="defined">
  <data key="d3">FunctionCall</data>
</node>
<node id="get_user_ns">
  <data key="d3">FunctionCall</data>
</node>
<node id="free_mm">
  <data key="d3">FunctionCall</data>
</node>
<node id="mm_free_pgd">
  <data key="d3">FunctionCall</data>
</node>
<node id="init_rwsem">
  <data key="d3">FunctionCall</data>
</node>
<node id="mm_init_owner">
  <data key="d3">FunctionCall</data>
</node>
<node id="init_tlb_flush_pending">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">current-&gt;mm</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">mm_alloc_pgd(mm</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">init_new_context(p, mm</data>
</node>
<edge source="mm_init" target="user_ns">
  <data key="d5">declares</data>
</edge>
<edge source="mm_init" target="p">
  <data key="d5">declares</data>
</edge>
<edge source="mm_init" target="mm">
  <data key="d5">declares</data>
</edge>
<edge source="mm_init" target="mm_init_aio">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="mm_init_cpumask">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="atomic_long_set">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="mm_nr_pmds_init">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="INIT_LIST_HEAD">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="atomic_set">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="spin_lock_init">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="mmu_notifier_mm_init">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="defined">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="get_user_ns">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="free_mm">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="mm_free_pgd">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="init_rwsem">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="mm_init_owner">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="init_tlb_flush_pending">
  <data key="d5">calls</data>
</edge>
<edge source="mm_init" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="mm_init" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="mm_init" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="user_ns" target="mm_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="user_ns" target="get_user_ns">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="p" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mm" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mm" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mm" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mm" target="mm_init_aio">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mm_init_cpumask">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="atomic_long_set">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mm_nr_pmds_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="INIT_LIST_HEAD">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="atomic_set">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="spin_lock_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mmu_notifier_mm_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mm_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="free_mm">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mm_free_pgd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="init_rwsem">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mm_init_owner">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="init_tlb_flush_pending">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>