<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-11470</data>
<data key="d2">7.1</data>
<data key="d3">HIGH</data>
<node id="ReadCINImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">Variable</data>
</node>
<node id="magick">
  <data key="d4">Variable</data>
</node>
<node id="property">
  <data key="d4">Variable</data>
</node>
<node id="pixels">
  <data key="d4">Variable</data>
</node>
<node id="c">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyStringInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="BlobToStringInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobSignedLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProfile">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetQuantumImageType">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyQuantumInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProperty">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobStream">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageColorspace">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobFloat">
  <data key="d4">FunctionCall</data>
</node>
<node id="ImportQuantumPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageBackgroundColor">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetQuantumExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBytesPerRow">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 4</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cin.image.orientation != (unsigned char</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.white_point[0]</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.white_point[1]</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.red_primary_chromaticity[0]</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.red_primary_chromaticity[1]</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.green_primary_chromaticity[0]</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.green_primary_chromaticity[1]</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.blue_primary_chromaticity[0]</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.image.blue_primary_chromaticity[1]</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.origination.gamma</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(cin.file.image_offset &gt; 2048</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c != ~0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c != ~0</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c != ~0</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cin.film.prefix != ~0UL</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cin.film.frame_position != ~0UL</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFloatDefined(cin.film.frame_rate</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(cin.file.image_offset &gt; 2048</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cin.file.user_length &gt; GetBlobSize(image</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">profile == (StringInfo *</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == EOF</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; (MagickOffsetType</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">quantum_info == (QuantumInfo *</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cin.image.number_channels == 1</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(size_t</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;previous == (Image *</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="for_37">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; 8; i++</data>
</node>
<node id="for_38">
  <data key="d4">ControlStructure_for</data>
  <data key="d5"> ; offset &lt; (MagickOffsetType</data>
</node>
<node id="for_39">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="switch_40">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">cin.image.orientation</data>
</node>
<edge source="ReadCINImage" target="length">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="magick">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="property">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="pixels">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="c">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ReadCINImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="DestroyStringInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="AcquireQuantumInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="BlobToStringInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlobSignedLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageProfile">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetQuantumImageType">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="DestroyQuantumInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageProperty">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlobStream">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageColorspace">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlobFloat">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ImportQuantumPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="CopyMagickString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="SetImageBackgroundColor">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="GetQuantumExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="GetBytesPerRow">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="ReadBlobLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadCINImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="for_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="for_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="for_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadCINImage" target="switch_40">
  <data key="d6">contains</data>
</edge>
<edge source="length" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="ReadBlobStream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="magick" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="property" target="SetImageProperty">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="property" target="CopyMagickString">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="property" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixels" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="for_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="switch_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_40">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>