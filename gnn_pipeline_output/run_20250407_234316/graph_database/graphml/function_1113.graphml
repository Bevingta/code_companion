<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-10128</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="git_pkt_parse_line">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="line">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="bufflen">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="pack_pkt">
  <data key="d4">FunctionCall</data>
</node>
<node id="ref_pkt">
  <data key="d4">FunctionCall</data>
</node>
<node id="flush_pkt">
  <data key="d4">FunctionCall</data>
</node>
<node id="parse_len">
  <data key="d4">FunctionCall</data>
</node>
<node id="giterr_clear">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bufflen &gt; 0 &amp;&amp; bufflen &lt; PKT_LEN_SIZE</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len &lt; 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bufflen &gt;= 4 &amp;&amp; !git__prefixcmp(line, "PACK"</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bufflen &gt; 0 &amp;&amp; bufflen &lt; (size_t</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == PKT_LEN_SIZE</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*line == GIT_SIDE_BAND_DATA</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*line == GIT_SIDE_BAND_PROGRESS</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*line == GIT_SIDE_BAND_ERROR</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "ACK"</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "NAK"</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "ERR "</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*line == '#'</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "ok"</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "ng"</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!git__prefixcmp(line, "unpack"</data>
</node>
<edge source="git_pkt_parse_line" target="line">
  <data key="d6">declares</data>
</edge>
<edge source="git_pkt_parse_line" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="git_pkt_parse_line" target="bufflen">
  <data key="d6">declares</data>
</edge>
<edge source="git_pkt_parse_line" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="git_pkt_parse_line" target="pack_pkt">
  <data key="d6">calls</data>
</edge>
<edge source="git_pkt_parse_line" target="ref_pkt">
  <data key="d6">calls</data>
</edge>
<edge source="git_pkt_parse_line" target="flush_pkt">
  <data key="d6">calls</data>
</edge>
<edge source="git_pkt_parse_line" target="parse_len">
  <data key="d6">calls</data>
</edge>
<edge source="git_pkt_parse_line" target="giterr_clear">
  <data key="d6">calls</data>
</edge>
<edge source="git_pkt_parse_line" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="git_pkt_parse_line" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="line" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="line" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="line" target="pack_pkt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="line" target="ref_pkt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="line" target="parse_len">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="line" target="git_pkt_parse_line">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="line" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="line" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="line" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="line" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="line" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="pack_pkt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="ref_pkt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="git_pkt_parse_line">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bufflen" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bufflen" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bufflen" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bufflen" target="git_pkt_parse_line">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bufflen" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>