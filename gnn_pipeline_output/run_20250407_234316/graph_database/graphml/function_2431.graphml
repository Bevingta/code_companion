<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2014-0064</data>
<data key="d3">6.5</data>
<data key="d4">MEDIUM</data>
<node id="path_in">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="isopen">
  <data key="d5">Variable</data>
</node>
<node id="depth">
  <data key="d5">Variable</data>
</node>
<node id="str">
  <data key="d5">Variable</data>
</node>
<node id="s">
  <data key="d5">Variable</data>
</node>
<node id="npts">
  <data key="d5">Variable</data>
</node>
<node id="palloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="PG_RETURN_PATH_P">
  <data key="d5">FunctionCall</data>
</node>
<node id="offsetof">
  <data key="d5">FunctionCall</data>
</node>
<node id="PG_GETARG_CSTRING">
  <data key="d5">FunctionCall</data>
</node>
<node id="SET_VARSIZE">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(npts = pair_count(str, ','</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*s == LDELIM</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(!path_decode(TRUE, npts, s, &amp;isopen, &amp;s, &amp;(path-&gt;p[0]</data>
</node>
<node id="while_3">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">isspace((unsigned char</data>
</node>
<edge source="path_in" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="isopen">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="depth">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="str">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="s">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="npts">
  <data key="d7">declares</data>
</edge>
<edge source="path_in" target="palloc">
  <data key="d7">calls</data>
</edge>
<edge source="path_in" target="PG_RETURN_PATH_P">
  <data key="d7">calls</data>
</edge>
<edge source="path_in" target="offsetof">
  <data key="d7">calls</data>
</edge>
<edge source="path_in" target="PG_GETARG_CSTRING">
  <data key="d7">calls</data>
</edge>
<edge source="path_in" target="SET_VARSIZE">
  <data key="d7">calls</data>
</edge>
<edge source="path_in" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="path_in" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="path_in" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="path_in" target="while_3">
  <data key="d7">contains</data>
</edge>
<edge source="size" target="palloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="size" target="SET_VARSIZE">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="isopen" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="depth" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="depth" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="depth" target="while_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="str" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="while_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="npts" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="npts" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>