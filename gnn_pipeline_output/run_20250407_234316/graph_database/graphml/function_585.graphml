<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-0206</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="dtls1_buffer_record">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d3">Variable</data>
</node>
<node id="SSLerr">
  <data key="d3">FunctionCall</data>
</node>
<node id="OPENSSL_malloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="OPENSSL_free">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="pitem_free">
  <data key="d3">FunctionCall</data>
</node>
<node id="pitem_new">
  <data key="d3">FunctionCall</data>
</node>
<node id="BIO_ctrl">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pqueue_size(queue-&gt;q</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">rdata == NULL || item == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">rdata != NULL</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">item != NULL</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">BIO_dgram_is_sctp(SSL_get_rbio(s</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ssl3_setup_buffers(s</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pqueue_insert(queue-&gt;q, item</data>
</node>
<edge source="dtls1_buffer_record" target="char">
  <data key="d5">declares</data>
</edge>
<edge source="dtls1_buffer_record" target="SSLerr">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="OPENSSL_malloc">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="OPENSSL_free">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="pitem_free">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="pitem_new">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="BIO_ctrl">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="dtls1_buffer_record" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="dtls1_buffer_record" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="char" target="dtls1_buffer_record">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>