<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-5509</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="WritePSDChannels">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="property">
  <data key="d4">Variable</data>
</node>
<node id="compact_pixels">
  <data key="d4">Variable</data>
</node>
<node id="WritePSDChannel">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireCompactPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteCompressionStart">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="WritePSDSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetImageRegistry">
  <data key="d4">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetImageArtifact">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;compression == RLECompression</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">compact_pixels == (unsigned char *</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate == MagickFalse</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;storage_class != PseudoClass</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsImageGray(next_image</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;storage_class == PseudoClass</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsImageGray(next_image</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">next_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">separate != MagickFalse</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">property != (const char *</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mask != (Image *</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mask-&gt;compression == RLECompression</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">compact_pixels == (unsigned char *</data>
</node>
<edge source="WritePSDChannels" target="property">
  <data key="d6">declares</data>
</edge>
<edge source="WritePSDChannels" target="compact_pixels">
  <data key="d6">declares</data>
</edge>
<edge source="WritePSDChannels" target="WritePSDChannel">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="AcquireCompactPixels">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="WriteCompressionStart">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="WritePSDSize">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="GetImageRegistry">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="TellBlob">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="GetImageArtifact">
  <data key="d6">calls</data>
</edge>
<edge source="WritePSDChannels" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="WritePSDChannels" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="property" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="GetImageRegistry">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="property" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="property" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="compact_pixels" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="compact_pixels" target="WritePSDChannel">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="compact_pixels" target="RelinquishMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="compact_pixels" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="compact_pixels" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>