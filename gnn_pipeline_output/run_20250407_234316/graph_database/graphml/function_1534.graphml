<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-8799</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="cssp_read_tsrequest">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d3">Variable</data>
</node>
<node id="tagval">
  <data key="d3">Variable</data>
</node>
<node id="in_uint8s">
  <data key="d3">FunctionCall</data>
</node>
<node id="s_mark_end">
  <data key="d3">FunctionCall</data>
</node>
<node id="tcp_recv">
  <data key="d3">FunctionCall</data>
</node>
<node id="out_uint8p">
  <data key="d3">FunctionCall</data>
</node>
<node id="logger">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s == NULL</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s-&gt;p[0] != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s-&gt;p[1] &lt; 0x80</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s-&gt;p[1] == 0x81</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">s-&gt;p[1] == 0x82</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">token</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pubkey</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ber_in_header(s, &amp;tagval, &amp;length</data>
</node>
<edge source="cssp_read_tsrequest" target="length">
  <data key="d5">declares</data>
</edge>
<edge source="cssp_read_tsrequest" target="tagval">
  <data key="d5">declares</data>
</edge>
<edge source="cssp_read_tsrequest" target="in_uint8s">
  <data key="d5">calls</data>
</edge>
<edge source="cssp_read_tsrequest" target="s_mark_end">
  <data key="d5">calls</data>
</edge>
<edge source="cssp_read_tsrequest" target="tcp_recv">
  <data key="d5">calls</data>
</edge>
<edge source="cssp_read_tsrequest" target="out_uint8p">
  <data key="d5">calls</data>
</edge>
<edge source="cssp_read_tsrequest" target="logger">
  <data key="d5">calls</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="cssp_read_tsrequest" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="length" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="length" target="if_15">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="length" target="in_uint8s">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="length" target="tcp_recv">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="length" target="out_uint8p">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="length" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="length" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_14">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="tagval" target="if_15">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="tagval" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="tagval" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>