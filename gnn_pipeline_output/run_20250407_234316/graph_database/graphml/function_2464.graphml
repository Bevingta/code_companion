<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7398</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="merge_param">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="hkey">
  <data key="d3">Variable</data>
</node>
<node id="zend_hash_index_find">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_find">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_index_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="MAKE_STD_ZVAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_next_index_insert">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="add_assoc_zval_ex">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="fprintf">
  <data key="d3">FunctionCall</data>
</node>
<node id="array_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_print_zval_r">
  <data key="d3">FunctionCall</data>
</node>
<node id="INIT_PZVAL_ARRAY">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_get_current_key_ex">
  <data key="d3">FunctionCall</data>
</node>
<node id="Z_ADDREF_PP">
  <data key="d3">FunctionCall</data>
</node>
<node id="php_http_array_hashkey_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_get_current_data">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(hkey.type == HASH_KEY_IS_STRING &amp;&amp; !zend_hash_exists(params, hkey.str, hkey.len</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hkey.type == HASH_KEY_IS_STRING</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hkey.type == HASH_KEY_IS_STRING</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_PP(ptr</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_PP(test_ptr</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">HASH_KEY_IS_STRING == zend_hash_get_current_key_ex(Z_ARRVAL_PP(zdata_ptr</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">SUCCESS == zend_hash_find(Z_ARRVAL_PP(ptr</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">SUCCESS == zend_hash_index_find(Z_ARRVAL_PP(ptr</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hkey.num</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_PP(ptr</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">HASH_KEY_IS_STRING == zend_hash_get_current_key_ex(Z_ARRVAL_PP(zdata_ptr</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hkey.num</data>
</node>
<node id="while_12">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">Z_TYPE_PP(zdata_ptr</data>
</node>
<node id="while_13">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">Z_TYPE_PP(ptr</data>
</node>
<edge source="merge_param" target="hkey">
  <data key="d5">declares</data>
</edge>
<edge source="merge_param" target="zend_hash_index_find">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_find">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_index_update">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="MAKE_STD_ZVAL">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_next_index_insert">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zval_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="add_assoc_zval_ex">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_update">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="fprintf">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="array_init">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_print_zval_r">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="INIT_PZVAL_ARRAY">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_get_current_key_ex">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="Z_ADDREF_PP">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="php_http_array_hashkey_init">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="zend_hash_get_current_data">
  <data key="d5">calls</data>
</edge>
<edge source="merge_param" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="while_12">
  <data key="d5">contains</data>
</edge>
<edge source="merge_param" target="while_13">
  <data key="d5">contains</data>
</edge>
<edge source="hkey" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="zend_hash_index_find">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hkey" target="zend_hash_find">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hkey" target="zend_hash_index_update">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hkey" target="zend_hash_update">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hkey" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hkey" target="while_12">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>