<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-3062</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="mov_read_dref">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="next">
  <data key="d4">Variable</data>
</node>
<node id="type">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="avio_rb32">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_tell">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_skip">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_r8">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_log">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_rl32">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_dlog">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_read">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_seek">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_rb16">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_mallocz">
  <data key="d4">FunctionCall</data>
</node>
<node id="memmove">
  <data key="d4">FunctionCall</data>
</node>
<node id="FFMIN">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c-&gt;fc-&gt;nb_streams &lt; 1</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entries &gt;= UINT_MAX / sizeof(*sc-&gt;drefs</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!sc-&gt;drefs</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size &lt; 12</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dref-&gt;type == MKTAG('a','l','i','s'</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">url_feof(pb</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len&amp;1</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 2</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!dref-&gt;path</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len &gt; volume_len &amp;&amp; !strncmp(dref-&gt;path, dref-&gt;volume, volume_len</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dref-&gt;path[j] == ':'</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!dref-&gt;dir</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dref-&gt;dir[j] == ':'</data>
</node>
<node id="for_14">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; sc-&gt;drefs_count; i++</data>
</node>
<node id="for_15">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">type = 0; type != -1 &amp;&amp; avio_tell(pb</data>
</node>
<node id="for_16">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; len; j++</data>
</node>
<node id="for_17">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; len; j++</data>
</node>
<edge source="mov_read_dref" target="next">
  <data key="d6">declares</data>
</edge>
<edge source="mov_read_dref" target="type">
  <data key="d6">declares</data>
</edge>
<edge source="mov_read_dref" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="mov_read_dref" target="avio_rb32">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_tell">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_skip">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_r8">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="av_log">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_rl32">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="av_dlog">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="av_free">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_read">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="av_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_seek">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="avio_rb16">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="av_mallocz">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="memmove">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="FFMIN">
  <data key="d6">calls</data>
</edge>
<edge source="mov_read_dref" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="for_14">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="for_15">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="for_16">
  <data key="d6">contains</data>
</edge>
<edge source="mov_read_dref" target="for_17">
  <data key="d6">contains</data>
</edge>
<edge source="next" target="avio_seek">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="next" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next" target="for_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="av_log">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="av_dlog">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="for_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="av_dlog">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="av_mallocz">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="for_14">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>