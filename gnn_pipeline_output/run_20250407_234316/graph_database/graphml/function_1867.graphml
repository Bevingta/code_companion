<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-6076</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="DoCanonicalizeRef">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="code_point">
  <data key="d4">Variable</data>
</node>
<node id="end">
  <data key="d4">FunctionCall</data>
</node>
<node id="length">
  <data key="d4">FunctionCall</data>
</node>
<node id="push_back">
  <data key="d4">FunctionCall</data>
</node>
<node id="AppendEscapedChar">
  <data key="d4">FunctionCall</data>
</node>
<node id="AppendUTF8Value">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadUTFChar">
  <data key="d4">FunctionCall</data>
</node>
<node id="Component">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ref.len &lt; 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">spec[i] == 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">static_cast&lt;UCHAR&gt;(spec[i]</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">static_cast&lt;UCHAR&gt;(spec[i]</data>
</node>
<node id="for_4">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">int i = ref.begin; i &lt; end; i++</data>
</node>
<edge source="DoCanonicalizeRef" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="DoCanonicalizeRef" target="code_point">
  <data key="d6">declares</data>
</edge>
<edge source="DoCanonicalizeRef" target="end">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="length">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="push_back">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="AppendEscapedChar">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="AppendUTF8Value">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="ReadUTFChar">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="Component">
  <data key="d6">calls</data>
</edge>
<edge source="DoCanonicalizeRef" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="DoCanonicalizeRef" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="DoCanonicalizeRef" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="DoCanonicalizeRef" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="DoCanonicalizeRef" target="for_4">
  <data key="d6">contains</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code_point" target="AppendUTF8Value">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code_point" target="ReadUTFChar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code_point" target="for_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="end" target="for_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="end" target="ReadUTFChar">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>