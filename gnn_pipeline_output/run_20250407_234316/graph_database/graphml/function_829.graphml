<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-15277</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="ReadGIFImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d5">Variable</data>
</node>
<node id="number_extensionss">
  <data key="d5">Variable</data>
</node>
<node id="info">
  <data key="d5">Variable</data>
</node>
<node id="name">
  <data key="d5">Variable</data>
</node>
<node id="colormap">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="comments">
  <data key="d5">Variable</data>
</node>
<node id="BitSet">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImageProperties">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyStringInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="BlobToStringInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d5">FunctionCall</data>
</node>
<node id="DecodeImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="ConcatenateString">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireNextImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="else">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImageProfiles">
  <data key="d5">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneImageProperties">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageProperty">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageColorspace">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlobBlock">
  <data key="d5">FunctionCall</data>
</node>
<node id="StringToDouble">
  <data key="d5">FunctionCall</data>
</node>
<node id="MagickMin">
  <data key="d5">FunctionCall</data>
</node>
<node id="LogMagickEvent">
  <data key="d5">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlobLSBShort">
  <data key="d5">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="LocaleNCompare">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneImageProfiles">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireString">
  <data key="d5">FunctionCall</data>
</node>
<node id="ResizeQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(count != 6</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">global_colormap == (unsigned char *</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">BitSet((int</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != (ssize_t</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != 1</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c == (unsigned char</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c == (unsigned char</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != 1</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ssize_t</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count == 0</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ReadBlobBlock(image,buffer</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">loop != MagickFalse</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">info == (unsigned char *</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">block_length == 0</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">info_length &gt; (reserved_length-255</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">info == (unsigned char *</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">profile == (StringInfo *</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">i8bim != MagickFalse</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">icc != MagickFalse</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">iptc != MagickFalse</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">magick != MagickFalse</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">magick == MagickFalse</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">c != (unsigned char</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_count != 0</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">GetNextImageInList(image</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">opacity &gt;= (ssize_t</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;columns == 0</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">AcquireImageColormap(image,image-&gt;colors,exception</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">BitSet((int</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">i == opacity</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">colormap == (unsigned char *</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">count != (ssize_t</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">i == opacity</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;gamma == 1.0</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">IsPixelInfoGray(image-&gt;colormap+i</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_39">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_40">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_41">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image_info-&gt;ping == MagickFalse</data>
</node>
<node id="if_42">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;number_scenes != 0</data>
</node>
<node id="if_43">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;scene &gt;= (image_info-&gt;scene+image_info-&gt;number_scenes-1</data>
</node>
<node id="if_44">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_45">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;columns == 0</data>
</node>
<node id="for_46">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> ; ; </data>
</node>
<node id="for_47">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">length=0; ; length+=count</data>
</node>
<node id="for_48">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">info_length=0; ; </data>
</node>
<node id="for_49">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_50">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_51">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="while_52">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">ReadBlobBlock(image,buffer</data>
</node>
<node id="while_53">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">ReadBlobBlock(image,buffer</data>
</node>
<node id="while_54">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">ReadBlobBlock(image,buffer</data>
</node>
<node id="switch_55">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">c</data>
</node>
<edge source="ReadGIFImage" target="length">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="number_extensionss">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="info">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="name">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="colormap">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="comments">
  <data key="d7">declares</data>
</edge>
<edge source="ReadGIFImage" target="BitSet">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyImageProperties">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="CloseBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="SetImageExtent">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ThrowReaderException">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyStringInfo">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ReadBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="BlobToStringInfo">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyString">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DecodeImage">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyImage">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ConcatenateString">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="AcquireNextImage">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="else">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyImageProfiles">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ScaleCharToQuantum">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="CloneImageProperties">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="SetImageProperty">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="SetImageProgress">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="SetImageColorspace">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ReadBlobBlock">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="StringToDouble">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="MagickMin">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="LogMagickEvent">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="CopyMagickString">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="AcquireImage">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ReadBlobLSBShort">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="OpenBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="LocaleNCompare">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="CloneImageProfiles">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ReadBlobByte">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="AcquireString">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="ResizeQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="SyncNextImageInList">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="DestroyImageList">
  <data key="d7">calls</data>
</edge>
<edge source="ReadGIFImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_39">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_40">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_41">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_42">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_43">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_44">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="if_45">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_46">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_47">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_48">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_49">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_50">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="for_51">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="while_52">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="while_53">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="while_54">
  <data key="d7">contains</data>
</edge>
<edge source="ReadGIFImage" target="switch_55">
  <data key="d7">contains</data>
</edge>
<edge source="length" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="for_47">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="for_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="ReadBlobBlock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="while_52">
  <data key="d7">used_in_body</data>
</edge>
<edge source="length" target="switch_55">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="while_53">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_extensionss" target="switch_55">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_42">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="if_43">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="info" target="for_48">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="AcquireQuantumMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="BlobToStringInfo">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="assert">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="AcquireNextImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="ReadBlobBlock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="ReadGIFImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="AcquireImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="OpenBlob">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="ResizeQuantumMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="info" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="if_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="while_53">
  <data key="d7">used_in_body</data>
</edge>
<edge source="info" target="switch_55">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="CopyMagickString">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="name" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="if_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="while_53">
  <data key="d7">used_in_body</data>
</edge>
<edge source="name" target="switch_55">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="colormap" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="colormap" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="colormap" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="colormap" target="AcquireQuantumMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="colormap" target="if_30">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="if_31">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="if_33">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="if_34">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="if_35">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="for_49">
  <data key="d7">used_in_body</data>
</edge>
<edge source="colormap" target="for_50">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_31">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_33">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_35">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_39">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_42">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_43">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_44">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_45">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_49">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_50">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_52">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_53">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_54">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="comments" target="DestroyString">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="comments" target="ConcatenateString">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="comments" target="SetImageProperty">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="comments" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="for_46">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="for_47">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="while_52">
  <data key="d7">used_in_body</data>
</edge>
<edge source="comments" target="switch_55">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>