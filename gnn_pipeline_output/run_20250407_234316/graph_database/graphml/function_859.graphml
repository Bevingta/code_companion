<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-14032</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="mbedtls_x509_crt_verify_with_profile">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="pk_type">
  <data key="d3">Variable</data>
</node>
<node id="pathlen">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="cn_len">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="cn">
  <data key="d3">Variable</data>
</node>
<node id="x509_crt_verify_child">
  <data key="d3">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d3">FunctionCall</data>
</node>
<node id="x509_crt_verify_top">
  <data key="d3">FunctionCall</data>
</node>
<node id="mbedtls_pk_get_type">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> profile == NULL </data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> cn != NULL </data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> crt-&gt;ext_types &amp; MBEDTLS_X509_EXT_SUBJECT_ALT_NAME </data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> cur-&gt;buf.len == cn_len &amp;&amp;
                    x509_memcasecmp( cn, cur-&gt;buf.p, cn_len </data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> cur-&gt;buf.len &gt; 2 &amp;&amp;
                    memcmp( cur-&gt;buf.p, "*.", 2 </data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> cur == NULL </data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> MBEDTLS_OID_CMP( MBEDTLS_OID_AT_CN, &amp;name-&gt;oid </data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> name-&gt;val.len == cn_len &amp;&amp;
                        x509_memcasecmp( name-&gt;val.p, cn, cn_len </data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> name-&gt;val.len &gt; 2 &amp;&amp;
                        memcmp( name-&gt;val.p, "*.", 2 </data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> name == NULL </data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> x509_profile_check_pk_alg( profile, pk_type </data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> x509_profile_check_key( profile, pk_type, &amp;crt-&gt;pk </data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> x509_crt_check_parent( crt, parent, 0, pathlen == 0 </data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> parent != NULL </data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> ret != 0 </data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> x509_crt_check_parent( crt, parent, 0, pathlen == 0 </data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> parent != NULL </data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> ret != 0 </data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> ret != 0 </data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> *flags != 0 </data>
</node>
<node id="for_20">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> parent = trust_ca; parent != NULL; parent = parent-&gt;next </data>
</node>
<node id="for_21">
  <data key="d3">ControlStructure_for</data>
  <data key="d4"> parent = crt-&gt;next; parent != NULL; parent = parent-&gt;next </data>
</node>
<node id="while_22">
  <data key="d3">ControlStructure_while</data>
  <data key="d4"> cur != NULL </data>
</node>
<node id="while_23">
  <data key="d3">ControlStructure_while</data>
  <data key="d4"> name != NULL </data>
</node>
<edge source="mbedtls_x509_crt_verify_with_profile" target="pk_type">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="pathlen">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="cn_len">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="cn">
  <data key="d5">declares</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="x509_crt_verify_child">
  <data key="d5">calls</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="strlen">
  <data key="d5">calls</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="x509_crt_verify_top">
  <data key="d5">calls</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="mbedtls_pk_get_type">
  <data key="d5">calls</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="for_20">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="for_21">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="while_22">
  <data key="d5">contains</data>
</edge>
<edge source="mbedtls_x509_crt_verify_with_profile" target="while_23">
  <data key="d5">contains</data>
</edge>
<edge source="pk_type" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pk_type" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pathlen" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="x509_crt_verify_child">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pathlen" target="x509_crt_verify_top">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pathlen" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="for_20">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pathlen" target="for_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_18">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ret" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="for_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cn_len" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cn_len" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="while_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn_len" target="while_23">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_19">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="mbedtls_x509_crt_verify_with_profile">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="x509_crt_verify_child">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="x509_crt_verify_top">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="for_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cn" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="cn" target="mbedtls_x509_crt_verify_with_profile">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cn" target="strlen">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="cn" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="while_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="cn" target="while_23">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>