<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-3233</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="llcp_sock_recvmsg">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="msg">
  <data key="d3">Variable</data>
</node>
<node id="len">
  <data key="d3">Variable</data>
</node>
<node id="ui_cb">
  <data key="d3">Variable</data>
</node>
<node id="noblock">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="iocb">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="sockaddr">
  <data key="d3">Variable</data>
</node>
<node id="skb_pull">
  <data key="d3">FunctionCall</data>
</node>
<node id="pr_debug">
  <data key="d3">FunctionCall</data>
</node>
<node id="lock_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d3">FunctionCall</data>
</node>
<node id="skb_recv_datagram">
  <data key="d3">FunctionCall</data>
</node>
<node id="pr_err">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree_skb">
  <data key="d3">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d3">FunctionCall</data>
</node>
<node id="skb_queue_head">
  <data key="d3">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_recv_timestamp">
  <data key="d3">FunctionCall</data>
</node>
<node id="nfc_llcp_ui_skb_cb">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_state == LLCP_CLOSED &amp;&amp;
	    skb_queue_empty(&amp;sk-&gt;sk_receive_queue</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">flags &amp; (MSG_OOB</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!skb</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_shutdown &amp; RCV_SHUTDOWN</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">skb_copy_datagram_iovec(cskb, 0, msg-&gt;msg_iov, copied</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!(flags &amp; MSG_PEEK</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_type == SOCK_DGRAM &amp;&amp; msg-&gt;msg_name</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!(flags &amp; MSG_PEEK</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_type == SOCK_STREAM ||
		    sk-&gt;sk_type == SOCK_DGRAM ||
		    sk-&gt;sk_type == SOCK_RAW</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">skb-&gt;len</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sk-&gt;sk_type == SOCK_SEQPACKET &amp;&amp; (flags &amp; MSG_TRUNC</data>
</node>
<edge source="llcp_sock_recvmsg" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="msg">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="len">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="ui_cb">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="noblock">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="iocb">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="sockaddr">
  <data key="d5">declares</data>
</edge>
<edge source="llcp_sock_recvmsg" target="skb_pull">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="pr_debug">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="lock_sock">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="sizeof">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="skb_recv_datagram">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="pr_err">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="kfree_skb">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="min_t">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="skb_queue_head">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="release_sock">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="sock_recv_timestamp">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="nfc_llcp_ui_skb_cb">
  <data key="d5">calls</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="llcp_sock_recvmsg" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="err" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="pr_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="msg" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="msg" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="msg" target="sock_recv_timestamp">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="msg" target="llcp_sock_recvmsg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="msg" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="pr_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="min_t">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="llcp_sock_recvmsg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ui_cb" target="pr_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ui_cb" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ui_cb" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="noblock" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="pr_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="pr_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="llcp_sock_recvmsg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iocb" target="llcp_sock_recvmsg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="skb_pull">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="pr_debug">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="pr_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="kfree_skb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="skb_queue_head">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_recv_timestamp">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="nfc_llcp_ui_skb_cb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="flags" target="skb_recv_datagram">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="llcp_sock_recvmsg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="flags" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sockaddr" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sockaddr" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sockaddr" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>