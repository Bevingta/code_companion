<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-9294</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="cstm">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="emitline">
  <data key="d3">FunctionCall</data>
</node>
<node id="breaktarget">
  <data key="d3">FunctionCall</data>
</node>
<node id="cvarinit">
  <data key="d3">FunctionCall</data>
</node>
<node id="emit">
  <data key="d3">FunctionCall</data>
</node>
<node id="cswitch">
  <data key="d3">FunctionCall</data>
</node>
<node id="continuetarget">
  <data key="d3">FunctionCall</data>
</node>
<node id="emitjump">
  <data key="d3">FunctionCall</data>
</node>
<node id="ctrycatch">
  <data key="d3">FunctionCall</data>
</node>
<node id="cassignforin">
  <data key="d3">FunctionCall</data>
</node>
<node id="label">
  <data key="d3">FunctionCall</data>
</node>
<node id="ctryfinally">
  <data key="d3">FunctionCall</data>
</node>
<node id="returntarget">
  <data key="d3">FunctionCall</data>
</node>
<node id="labeljumps">
  <data key="d3">FunctionCall</data>
</node>
<node id="addjump">
  <data key="d3">FunctionCall</data>
</node>
<node id="cstmlist">
  <data key="d3">FunctionCall</data>
</node>
<node id="cexp">
  <data key="d3">FunctionCall</data>
</node>
<node id="here">
  <data key="d3">FunctionCall</data>
</node>
<node id="emitjumpto">
  <data key="d3">FunctionCall</data>
</node>
<node id="cexit">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">F-&gt;script</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;c</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;type == STM_FOR_VAR</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;a</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;b</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;c</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">end</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">F-&gt;script</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!isloop(stm-&gt;type</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;a</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!target</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!target</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;a</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!target</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!target</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;a</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!target</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;b &amp;&amp; stm-&gt;c</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">stm-&gt;d</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">F-&gt;script</data>
</node>
<node id="while_20">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">stm-&gt;type == STM_LABEL</data>
</node>
<node id="switch_21">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">stm-&gt;type</data>
</node>
<node id="switch_22">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">J, F, stm-&gt;a, stm-&gt;b</data>
</node>
<edge source="cstm" target="emitline">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="breaktarget">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cvarinit">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="emit">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cswitch">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="continuetarget">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="emitjump">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="ctrycatch">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cassignforin">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="label">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="ctryfinally">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="returntarget">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="labeljumps">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="addjump">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cstmlist">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cexp">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="here">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="emitjumpto">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="cexit">
  <data key="d5">calls</data>
</edge>
<edge source="cstm" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="while_20">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="switch_21">
  <data key="d5">contains</data>
</edge>
<edge source="cstm" target="switch_22">
  <data key="d5">contains</data>
</edge>
</graph></graphml>