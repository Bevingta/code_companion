<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-9923</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="pax_decode_header">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="dst">
  <data key="d5">Variable</data>
</node>
<node id="file">
  <data key="d5">Variable</data>
</node>
<node id="nbuf">
  <data key="d5">Variable</data>
</node>
<node id="start">
  <data key="d5">Variable</data>
</node>
<node id="sp">
  <data key="d5">Variable</data>
</node>
<node id="endp">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="u">
  <data key="d5">Variable</data>
</node>
<node id="find_next_block">
  <data key="d5">FunctionCall</data>
</node>
<node id="xcalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="COPY_BUF">
  <data key="d5">FunctionCall</data>
</node>
<node id="sparse_add_map">
  <data key="d5">FunctionCall</data>
</node>
<node id="ERROR">
  <data key="d5">FunctionCall</data>
</node>
<node id="set_next_block_after">
  <data key="d5">FunctionCall</data>
</node>
<node id="current_block_ordinal">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">file-&gt;stat_info-&gt;sparse_major &gt; 0</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">dst == buf + UINTMAX_STRSIZE_BOUND -1</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">src == endp</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!decode_num (&amp;u, nbuf, TYPE_MAXIMUM (size_t</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!decode_num (&amp;u, nbuf, TYPE_MAXIMUM (off_t</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!decode_num (&amp;u, nbuf, TYPE_MAXIMUM (off_t</data>
</node>
<node id="for_6">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; file-&gt;stat_info-&gt;sparse_map_size; i++</data>
</node>
<node id="while_7">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">*dst++ != '\n'</data>
</node>
<node id="while_8">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">0</data>
</node>
<edge source="pax_decode_header" target="dst">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="file">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="nbuf">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="start">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="sp">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="endp">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="u">
  <data key="d7">declares</data>
</edge>
<edge source="pax_decode_header" target="find_next_block">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="xcalloc">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="COPY_BUF">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="sparse_add_map">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="ERROR">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="set_next_block_after">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="current_block_ordinal">
  <data key="d7">calls</data>
</edge>
<edge source="pax_decode_header" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="for_6">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="while_7">
  <data key="d7">contains</data>
</edge>
<edge source="pax_decode_header" target="while_8">
  <data key="d7">contains</data>
</edge>
<edge source="dst" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="dst" target="while_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="dst" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="xcalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="sparse_add_map">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="pax_decode_header">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="file" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="while_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="file" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nbuf" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nbuf" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="nbuf" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="nbuf" target="COPY_BUF">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="nbuf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nbuf" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nbuf" target="while_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nbuf" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="start" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sp" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sp" target="for_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sp" target="xcalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sp" target="sparse_add_map">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sp" target="ERROR">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sp" target="pax_decode_header">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="sp" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sp" target="while_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sp" target="while_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="endp" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="endp" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="u" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="u" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="u" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="u" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>