<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-8898</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="WriteImages">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="filename">
  <data key="d4">Variable</data>
</node>
<node id="DestroyImageInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloneImageInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireExceptionInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyExceptionInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetImageListLength">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetFirstImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">images-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">filename != (const char *</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*write_info-&gt;magick == '\0'</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;scene &gt;= GetNextImageInList(p</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_images != 1</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_images != 1</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">write_info-&gt;adjoin != MagickFalse</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">number_images != 1</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">proceed == MagickFalse</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">p=images; p != (Image *</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5"> ; GetNextImageInList(p</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">p=images; p != (Image *</data>
</node>
<node id="for_12">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">p=images; p != (Image *</data>
</node>
<edge source="WriteImages" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="WriteImages" target="filename">
  <data key="d6">declares</data>
</edge>
<edge source="WriteImages" target="DestroyImageInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="CloneImageInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="AcquireExceptionInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="SetImageInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="CopyMagickString">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="DestroyExceptionInfo">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="GetImageListLength">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="GetFirstImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="GetNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="WriteImage">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="WriteImages" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="WriteImages" target="for_12">
  <data key="d6">contains</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="filename" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="filename" target="WriteImages">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="filename" target="CopyMagickString">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>