<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-8655</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="packet_setsockopt">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="level">
  <data key="d3">Variable</data>
</node>
<node id="__user">
  <data key="d3">Variable</data>
</node>
<node id="len">
  <data key="d3">Variable</data>
</node>
<node id="int">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="sock">
  <data key="d3">Variable</data>
</node>
<node id="optname">
  <data key="d3">Variable</data>
</node>
<node id="mreq">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="po">
  <data key="d3">Variable</data>
</node>
<node id="val">
  <data key="d3">Variable</data>
</node>
<node id="packet_mc_drop">
  <data key="d3">FunctionCall</data>
</node>
<node id="fanout_add">
  <data key="d3">FunctionCall</data>
</node>
<node id="fanout_set_data">
  <data key="d3">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="packet_set_ring">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkt_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">level != SOL_PACKET</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">len &lt; sizeof(struct packet_mreq</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">len &gt; sizeof(mreq</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;mreq, optval, len</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">len &lt; (mreq.mr_alen + offsetof(struct packet_mreq, mr_address</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optname == PACKET_ADD_MEMBERSHIP</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; len</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;req_u.req, optval, len</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;rx_ring.pg_vec || po-&gt;tx_ring.pg_vec</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;rx_ring.pg_vec || po-&gt;tx_ring.pg_vec</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;rx_ring.pg_vec || po-&gt;tx_ring.pg_vec</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; sizeof(val</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_21">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; sizeof(val</data>
</node>
<node id="if_22">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_23">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sock-&gt;type != SOCK_RAW</data>
</node>
<node id="if_24">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;rx_ring.pg_vec || po-&gt;tx_ring.pg_vec</data>
</node>
<node id="if_25">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen &lt; sizeof(val</data>
</node>
<node id="if_26">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_27">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_28">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_29">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_30">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_31">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!po-&gt;fanout</data>
</node>
<node id="if_32">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_33">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;rx_ring.pg_vec || po-&gt;tx_ring.pg_vec</data>
</node>
<node id="if_34">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="if_35">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">optlen != sizeof(val</data>
</node>
<node id="if_36">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;val, optval, sizeof(val</data>
</node>
<node id="switch_37">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">optname</data>
</node>
<node id="switch_38">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">po-&gt;tp_version</data>
</node>
<node id="switch_39">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">val</data>
</node>
<edge source="packet_setsockopt" target="level">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="__user">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="len">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="int">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="sock">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="optname">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="mreq">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="po">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="val">
  <data key="d5">declares</data>
</edge>
<edge source="packet_setsockopt" target="packet_mc_drop">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="fanout_add">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="fanout_set_data">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="sizeof">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="packet_set_ring">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="pkt_sk">
  <data key="d5">calls</data>
</edge>
<edge source="packet_setsockopt" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_20">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_21">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_22">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_23">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_24">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_25">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_26">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_27">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_28">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_29">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_30">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_31">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_32">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_33">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_34">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_35">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="if_36">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="switch_37">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="switch_38">
  <data key="d5">contains</data>
</edge>
<edge source="packet_setsockopt" target="switch_39">
  <data key="d5">contains</data>
</edge>
<edge source="level" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="level" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="__user" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_8">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_16">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_19">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_21">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_25">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_27">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_29">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_32">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_35">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="fanout_set_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="len" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="len" target="switch_38">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="int" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_20">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_23">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_25">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_26">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_27">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_28">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_31">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_32">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_33">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="if_34">
  <data key="d5">used_in_body</data>
</edge>
<edge source="int" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_23">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sock" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sock" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="if_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sock" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="packet_set_ring">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="optname" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="optname" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="optname" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mreq" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mreq" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mreq" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mreq" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mreq" target="packet_mc_drop">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mreq" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mreq" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mreq" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mreq" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="packet_mc_drop">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="fanout_add">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="packet_set_ring">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="pkt_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_27">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_28">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_31">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_33">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="switch_38">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="po" target="fanout_set_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="po" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_20">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_23">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_25">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_26">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_29">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_30">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_32">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_34">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="switch_39">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_15">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_16">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_18">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_19">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_20">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_21">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_22">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_25">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_26">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_27">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_28">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_29">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_30">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_32">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_34">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_35">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="if_36">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="val" target="switch_39">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="fanout_add">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="fanout_set_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="packet_setsockopt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="val" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_17">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_23">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_24">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_31">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="if_33">
  <data key="d5">used_in_body</data>
</edge>
<edge source="val" target="switch_37">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>