<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-1737</data>
<data key="d2">7.2</data>
<data key="d3">HIGH</data>
<node id="raw_cmd_copyin">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="cmd">
  <data key="d4">Variable</data>
</node>
<node id="__user">
  <data key="d4">Variable</data>
</node>
<node id="ptr">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="copy_from_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="fd_dma_mem_alloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="fallback_on_nodma_alloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="fd_copyin">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ptr</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr-&gt;cmd_count &gt; 33</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr-&gt;flags &amp; (FD_RAW_READ | FD_RAW_WRITE</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr-&gt;length &lt;= 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ptr-&gt;kernel_data</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr-&gt;flags &amp; FD_RAW_WRITE</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ptr-&gt;flags &amp; FD_RAW_MORE</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 16; i++</data>
</node>
<edge source="raw_cmd_copyin" target="cmd">
  <data key="d6">declares</data>
</edge>
<edge source="raw_cmd_copyin" target="__user">
  <data key="d6">declares</data>
</edge>
<edge source="raw_cmd_copyin" target="ptr">
  <data key="d6">declares</data>
</edge>
<edge source="raw_cmd_copyin" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="raw_cmd_copyin" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="raw_cmd_copyin" target="copy_from_user">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="kmalloc">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="fd_dma_mem_alloc">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="fallback_on_nodma_alloc">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="fd_copyin">
  <data key="d6">calls</data>
</edge>
<edge source="raw_cmd_copyin" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="raw_cmd_copyin" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="cmd" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="cmd" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cmd" target="kmalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cmd" target="raw_cmd_copyin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="__user" target="raw_cmd_copyin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="fd_dma_mem_alloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="fallback_on_nodma_alloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="fd_copyin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ptr" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ptr" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>