<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-11592</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="jswrap_graphics_createArrayBuffer">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="height">
  <data key="d3">Variable</data>
</node>
<node id="width">
  <data key="d3">Variable</data>
</node>
<node id="bpp">
  <data key="d3">Variable</data>
</node>
<node id="jsExceptionHere">
  <data key="d3">FunctionCall</data>
</node>
<node id="jsvUnLock">
  <data key="d3">FunctionCall</data>
</node>
<node id="jspNewObject">
  <data key="d3">FunctionCall</data>
</node>
<node id="graphicsSetVar">
  <data key="d3">FunctionCall</data>
</node>
<node id="lcdInit_ArrayBuffer">
  <data key="d3">FunctionCall</data>
</node>
<node id="jsWarn">
  <data key="d3">FunctionCall</data>
</node>
<node id="jsvObjectGetChild">
  <data key="d3">FunctionCall</data>
</node>
<node id="graphicsStructInit">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">width&lt;=0 || height&lt;=0 || width&gt;32767 || height&gt;32767</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!isValidBPP(bpp</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!parent</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">jsvIsObject(options</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">jsvGetBoolAndUnLock(jsvObjectGetChild(options, "zigzag", 0</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">jsvGetBoolAndUnLock(jsvObjectGetChild(options, "msb", 0</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">jsvGetBoolAndUnLock(jsvObjectGetChild(options, "vertical_byte", 0</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">gfx.data.bpp==1</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">colorv</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">jsvIsStringEqual(colorv, "rgb"</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!jsvIsStringEqual(colorv, "brg"</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!jsvIsStringEqual(colorv, "bgr"</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!jsvIsStringEqual(colorv, "gbr"</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!jsvIsStringEqual(colorv, "grb"</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!jsvIsStringEqual(colorv, "rbg"</data>
</node>
<edge source="jswrap_graphics_createArrayBuffer" target="height">
  <data key="d5">declares</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="width">
  <data key="d5">declares</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="bpp">
  <data key="d5">declares</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="jsExceptionHere">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="jsvUnLock">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="jspNewObject">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="graphicsSetVar">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="lcdInit_ArrayBuffer">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="jsWarn">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="jsvObjectGetChild">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="graphicsStructInit">
  <data key="d5">calls</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="jswrap_graphics_createArrayBuffer" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="height" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="height" target="jswrap_graphics_createArrayBuffer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="width" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="width" target="jswrap_graphics_createArrayBuffer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="bpp" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="bpp" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="bpp" target="jswrap_graphics_createArrayBuffer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="bpp" target="jsWarn">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="bpp" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="bpp" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="bpp" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="bpp" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="bpp" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>