<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-15139</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadXWDImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">Variable</data>
</node>
<node id="extent">
  <data key="d4">Variable</data>
</node>
<node id="pixel">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="x_status">
  <data key="d4">Variable</data>
</node>
<node id="x">
  <data key="d4">Variable</data>
</node>
<node id="color">
  <data key="d4">Variable</data>
</node>
<node id="lsb_first">
  <data key="d4">Variable</data>
</node>
<node id="comment">
  <data key="d4">Variable</data>
</node>
<node id="ConstrainColormapIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleShortToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="QueueAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProperty">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelGreen">
  <data key="d4">FunctionCall</data>
</node>
<node id="XInitImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelChannels">
  <data key="d4">FunctionCall</data>
</node>
<node id="MSBOrderShort">
  <data key="d4">FunctionCall</data>
</node>
<node id="CheckOverflowException">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelViaPixelInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelRed">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelBlue">
  <data key="d4">FunctionCall</data>
</node>
<node id="XGetPixel">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="MSBOrderLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != sz_XWDheader</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(int</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.file_version != XWD_FILE_VERSION</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.header_size &lt; sz_XWDheader</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.bits_per_pixel != 1</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(header.bits_per_pixel &lt; 1</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(header.bits_per_pixel != 16</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.pixmap_depth != 1</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(header.pixmap_depth &lt; 1</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors &gt; 65535</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((header.bitmap_pad % 8</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">comment == (char *</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ximage == (XImage *</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ximage-&gt;width &lt; 0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ximage-&gt;width &gt; 65535</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ximage-&gt;bits_per_pixel &gt; 32</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">x_status == 0</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colors == (XColor *</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != sz_XWDColor</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">color.flags != 0</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(int</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckOverflowException(length,ximage-&gt;bytes_per_line,ximage-&gt;height</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ximage-&gt;format != ZPixmap</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckOverflowException(length,extent,ximage-&gt;depth</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ximage-&gt;data == (char *</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count != (ssize_t</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(header.ncolors == 0U</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;ping == MagickFalse</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image-&gt;colors != 0</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">red_mask != 0</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">green_mask != 0</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">blue_mask != 0</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">AcquireImageColormap(image,image-&gt;colors,exception</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header.ncolors != 0</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="for_55">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_56">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_57">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_58">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_59">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_60">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_61">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_62">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_63">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_64">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(red_mask != 0</data>
</node>
<node id="while_65">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(green_mask != 0</data>
</node>
<node id="while_66">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(blue_mask != 0</data>
</node>
<node id="switch_67">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.visual_class</data>
</node>
<node id="switch_68">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.pixmap_format</data>
</node>
<node id="switch_69">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.bitmap_pad</data>
</node>
<node id="switch_70">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.bitmap_unit</data>
</node>
<node id="switch_71">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.byte_order</data>
</node>
<node id="switch_72">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">header.bitmap_bit_order</data>
</node>
<node id="switch_73">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">image-&gt;storage_class</data>
</node>
<edge source="ReadXWDImage" target="length">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="extent">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="pixel">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="x_status">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="x">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="color">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="lsb_first">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="comment">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXWDImage" target="ConstrainColormapIndex">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="ScaleShortToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="DestroyString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="QueueAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetImageProperty">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetPixelGreen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="XInitImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="GetPixelChannels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="MSBOrderShort">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="CheckOverflowException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetPixelViaPixelInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetPixelRed">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetPixelBlue">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="XGetPixel">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="SetPixelIndex">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="AcquireMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="MSBOrderLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXWDImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_55">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_56">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_57">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_58">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_59">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_60">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_61">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_62">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="for_63">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="while_64">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="while_65">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="while_66">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_67">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_68">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_69">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_70">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_71">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_72">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXWDImage" target="switch_73">
  <data key="d6">contains</data>
</edge>
<edge source="length" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="AcquireQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="ReadBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="CheckOverflowException">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extent" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="extent" target="CheckOverflowException">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="extent" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extent" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pixel" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pixel" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pixel" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pixel" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="for_60">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pixel" target="switch_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_56">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_57">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_68">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x_status" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="for_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="x" target="switch_68">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="if_53">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="color" target="RelinquishMagickMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="ScaleShortToQuantum">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="SetPixelGreen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="SetPixelViaPixelInfo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="SetPixelRed">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="SetPixelBlue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="color" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="for_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="for_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="for_60">
  <data key="d6">used_in_body</data>
</edge>
<edge source="color" target="switch_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="lsb_first" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comment" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comment" target="AcquireQuantumMemory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="DestroyString">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="comment" target="SetImageProperty">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>