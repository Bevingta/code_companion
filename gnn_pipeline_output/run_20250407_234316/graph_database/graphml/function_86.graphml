<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-9745</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="parse_encoding">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="specification">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_THROW">
  <data key="d4">FunctionCall</data>
</node>
<node id="T1_ToInt">
  <data key="d4">FunctionCall</data>
</node>
<node id="T1_Add_Table">
  <data key="d4">FunctionCall</data>
</node>
<node id="T1_Skip_Spaces">
  <data key="d4">FunctionCall</data>
</node>
<node id="T1_Skip_PS_Token">
  <data key="d4">FunctionCall</data>
</node>
<node id="FT_TRACE6">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur &gt;= limit </data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_isdigit( *cur </data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == '[' </data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> parser-&gt;root.cursor &gt;= limit </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> FT_NEW_ARRAY( encode-&gt;char_index, count </data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == 'd' &amp;&amp; cur + 3 &lt; limit </data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> cur[1] == 'e'         &amp;&amp;
               cur[2] == 'f'         &amp;&amp;
               IS_PS_DELIM( cur[3] </data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> *cur == ']' </data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ft_isdigit( *cur </data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> only_immediates </data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> parser-&gt;root.cursor &gt;= limit </data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> parser-&gt;root.error </data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> parser-&gt;root.error </data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> only_immediates </data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> parser-&gt;root.error </data>
</node>
<node id="for_15">
  <data key="d4">ControlStructure_for</data>
  <data key="d5"> n = 0; n &lt; count; n++ </data>
</node>
<node id="while_16">
  <data key="d4">ControlStructure_while</data>
  <data key="d5"> parser-&gt;root.cursor &lt; limit </data>
</node>
<edge source="parse_encoding" target="specification">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="FT_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="FT_THROW">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="T1_ToInt">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="T1_Add_Table">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="T1_Skip_Spaces">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="T1_Skip_PS_Token">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="FT_TRACE6">
  <data key="d6">calls</data>
</edge>
<edge source="parse_encoding" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="for_15">
  <data key="d6">contains</data>
</edge>
<edge source="parse_encoding" target="while_16">
  <data key="d6">contains</data>
</edge>
</graph></graphml>