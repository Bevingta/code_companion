<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-1160</data>
<data key="d1">2.1</data>
<data key="d2">LOW</data>
<node id="tpm_open">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="chip">
  <data key="d3">Variable</data>
</node>
<node id="file">
  <data key="d3">Variable</data>
</node>
<node id="inode">
  <data key="d3">Variable</data>
</node>
<node id="minor">
  <data key="d3">Variable</data>
</node>
<node id="list_for_each_entry_rcu">
  <data key="d3">FunctionCall</data>
</node>
<node id="iminor">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="dev_dbg">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="atomic_set">
  <data key="d3">FunctionCall</data>
</node>
<node id="clear_bit">
  <data key="d3">FunctionCall</data>
</node>
<node id="get_device">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="put_device">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pos-&gt;vendor.miscdev.minor == minor</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!chip</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">test_and_set_bit(0, &amp;chip-&gt;is_open</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">chip-&gt;data_buffer == NULL</data>
</node>
<edge source="tpm_open" target="chip">
  <data key="d5">declares</data>
</edge>
<edge source="tpm_open" target="file">
  <data key="d5">declares</data>
</edge>
<edge source="tpm_open" target="inode">
  <data key="d5">declares</data>
</edge>
<edge source="tpm_open" target="minor">
  <data key="d5">declares</data>
</edge>
<edge source="tpm_open" target="list_for_each_entry_rcu">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="iminor">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="rcu_read_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="dev_dbg">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="kmalloc">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="atomic_set">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="clear_bit">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="get_device">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="rcu_read_lock">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="put_device">
  <data key="d5">calls</data>
</edge>
<edge source="tpm_open" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="tpm_open" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="tpm_open" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="tpm_open" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="chip" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="chip" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="chip" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="chip" target="list_for_each_entry_rcu">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="dev_dbg">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="atomic_set">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="clear_bit">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="get_device">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="put_device">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="chip" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="file" target="tpm_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="iminor">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="tpm_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="minor" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>