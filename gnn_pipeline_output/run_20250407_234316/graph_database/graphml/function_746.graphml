<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-8962</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="sg_common_write">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="hp">
  <data key="d4">Variable</data>
</node>
<node id="timeout">
  <data key="d4">Variable</data>
</node>
<node id="blocking">
  <data key="d4">Variable</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="kref_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="sg_start_req">
  <data key="d4">FunctionCall</data>
</node>
<node id="sg_finish_rem_req">
  <data key="d4">FunctionCall</data>
</node>
<node id="sg_rq_end_io">
  <data key="d4">FunctionCall</data>
</node>
<node id="SCSI_LOG_TIMEOUT">
  <data key="d4">FunctionCall</data>
</node>
<node id="jiffies_to_msecs">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">k</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">atomic_read(&amp;sdp-&gt;detaching</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">srp-&gt;bio</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hp-&gt;interface_id != '\0' &amp;&amp;	/* v3 (or later</data>
</node>
<edge source="sg_common_write" target="hp">
  <data key="d6">declares</data>
</edge>
<edge source="sg_common_write" target="timeout">
  <data key="d6">declares</data>
</edge>
<edge source="sg_common_write" target="blocking">
  <data key="d6">declares</data>
</edge>
<edge source="sg_common_write" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="sg_common_write" target="kref_get">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="sg_start_req">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="sg_finish_rem_req">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="sg_rq_end_io">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="SCSI_LOG_TIMEOUT">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="jiffies_to_msecs">
  <data key="d6">calls</data>
</edge>
<edge source="sg_common_write" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="sg_common_write" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="sg_common_write" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="sg_common_write" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="hp" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeout" target="sg_common_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="blocking" target="sg_common_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="char" target="sg_common_write">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>