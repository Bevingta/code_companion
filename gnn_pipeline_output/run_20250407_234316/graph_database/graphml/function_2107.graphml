<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-6539</data>
<data key="d2">1.9</data>
<data key="d3">LOW</data>
<node id="dev_ifconf">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="net">
  <data key="d4">Variable</data>
</node>
<node id="__user">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="ifc32">
  <data key="d4">Variable</data>
</node>
<node id="ifc">
  <data key="d4">Variable</data>
</node>
<node id="dev_ioctl">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="compat_alloc_user_space">
  <data key="d4">FunctionCall</data>
</node>
<node id="compat_ptr">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;ifc32, uifc32, sizeof(struct compat_ifconf</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ifc32.ifcbuf == 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_in_user(ifr, ifr32, sizeof(struct compat_ifreq</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(uifc, &amp;ifc, sizeof(struct ifconf</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;ifc, uifc, sizeof(struct ifconf</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_in_user(ifr32, ifr, sizeof(struct compat_ifreq</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ifc32.ifcbuf == 0</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(uifc32, &amp;ifc32, sizeof(struct compat_ifconf</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; ifc32.ifc_len; i += sizeof(struct compat_ifreq</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0, j = 0;
	     i + sizeof(struct compat_ifreq</data>
</node>
<edge source="dev_ifconf" target="net">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="__user">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="ifc32">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="ifc">
  <data key="d6">declares</data>
</edge>
<edge source="dev_ifconf" target="dev_ioctl">
  <data key="d6">calls</data>
</edge>
<edge source="dev_ifconf" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="dev_ifconf" target="compat_alloc_user_space">
  <data key="d6">calls</data>
</edge>
<edge source="dev_ifconf" target="compat_ptr">
  <data key="d6">calls</data>
</edge>
<edge source="dev_ifconf" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="dev_ifconf" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="net" target="dev_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="net" target="dev_ifconf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="__user" target="dev_ifconf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc32" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc32" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc32" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc32" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc32" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc32" target="dev_ifconf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc32" target="compat_ptr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc32" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ifc" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ifc" target="dev_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc" target="compat_alloc_user_space">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc" target="dev_ifconf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc" target="compat_ptr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ifc" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>