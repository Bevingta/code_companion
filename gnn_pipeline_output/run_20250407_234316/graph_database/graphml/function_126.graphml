<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2010-2520</data>
<data key="d1">5.1</data>
<data key="d2">MEDIUM</data>
<node id="Ins_IUP">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="point">
  <data key="d3">FunctionCall</data>
</node>
<node id="_iup_worker_interpolate">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> CUR.pts.n_contours == 0 </data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> CUR.opcode &amp; 1 </data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> CUR.pts.n_points &lt;= end_point </data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> point &lt;= end_point </data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> ( CUR.pts.tags[point] &amp; mask </data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> point &gt; 0 </data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> cur_touched == first_touched </data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4"> first_touched &gt; 0 </data>
</node>
<node id="while_8">
  <data key="d3">ControlStructure_while</data>
  <data key="d4"> point &lt;= end_point &amp;&amp; ( CUR.pts.tags[point] &amp; mask </data>
</node>
<node id="while_9">
  <data key="d3">ControlStructure_while</data>
  <data key="d4"> point &lt;= end_point </data>
</node>
<node id="while_10">
  <data key="d3">ControlStructure_while</data>
  <data key="d4"> contour &lt; CUR.pts.n_contours </data>
</node>
<edge source="Ins_IUP" target="point">
  <data key="d5">calls</data>
</edge>
<edge source="Ins_IUP" target="_iup_worker_interpolate">
  <data key="d5">calls</data>
</edge>
<edge source="Ins_IUP" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="while_8">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="while_9">
  <data key="d5">contains</data>
</edge>
<edge source="Ins_IUP" target="while_10">
  <data key="d5">contains</data>
</edge>
</graph></graphml>