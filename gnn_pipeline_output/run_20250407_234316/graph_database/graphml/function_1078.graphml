<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-0375</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="connection_edge_process_relay_cell">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="domain">
  <data key="d4">Variable</data>
</node>
<node id="payload">
  <data key="d4">Variable</data>
</node>
<node id="conn">
  <data key="d4">Variable</data>
</node>
<node id="early_warning_limit">
  <data key="d4">Variable</data>
</node>
<node id="percentage">
  <data key="d4">Variable</data>
</node>
<node id="m">
  <data key="d4">Variable</data>
</node>
<node id="entry_conn">
  <data key="d4">Variable</data>
</node>
<node id="layer_hint">
  <data key="d4">Variable</data>
</node>
<node id="extended_cell">
  <data key="d4">Variable</data>
</node>
<node id="trunc_reason">
  <data key="d4">Variable</data>
</node>
<node id="cell">
  <data key="d4">Variable</data>
</node>
<node id="rh">
  <data key="d4">Variable</data>
</node>
<node id="num_seen">
  <data key="d4">Variable</data>
</node>
<node id="reason">
  <data key="d4">Variable</data>
</node>
<node id="optimistic_data">
  <data key="d4">Variable</data>
</node>
<node id="total_n_extend">
  <data key="d4">Variable</data>
</node>
<node id="next_id">
  <data key="d4">Variable</data>
</node>
<node id="circ">
  <data key="d4">Variable</data>
</node>
<node id="extend_info_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_exit_begin_conn">
  <data key="d4">FunctionCall</data>
</node>
<node id="log_info">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_start_reading">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_set_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_uint8">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_edge_consider_sending_sendme">
  <data key="d4">FunctionCall</data>
</node>
<node id="log_debug">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_mark_and_flush">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_exit_begin_resolve">
  <data key="d4">FunctionCall</data>
</node>
<node id="rend_process_relay_cell">
  <data key="d4">FunctionCall</data>
</node>
<node id="log_fn">
  <data key="d4">FunctionCall</data>
</node>
<node id="log_warn">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_write_to_buf">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_mark_for_close">
  <data key="d4">FunctionCall</data>
</node>
<node id="channel_send_destroy">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_set_n_circid_chan">
  <data key="d4">FunctionCall</data>
</node>
<node id="tor_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_edge_end">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_clear_cell_queue">
  <data key="d4">FunctionCall</data>
</node>
<node id="EDGE_TO_ENTRY_CONN">
  <data key="d4">FunctionCall</data>
</node>
<node id="relay_header_unpack">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_resume_edge_reading">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_extend">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_consider_sending_sendme">
  <data key="d4">FunctionCall</data>
</node>
<node id="circuit_truncated">
  <data key="d4">FunctionCall</data>
</node>
<node id="tor_assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="RATELIM_INIT">
  <data key="d4">FunctionCall</data>
</node>
<node id="TO_OR_CIRCUIT">
  <data key="d4">FunctionCall</data>
</node>
<node id="connection_edge_process_relay_cell_not_open">
  <data key="d4">FunctionCall</data>
</node>
<node id="relay_send_command_from_edge">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rh.length &gt; RELAY_PAYLOAD_SIZE</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rh.stream_id == 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn &amp;&amp; !connection_state_is_open(TO_CONN(conn</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn-&gt;base_.type == CONN_TYPE_EXIT &amp;&amp;
        (conn-&gt;base_.state == EXIT_CONN_STATE_CONNECTING ||
         conn-&gt;base_.state == EXIT_CONN_STATE_RESOLVING</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_hint &amp;&amp;
          circ-&gt;purpose != CIRCUIT_PURPOSE_S_REND_JOINED</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;purpose == CIRCUIT_PURPOSE_S_REND_JOINED &amp;&amp;
          layer_hint != TO_ORIGIN_CIRCUIT(circ</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rh.command == RELAY_COMMAND_BEGIN_DIR</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">( layer_hint &amp;&amp; --layer_hint-&gt;deliver_window &lt; 0</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!conn</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">--conn-&gt;deliver_window &lt; 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!optimistic_data</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!conn</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn-&gt;base_.type == CONN_TYPE_AP</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry_conn-&gt;socks_request &amp;&amp;
            !entry_conn-&gt;socks_request-&gt;has_finished</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!conn-&gt;end_reason</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!conn-&gt;base_.marked_for_close</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rh.stream_id</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cell-&gt;command != CELL_RELAY_EARLY &amp;&amp;
          !networkstatus_get_param(NULL,"AllowNonearlyExtend",0,0,1</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cell-&gt;command == CELL_RELAY</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(m = rate_limit_log(&amp;early_warning_limit, approx_time(</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!layer_hint</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">extended_cell_parse(&amp;extended_cell, rh.command,
                        (const uint8_t*</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(reason = circuit_finish_handshake(TO_ORIGIN_CIRCUIT(circ</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(reason=circuit_send_next_onion_skin(TO_ORIGIN_CIRCUIT(circ</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_hint</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;n_hop</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;n_chan</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;n_chan</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!layer_hint</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!rh.stream_id</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_hint</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_hint-&gt;package_window + CIRCWINDOW_INCREMENT &gt;
                CIRCWINDOW_START_MAX</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;package_window + CIRCWINDOW_INCREMENT &gt;
                CIRCWINDOW_START_MAX</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!conn</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circuit_queue_streams_are_blocked(circ</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">connection_edge_package_raw_inbuf(conn, 1, NULL</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_hint</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">circ-&gt;purpose != CIRCUIT_PURPOSE_OR</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">conn</data>
</node>
<node id="switch_43">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">rh.command</data>
</node>
<node id="switch_44">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">rh.command</data>
</node>
<edge source="connection_edge_process_relay_cell" target="domain">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="payload">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="conn">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="early_warning_limit">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="percentage">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="m">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="entry_conn">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="layer_hint">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="extended_cell">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="trunc_reason">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="cell">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="rh">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="num_seen">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="reason">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="optimistic_data">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="total_n_extend">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="next_id">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circ">
  <data key="d6">declares</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="extend_info_free">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_exit_begin_conn">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="log_info">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_start_reading">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_set_state">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="get_uint8">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_edge_consider_sending_sendme">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="log_debug">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_mark_and_flush">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_exit_begin_resolve">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="rend_process_relay_cell">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="log_fn">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="log_warn">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_write_to_buf">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_mark_for_close">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="channel_send_destroy">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_set_n_circid_chan">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="tor_free">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_edge_end">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_clear_cell_queue">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="EDGE_TO_ENTRY_CONN">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="relay_header_unpack">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_resume_edge_reading">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_extend">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_consider_sending_sendme">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="circuit_truncated">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="tor_assert">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="RATELIM_INIT">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="TO_OR_CIRCUIT">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="relay_send_command_from_edge">
  <data key="d6">calls</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="switch_43">
  <data key="d6">contains</data>
</edge>
<edge source="connection_edge_process_relay_cell" target="switch_44">
  <data key="d6">contains</data>
</edge>
<edge source="domain" target="log_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="domain" target="log_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="domain" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="domain" target="log_warn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="domain" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="domain" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="payload" target="get_uint8">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="payload" target="rend_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="payload" target="relay_header_unpack">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="payload" target="relay_send_command_from_edge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="payload" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="payload" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="payload" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="conn" target="log_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_start_reading">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_edge_consider_sending_sendme">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="log_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_mark_and_flush">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_mark_for_close">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_edge_end">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="EDGE_TO_ENTRY_CONN">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_edge_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="conn" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="conn" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="early_warning_limit" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="early_warning_limit" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="early_warning_limit" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="early_warning_limit" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="percentage" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="percentage" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="percentage" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="percentage" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="m" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="switch_43">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="m" target="switch_44">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="entry_conn" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="entry_conn" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="entry_conn" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer_hint" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer_hint" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="layer_hint" target="log_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="rend_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="circuit_resume_edge_reading">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="circuit_consider_sending_sendme">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="connection_edge_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="layer_hint" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer_hint" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="layer_hint" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="extended_cell" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="extended_cell" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="trunc_reason" target="channel_send_destroy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="trunc_reason" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="trunc_reason" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="trunc_reason" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="connection_exit_begin_conn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="log_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="get_uint8">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="log_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="connection_exit_begin_resolve">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="rend_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="log_warn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="tor_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="relay_header_unpack">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="circuit_extend">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="connection_edge_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="tor_assert">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cell" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cell" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rh" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rh" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rh" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rh" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rh" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="rend_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rh" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rh" target="relay_header_unpack">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rh" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rh" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rh" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="reason" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reason" target="channel_send_destroy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reason" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reason" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="optimistic_data" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="optimistic_data" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="optimistic_data" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="optimistic_data" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="total_n_extend" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="total_n_extend" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="total_n_extend" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="total_n_extend" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next_id" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="next_id" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="circ" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="circ" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="circ" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="circ" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="circ" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="extend_info_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="connection_exit_begin_conn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="log_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_set_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="log_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="connection_exit_begin_resolve">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="rend_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="log_fn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="log_warn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="channel_send_destroy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_set_n_circid_chan">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="tor_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_clear_cell_queue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_resume_edge_reading">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_extend">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_consider_sending_sendme">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="circuit_truncated">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="connection_edge_process_relay_cell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="tor_assert">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="TO_OR_CIRCUIT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="connection_edge_process_relay_cell_not_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="relay_send_command_from_edge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="circ" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="circ" target="switch_44">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>