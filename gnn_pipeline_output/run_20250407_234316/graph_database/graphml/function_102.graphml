<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-10194</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="set_text_distance">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="dx">
  <data key="d3">Variable</data>
</node>
<node id="pdist">
  <data key="d3">Variable</data>
</node>
<node id="dy">
  <data key="d3">Variable</data>
</node>
<node id="rounded">
  <data key="d3">Variable</data>
</node>
<node id="code">
  <data key="d3">Variable</data>
</node>
<node id="gs_distance_transform_inverse">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">code == gs_error_undefinedresult</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">code &lt; 0</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">fabs(pdist-&gt;x - (rounded = floor(pdist-&gt;x + 0.5</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">fabs(pdist-&gt;y - (rounded = floor(pdist-&gt;y + 0.5</data>
</node>
<edge source="set_text_distance" target="dx">
  <data key="d5">declares</data>
</edge>
<edge source="set_text_distance" target="pdist">
  <data key="d5">declares</data>
</edge>
<edge source="set_text_distance" target="dy">
  <data key="d5">declares</data>
</edge>
<edge source="set_text_distance" target="rounded">
  <data key="d5">declares</data>
</edge>
<edge source="set_text_distance" target="code">
  <data key="d5">declares</data>
</edge>
<edge source="set_text_distance" target="gs_distance_transform_inverse">
  <data key="d5">calls</data>
</edge>
<edge source="set_text_distance" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="set_text_distance" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="set_text_distance" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="set_text_distance" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="dx" target="set_text_distance">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dx" target="gs_distance_transform_inverse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pdist" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pdist" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pdist" target="set_text_distance">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pdist" target="gs_distance_transform_inverse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dy" target="set_text_distance">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dy" target="gs_distance_transform_inverse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rounded" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rounded" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="code" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="code" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>