<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-3831</data>
<data key="d1">9.3</data>
<data key="d2">HIGH</data>
<node id="readAt">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="exceptionCode">
  <data key="d3">Variable</data>
</node>
<node id="size">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="len">
  <data key="d3">Variable</data>
</node>
<node id="offset">
  <data key="d3">Variable</data>
</node>
<node id="buffer">
  <data key="d3">Variable</data>
</node>
<node id="readInt32">
  <data key="d3">FunctionCall</data>
</node>
<node id="writeInt32">
  <data key="d3">FunctionCall</data>
</node>
<node id="writeInterfaceToken">
  <data key="d3">FunctionCall</data>
</node>
<node id="readExceptionCode">
  <data key="d3">FunctionCall</data>
</node>
<node id="remote">
  <data key="d3">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d3">FunctionCall</data>
</node>
<node id="writeInt64">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">err != OK</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">exceptionCode</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">len &gt; 0</data>
</node>
<edge source="readAt" target="exceptionCode">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="size">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="len">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="offset">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="buffer">
  <data key="d5">declares</data>
</edge>
<edge source="readAt" target="readInt32">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="writeInt32">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="writeInterfaceToken">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="readExceptionCode">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="remote">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="ALOGE">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="writeInt64">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="readAt" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="readAt" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="readAt" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="exceptionCode" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="size" target="readAt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="writeInt32">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="err" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="len" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="offset" target="readAt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="offset" target="writeInt64">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer" target="readAt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buffer" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>