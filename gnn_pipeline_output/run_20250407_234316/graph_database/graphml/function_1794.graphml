<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-5170</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="SetFocusedElement">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="Stop">
  <data key="d3">FunctionCall</data>
</node>
<node id="EnsurePaintLocationDataValidForNode">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetPage">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetSequentialFocusNavigationStartingPoint">
  <data key="d3">FunctionCall</data>
</node>
<node id="UpdateDistributionForFlatTreeTraversal">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetFocused">
  <data key="d3">FunctionCall</data>
</node>
<node id="UpdateFocusAppearanceWithOptions">
  <data key="d3">FunctionCall</data>
</node>
<node id="DispatchFocusInEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="UpdateStyleAndLayoutTree">
  <data key="d3">FunctionCall</data>
</node>
<node id="isConnected">
  <data key="d3">FunctionCall</data>
</node>
<node id="DCHECK">
  <data key="d3">FunctionCall</data>
</node>
<node id="CancelFocusAppearanceUpdate">
  <data key="d3">FunctionCall</data>
</node>
<node id="HandleFocusedUIElementChanged">
  <data key="d3">FunctionCall</data>
</node>
<node id="DispatchFocusOutEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="DispatchFocusEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetHasFocusWithinUpToAncestor">
  <data key="d3">FunctionCall</data>
</node>
<node id="DispatchBlurEvent">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">new_focused_element &amp;&amp; (new_focused_element-&gt;GetDocument(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">NodeChildRemovalTracker::IsBeingRemoved(new_focused_element</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ == new_focused_element</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">old_focused_element</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">GetPage(</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">new_focused_element</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">new_focused_element &amp;&amp; new_focused_element-&gt;IsFocusable(</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IsRootEditableElement(*new_focused_element</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">params.type != kWebFocusTypeNone</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ != new_focused_element</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ != new_focused_element</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">GetPage(</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ != new_focused_element</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ != new_focused_element</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">focused_element_ != new_focused_element</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!focus_change_blocked &amp;&amp; focused_element_</data>
</node>
<node id="if_18">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">AXObjectCache* cache = ExistingAXObjectCache(</data>
</node>
<node id="if_19">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!focus_change_blocked &amp;&amp; GetPage(</data>
</node>
<node id="if_20">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">LocalFrame* frame = GetFrame(</data>
</node>
<edge source="SetFocusedElement" target="Stop">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="EnsurePaintLocationDataValidForNode">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="GetPage">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="SetSequentialFocusNavigationStartingPoint">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="UpdateDistributionForFlatTreeTraversal">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="SetFocused">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="UpdateFocusAppearanceWithOptions">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="DispatchFocusInEvent">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="UpdateStyleAndLayoutTree">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="isConnected">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="DCHECK">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="CancelFocusAppearanceUpdate">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="HandleFocusedUIElementChanged">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="DispatchFocusOutEvent">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="DispatchFocusEvent">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="SetHasFocusWithinUpToAncestor">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="DispatchBlurEvent">
  <data key="d5">calls</data>
</edge>
<edge source="SetFocusedElement" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_18">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_19">
  <data key="d5">contains</data>
</edge>
<edge source="SetFocusedElement" target="if_20">
  <data key="d5">contains</data>
</edge>
</graph></graphml>