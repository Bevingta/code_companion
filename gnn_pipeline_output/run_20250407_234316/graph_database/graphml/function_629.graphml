<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-7913</data>
<data key="d1">9.3</data>
<data key="d2">HIGH</data>
<node id="xc2028_set_config">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="priv_cfg">
  <data key="d3">Variable</data>
</node>
<node id="priv">
  <data key="d3">Variable</data>
</node>
<node id="fe">
  <data key="d3">Variable</data>
</node>
<node id="p">
  <data key="d3">Variable</data>
</node>
<node id="rc">
  <data key="d3">Variable</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="tuner_err">
  <data key="d3">FunctionCall</data>
</node>
<node id="kstrdup">
  <data key="d3">FunctionCall</data>
</node>
<node id="tuner_dbg">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="request_firmware_nowait">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">p-&gt;fname</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">priv-&gt;ctrl.fname == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!firmware_name[0] &amp;&amp; p-&gt;fname &amp;&amp;
	    priv-&gt;fname &amp;&amp; strcmp(p-&gt;fname, priv-&gt;fname</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">priv-&gt;ctrl.max_len &lt; 9</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">priv-&gt;state == XC2028_NO_FIRMWARE</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!firmware_name[0]</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">rc &lt; 0</data>
</node>
<edge source="xc2028_set_config" target="priv_cfg">
  <data key="d5">declares</data>
</edge>
<edge source="xc2028_set_config" target="priv">
  <data key="d5">declares</data>
</edge>
<edge source="xc2028_set_config" target="fe">
  <data key="d5">declares</data>
</edge>
<edge source="xc2028_set_config" target="p">
  <data key="d5">declares</data>
</edge>
<edge source="xc2028_set_config" target="rc">
  <data key="d5">declares</data>
</edge>
<edge source="xc2028_set_config" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="tuner_err">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="kstrdup">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="tuner_dbg">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="kfree">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="request_firmware_nowait">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="xc2028_set_config" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="xc2028_set_config" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="priv_cfg" target="xc2028_set_config">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="mutex_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="tuner_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="xc2028_set_config">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="mutex_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="request_firmware_nowait">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fe" target="xc2028_set_config">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="fe" target="request_firmware_nowait">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="fe" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fe" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fe" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fe" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rc" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rc" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rc" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>