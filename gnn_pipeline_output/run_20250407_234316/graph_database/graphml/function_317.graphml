<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2013-4514</data>
<data key="d1">4.7</data>
<data key="d2">MEDIUM</data>
<node id="wvlan_uil_put_info">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ltvAllocated">
  <data key="d3">Variable</data>
</node>
<node id="urq">
  <data key="d3">Variable</data>
</node>
<node id="lp">
  <data key="d3">Variable</data>
</node>
<node id="result">
  <data key="d3">Variable</data>
</node>
<node id="pLtv">
  <data key="d3">Variable</data>
</node>
<node id="copy_from_user">
  <data key="d3">FunctionCall</data>
</node>
<node id="hcf_cntl">
  <data key="d3">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d3">FunctionCall</data>
</node>
<node id="DBG_LEAVE">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="CNV_INT_TO_LITTLE">
  <data key="d3">FunctionCall</data>
</node>
<node id="DBG_FUNC">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="hcf_put_info">
  <data key="d3">FunctionCall</data>
</node>
<node id="DBG_ENTER">
  <data key="d3">FunctionCall</data>
</node>
<node id="field">
  <data key="d3">FunctionCall</data>
</node>
<node id="wl_act_int_off">
  <data key="d3">FunctionCall</data>
</node>
<node id="wl_act_int_on">
  <data key="d3">FunctionCall</data>
</node>
<node id="DBG_ERROR">
  <data key="d3">FunctionCall</data>
</node>
<node id="verify_area">
  <data key="d3">FunctionCall</data>
</node>
<node id="wl_wep_decode">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">urq-&gt;hcfCtx == &amp;(lp-&gt;hcfCtx</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">capable(CAP_NET_ADMIN</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(urq-&gt;data != NULL</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">urq-&gt;len &lt; (sizeof(hcf_16</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">result != 0</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">((lp-&gt;ltvRecord.len + 1</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">urq-&gt;len &gt; sizeof(lp-&gt;ltvRecord</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pLtv != NULL</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(strlen(&amp;pLtv-&gt;u.u8[2]</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">HCF_TYPE</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">lp-&gt;driverEnable</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ltvAllocated</data>
</node>
<node id="switch_12">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">pLtv-&gt;typ</data>
</node>
<node id="switch_13">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">pLtv-&gt;typ</data>
</node>
<edge source="wvlan_uil_put_info" target="ltvAllocated">
  <data key="d5">declares</data>
</edge>
<edge source="wvlan_uil_put_info" target="urq">
  <data key="d5">declares</data>
</edge>
<edge source="wvlan_uil_put_info" target="lp">
  <data key="d5">declares</data>
</edge>
<edge source="wvlan_uil_put_info" target="result">
  <data key="d5">declares</data>
</edge>
<edge source="wvlan_uil_put_info" target="pLtv">
  <data key="d5">declares</data>
</edge>
<edge source="wvlan_uil_put_info" target="copy_from_user">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="hcf_cntl">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="sizeof">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="DBG_LEAVE">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="kmalloc">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="CNV_INT_TO_LITTLE">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="DBG_FUNC">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="hcf_put_info">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="DBG_ENTER">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="field">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="wl_act_int_off">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="wl_act_int_on">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="DBG_ERROR">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="verify_area">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="wl_wep_decode">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="switch_12">
  <data key="d5">contains</data>
</edge>
<edge source="wvlan_uil_put_info" target="switch_13">
  <data key="d5">contains</data>
</edge>
<edge source="ltvAllocated" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ltvAllocated" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ltvAllocated" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ltvAllocated" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ltvAllocated" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ltvAllocated" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="copy_from_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="urq" target="kmalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="urq" target="verify_area">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="urq" target="wvlan_uil_put_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="urq" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="urq" target="switch_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="copy_from_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="hcf_cntl">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="hcf_put_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="wl_act_int_off">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="wl_act_int_on">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="wl_wep_decode">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="wvlan_uil_put_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lp" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="switch_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lp" target="switch_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="switch_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="pLtv" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="switch_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="switch_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="copy_from_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pLtv" target="CNV_INT_TO_LITTLE">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pLtv" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="pLtv" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="pLtv" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>