<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-14106</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="tcp_disconnect">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="icsk">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="tp">
  <data key="d4">Variable</data>
</node>
<node id="inet">
  <data key="d4">Variable</data>
</node>
<node id="old_state">
  <data key="d4">Variable</data>
</node>
<node id="sk">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="inet_sk">
  <data key="d4">FunctionCall</data>
</node>
<node id="__sk_dst_reset">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_saved_syn_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_clear_xmit_timers">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_free_fastopen_req">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_init_send_head">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_sk">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_set_ca_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="__skb_queue_purge">
  <data key="d4">FunctionCall</data>
</node>
<node id="sk_error_report">
  <data key="d4">FunctionCall</data>
</node>
<node id="inet_csk">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_clear_retrans">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_fastopen_active_disable_ofo_check">
  <data key="d4">FunctionCall</data>
</node>
<node id="sock_reset_flag">
  <data key="d4">FunctionCall</data>
</node>
<node id="inet_csk_listen_stop">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_write_queue_purge">
  <data key="d4">FunctionCall</data>
</node>
<node id="WARN_ON">
  <data key="d4">FunctionCall</data>
</node>
<node id="skb_rbtree_purge">
  <data key="d4">FunctionCall</data>
</node>
<node id="tcp_send_active_reset">
  <data key="d4">FunctionCall</data>
</node>
<node id="inet_csk_delack_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">old_state != TCP_CLOSE</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">old_state == TCP_LISTEN</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(tp-&gt;repair</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tcp_need_reset(old_state</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">old_state == TCP_SYN_SENT</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(sk-&gt;sk_userlocks &amp; SOCK_BINDADDR_LOCK</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tp-&gt;write_seq == 0</data>
</node>
<edge source="tcp_disconnect" target="icsk">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="tp">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="inet">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="old_state">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="sk">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="tcp_disconnect" target="inet_sk">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="__sk_dst_reset">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_saved_syn_free">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_clear_xmit_timers">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_free_fastopen_req">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_init_send_head">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_sk">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_set_ca_state">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="__skb_queue_purge">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="sk_error_report">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="inet_csk">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_clear_retrans">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_fastopen_active_disable_ofo_check">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="sock_reset_flag">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="inet_csk_listen_stop">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_write_queue_purge">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="WARN_ON">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="skb_rbtree_purge">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="tcp_send_active_reset">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="inet_csk_delack_init">
  <data key="d6">calls</data>
</edge>
<edge source="tcp_disconnect" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="tcp_disconnect" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="icsk" target="WARN_ON">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tp" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="tp" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="tp" target="tcp_saved_syn_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tp" target="tcp_free_fastopen_req">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tp" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tp" target="tcp_clear_retrans">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tp" target="skb_rbtree_purge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inet" target="WARN_ON">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="old_state" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="old_state" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="old_state" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="old_state" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sk" target="inet_sk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="__sk_dst_reset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_clear_xmit_timers">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_init_send_head">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_sk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_set_ca_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="__skb_queue_purge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_error_report">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_fastopen_active_disable_ofo_check">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_reset_flag">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk_listen_stop">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_write_queue_purge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_disconnect">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="WARN_ON">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="tcp_send_active_reset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_csk_delack_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="tcp_disconnect">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>