<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-15265</data>
<data key="d3">6.9</data>
<data key="d4">MEDIUM</data>
<node id="snd_seq_create_port">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="port">
  <data key="d5">Variable</data>
</node>
<node id="num">
  <data key="d5">Variable</data>
</node>
<node id="client">
  <data key="d5">Variable</data>
</node>
<node id="flags">
  <data key="d5">Variable</data>
</node>
<node id="mutex_lock">
  <data key="d5">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d5">FunctionCall</data>
</node>
<node id="snd_use_lock_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="list_for_each_entry">
  <data key="d5">FunctionCall</data>
</node>
<node id="list_add_tail">
  <data key="d5">FunctionCall</data>
</node>
<node id="write_unlock_irqrestore">
  <data key="d5">FunctionCall</data>
</node>
<node id="write_lock_irqsave">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="port_subs_info_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="pr_warn">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">snd_BUG_ON(!client</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">client-&gt;num_ports &gt;= SNDRV_SEQ_MAX_PORTS</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!new_port</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p-&gt;addr.port &gt; num</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">port &lt; 0</data>
</node>
<edge source="snd_seq_create_port" target="port">
  <data key="d7">declares</data>
</edge>
<edge source="snd_seq_create_port" target="num">
  <data key="d7">declares</data>
</edge>
<edge source="snd_seq_create_port" target="client">
  <data key="d7">declares</data>
</edge>
<edge source="snd_seq_create_port" target="flags">
  <data key="d7">declares</data>
</edge>
<edge source="snd_seq_create_port" target="mutex_lock">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="mutex_unlock">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="snd_use_lock_init">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="list_for_each_entry">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="list_add_tail">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="write_unlock_irqrestore">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="write_lock_irqsave">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="sprintf">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="port_subs_info_init">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="kzalloc">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="pr_warn">
  <data key="d7">calls</data>
</edge>
<edge source="snd_seq_create_port" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="snd_seq_create_port" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="snd_seq_create_port" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="snd_seq_create_port" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="snd_seq_create_port" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="port" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="port" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="port" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="port" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="port" target="mutex_lock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="mutex_unlock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="snd_seq_create_port">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="snd_use_lock_init">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="list_for_each_entry">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="list_add_tail">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="write_unlock_irqrestore">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="write_lock_irqsave">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="port_subs_info_init">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="kzalloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="port" target="pr_warn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="num" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num" target="sprintf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="num" target="pr_warn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="num" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="client" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="client" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="client" target="mutex_lock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="mutex_unlock">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="snd_seq_create_port">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="list_for_each_entry">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="write_unlock_irqrestore">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="write_lock_irqsave">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="client" target="pr_warn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="write_unlock_irqrestore">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="write_lock_irqsave">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>