<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-5956</data>
<data key="d3">2.1</data>
<data key="d4">LOW</data>
<node id="vrend_decode_create_ve">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d5">Variable</data>
</node>
<node id="ve">
  <data key="d5">Variable</data>
</node>
<node id="handle">
  <data key="d5">Variable</data>
</node>
<node id="ctx">
  <data key="d5">Variable</data>
</node>
<node id="ret">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="num_elements">
  <data key="d5">Variable</data>
</node>
<node id="calloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="get_buf_entry">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length &lt; 1</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(length - 1</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">num_elements</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!ve</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; num_elements; i++</data>
</node>
<edge source="vrend_decode_create_ve" target="length">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="ve">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="handle">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="ctx">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="ret">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="num_elements">
  <data key="d7">declares</data>
</edge>
<edge source="vrend_decode_create_ve" target="calloc">
  <data key="d7">calls</data>
</edge>
<edge source="vrend_decode_create_ve" target="get_buf_entry">
  <data key="d7">calls</data>
</edge>
<edge source="vrend_decode_create_ve" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="vrend_decode_create_ve" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="vrend_decode_create_ve" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="vrend_decode_create_ve" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="vrend_decode_create_ve" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="length" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="vrend_decode_create_ve">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ve" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ve" target="calloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ve" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ve" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ve" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ve" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="handle" target="vrend_decode_create_ve">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ctx" target="vrend_decode_create_ve">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ctx" target="get_buf_entry">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ctx" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ctx" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ctx" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ctx" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ctx" target="for_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num_elements" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num_elements" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num_elements" target="calloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="num_elements" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num_elements" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>