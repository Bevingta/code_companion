<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-9505</data>
<data key="d2">6.1</data>
<data key="d3">MEDIUM</data>
<node id="mca_ccb_hdl_req">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="reject_code">
  <data key="d4">Variable</data>
</node>
<node id="reject_opcode">
  <data key="d4">Variable</data>
</node>
<node id="mca_dcb_dealloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="MCA_TRACE_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="mca_dcb_close_by_mdl_id">
  <data key="d4">FunctionCall</data>
</node>
<node id="osi_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="osi_free_and_reset">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="BE_STREAM_TO_UINT16">
  <data key="d4">FunctionCall</data>
</node>
<node id="MCA_TRACE_DEBUG">
  <data key="d4">FunctionCall</data>
</node>
<node id="L2CA_DataWrite">
  <data key="d4">FunctionCall</data>
</node>
<node id="mca_ccb_report_event">
  <data key="d4">FunctionCall</data>
</node>
<node id="osi_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="UINT16_TO_BE_STREAM">
  <data key="d4">FunctionCall</data>
</node>
<node id="mca_stop_timer">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_ccb-&gt;status == MCA_CCB_STAT_PENDING</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p_ccb-&gt;status == MCA_CCB_STAT_PENDING</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_ccb-&gt;p_tx_req &amp;&amp;
 ((p_dcb = mca_dcb_by_hdl(p_ccb-&gt;p_tx_req-&gt;dcb_idx</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_ccb-&gt;p_rx_msg</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_ccb-&gt;p_tx_req</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_ccb-&gt;ctrl_vpsm == 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(p_ccb-&gt;p_tx_req-&gt;op_code == MCA_OP_MDL_CREATE_REQ</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p_pkt-&gt;layer_specific != MCA_RSP_SUCCESS</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((evt_data.hdr.op_code &gt;= MCA_NUM_STANDARD_OPCODE</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">check_req</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">reject_code == MCA_RSP_SUCCESS</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">MCA_IS_VALID_MDL_ID(evt_data.hdr.mdl_id</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!mca_is_valid_dep_id(p_ccb-&gt;p_rcb, p_rx_msg-&gt;mdep_id</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mca_ccb_uses_mdl_id(p_ccb, evt_data.hdr.mdl_id</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mca_dep_free_mdl(p_ccb, evt_data.create_ind.dep_id</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mca_ccb_uses_mdl_id(p_ccb, evt_data.hdr.mdl_id</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((reject_code != MCA_RSP_SUCCESS</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">valid_response</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">reject_code == MCA_RSP_SUCCESS</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">send_rsp</data>
</node>
<node id="switch_20">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">evt_data.hdr.op_code</data>
</node>
<node id="switch_21">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">reject_opcode</data>
</node>
<edge source="mca_ccb_hdl_req" target="reject_code">
  <data key="d6">declares</data>
</edge>
<edge source="mca_ccb_hdl_req" target="reject_opcode">
  <data key="d6">declares</data>
</edge>
<edge source="mca_ccb_hdl_req" target="mca_dcb_dealloc">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="MCA_TRACE_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="mca_dcb_close_by_mdl_id">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="osi_free">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="osi_free_and_reset">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="BE_STREAM_TO_UINT16">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="MCA_TRACE_DEBUG">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="L2CA_DataWrite">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="mca_ccb_report_event">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="osi_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="UINT16_TO_BE_STREAM">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="mca_stop_timer">
  <data key="d6">calls</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="switch_20">
  <data key="d6">contains</data>
</edge>
<edge source="mca_ccb_hdl_req" target="switch_21">
  <data key="d6">contains</data>
</edge>
<edge source="reject_code" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="reject_code" target="MCA_TRACE_ERROR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reject_code" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_code" target="switch_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_opcode" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_opcode" target="MCA_TRACE_ERROR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reject_opcode" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_opcode" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_opcode" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reject_opcode" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>