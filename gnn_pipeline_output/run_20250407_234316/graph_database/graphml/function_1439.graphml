<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2019-14934</data>
<data key="d4">6.8</data>
<data key="d5">MEDIUM</data>
<node id="pdf_load_pages_kids">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="pdf">
  <data key="d6">Variable</data>
</node>
<node id="fp">
  <data key="d6">Variable</data>
</node>
<node id="catalog">
  <data key="d6">FunctionCall</data>
</node>
<node id="fseek">
  <data key="d6">FunctionCall</data>
</node>
<node id="free">
  <data key="d6">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d6">FunctionCall</data>
</node>
<node id="SAFE_E">
  <data key="d6">FunctionCall</data>
</node>
<node id="ftell">
  <data key="d6">FunctionCall</data>
</node>
<node id="atoi">
  <data key="d6">FunctionCall</data>
</node>
<node id="get_object">
  <data key="d6">FunctionCall</data>
</node>
<node id="load_kids">
  <data key="d6">FunctionCall</data>
</node>
<node id="tables">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">pdf-&gt;xrefs[i].version &amp;&amp; (pdf-&gt;xrefs[i].end != 0</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!(c = strstr(buf, "/Root"</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!buf || !(c = strstr(buf, "/Pages"</data>
</node>
<node id="for_3">
  <data key="d6">ControlStructure_for</data>
  <data key="d7">i=0; i&lt;pdf-&gt;n_xrefs; i++</data>
</node>
<node id="while_4">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">SAFE_F(fp, (fgetc(fp</data>
</node>
<edge source="pdf_load_pages_kids" target="pdf">
  <data key="d8">declares</data>
</edge>
<edge source="pdf_load_pages_kids" target="fp">
  <data key="d8">declares</data>
</edge>
<edge source="pdf_load_pages_kids" target="catalog">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="fseek">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="free">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="malloc">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="SAFE_E">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="ftell">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="atoi">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="get_object">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="load_kids">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="tables">
  <data key="d8">calls</data>
</edge>
<edge source="pdf_load_pages_kids" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="pdf_load_pages_kids" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="pdf_load_pages_kids" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="pdf_load_pages_kids" target="for_3">
  <data key="d8">contains</data>
</edge>
<edge source="pdf_load_pages_kids" target="while_4">
  <data key="d8">contains</data>
</edge>
<edge source="pdf" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="pdf" target="for_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="pdf" target="pdf_load_pages_kids">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="pdf" target="fseek">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="pdf" target="get_object">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="pdf" target="load_kids">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="while_4">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="fp" target="pdf_load_pages_kids">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="fseek">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="SAFE_E">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="ftell">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="get_object">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="load_kids">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="fp" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="fp" target="for_3">
  <data key="d8">used_in_body</data>
</edge>
</graph></graphml>