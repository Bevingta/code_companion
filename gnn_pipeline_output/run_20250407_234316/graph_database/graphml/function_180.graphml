<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-8602</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="zsethalftone5">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="count">
  <data key="d4">Variable</data>
</node>
<node id="mem">
  <data key="d4">Variable</data>
</node>
<node id="dict_enum">
  <data key="d4">Variable</data>
</node>
<node id="npop">
  <data key="d4">Variable</data>
</node>
<node id="space_index">
  <data key="d4">Variable</data>
</node>
<node id="type">
  <data key="d4">Variable</data>
</node>
<node id="i_ctx_p">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="name_size">
  <data key="d4">Variable</data>
</node>
<node id="k">
  <data key="d4">Variable</data>
</node>
<node id="odepth">
  <data key="d4">Variable</data>
</node>
<node id="comp_number">
  <data key="d4">Variable</data>
</node>
<node id="edepth">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="dict_threshold2_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="ref_stack_pop_to">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_get_colorname_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_note_error">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_free_object">
  <data key="d4">FunctionCall</data>
</node>
<node id="any">
  <data key="d4">FunctionCall</data>
</node>
<node id="dict_threshold_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="dict_spot_results">
  <data key="d4">FunctionCall</data>
</node>
<node id="dict_first">
  <data key="d4">FunctionCall</data>
</node>
<node id="dict_int_param">
  <data key="d4">FunctionCall</data>
</node>
<node id="ref_stack_count">
  <data key="d4">FunctionCall</data>
</node>
<node id="make_istruct">
  <data key="d4">FunctionCall</data>
</node>
<node id="make_op_estack">
  <data key="d4">FunctionCall</data>
</node>
<node id="check_ostack">
  <data key="d4">FunctionCall</data>
</node>
<node id="r_space_index">
  <data key="d4">FunctionCall</data>
</node>
<node id="dict_spot_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="pop">
  <data key="d4">FunctionCall</data>
</node>
<node id="name_index">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_alloc_struct_array">
  <data key="d4">FunctionCall</data>
</node>
<node id="check_estack">
  <data key="d4">FunctionCall</data>
</node>
<node id="refset_null">
  <data key="d4">FunctionCall</data>
</node>
<node id="rc_alloc_struct_0">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_sethalftone_prepare">
  <data key="d4">FunctionCall</data>
</node>
<node id="gs_cname_to_colorant_number">
  <data key="d4">FunctionCall</data>
</node>
<node id="zcolor_remap_one">
  <data key="d4">FunctionCall</data>
</node>
<node id="check_dict_read">
  <data key="d4">FunctionCall</data>
</node>
<node id="zscreen_enum_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="make_mark_estack">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dict_enum = dict_next(op, dict_enum, rvalue</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[0], t_name</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[1], t_dictionary</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colorant_number &lt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colorant_number == GX_DEVICE_COLOR_MAX_COMPONENTS</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">have_default</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count &gt; GS_CLIENT_COLOR_MAX_COMPONENTS + 1</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">count == 0 || (halftonetype == ht_type_multiple &amp;&amp; ! have_default</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt;= 0</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pht == 0 || phtc == 0 || pdht == 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt;= 0</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dict_enum = dict_next(op, dict_enum, rvalue</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[0], t_name</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[1], t_dictionary</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colorant_number &lt; 0</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dict_int_param(&amp;rvalue[1], "HalftoneType", 1, 7, 0, &amp;type</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt;= 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt;= 0</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dict_enum = dict_next(op, dict_enum, rvalue</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[0], t_name</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(&amp;rvalue[1], t_dictionary</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">colorant_number &lt; 0</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pc-&gt;type == ht_type_spot</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &gt;= 0</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pdht-&gt;components == 0</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pdht-&gt;components[k].comp_number == comp_number</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!r_has_type(tprocs + j, t__invalid</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="for_36">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">count = 0; ;</data>
</node>
<node id="for_37">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0, pc = phtc; ;</data>
</node>
<node id="for_38">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">pc = phtc; ; </data>
</node>
<node id="for_39">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; count; j++</data>
</node>
<node id="for_40">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">k = 0; k &lt; count; k++</data>
</node>
<node id="switch_41">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">type</data>
</node>
<node id="switch_42">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">phtc[j].type</data>
</node>
<edge source="zsethalftone5" target="count">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="mem">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="dict_enum">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="npop">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="space_index">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="type">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="i_ctx_p">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="name_size">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="k">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="odepth">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="comp_number">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="edepth">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="zsethalftone5" target="dict_threshold2_params">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="ref_stack_pop_to">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_get_colorname_string">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_note_error">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_free_object">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="any">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="dict_threshold_params">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="dict_spot_results">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="dict_first">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="dict_int_param">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="ref_stack_count">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="make_istruct">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="make_op_estack">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="check_ostack">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="r_space_index">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="dict_spot_params">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="pop">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="name_index">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_alloc_struct_array">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="check_estack">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="refset_null">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="rc_alloc_struct_0">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_sethalftone_prepare">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="gs_cname_to_colorant_number">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="zcolor_remap_one">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="check_dict_read">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="zscreen_enum_init">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="make_mark_estack">
  <data key="d6">calls</data>
</edge>
<edge source="zsethalftone5" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="for_36">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="for_37">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="for_38">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="for_39">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="for_40">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="switch_41">
  <data key="d6">contains</data>
</edge>
<edge source="zsethalftone5" target="switch_42">
  <data key="d6">contains</data>
</edge>
<edge source="count" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="count" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="for_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="for_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="count" target="gs_alloc_struct_array">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="count" target="refset_null">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="count" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="dict_threshold2_params">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="gs_get_colorname_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="gs_free_object">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="dict_spot_params">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="name_index">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="gs_alloc_struct_array">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="rc_alloc_struct_0">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mem" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="for_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mem" target="switch_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dict_enum" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dict_enum" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="dict_enum" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="for_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dict_enum" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="npop" target="pop">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="npop" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="npop" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="npop" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="space_index" target="zscreen_enum_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="space_index" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="space_index" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="space_index" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="space_index" target="switch_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="switch_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="switch_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="gs_note_error">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="dict_int_param">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="gs_cname_to_colorant_number">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="zsethalftone5">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="dict_spot_results">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="zcolor_remap_one">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="zscreen_enum_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="switch_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="j" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="switch_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="name_size" target="gs_get_colorname_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="name_size" target="gs_cname_to_colorant_number">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="name_size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name_size" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name_size" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name_size" target="for_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name_size" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name_size" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="k" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="k" target="for_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="odepth" target="ref_stack_pop_to">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="odepth" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odepth" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odepth" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="odepth" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="comp_number" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="comp_number" target="for_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="edepth" target="ref_stack_pop_to">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="edepth" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="edepth" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="edepth" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="edepth" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="for_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="for_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="for_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="switch_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="switch_42">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>