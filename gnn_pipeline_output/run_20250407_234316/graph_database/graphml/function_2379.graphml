<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-7729</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ParsePSFile">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">FunctionCall</data>
</node>
<node id="XMP_Throw">
  <data key="d4">FunctionCall</data>
</node>
<node id="MoveToOffset">
  <data key="d4">FunctionCall</data>
</node>
<node id="ExtractContainsXMPHint">
  <data key="d4">FunctionCall</data>
</node>
<node id="Rewind">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetUns32LE">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetUns32BE">
  <data key="d4">FunctionCall</data>
</node>
<node id="setTokenInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="ExtractDocInfoDict">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! PostScript_Support::IsValidPSFile(fileRef,this-&gt;fileformat</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 4 </data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> fileheader == 0xC5D0D3C6 </data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 30 </data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> checkAbort &amp;&amp; abortProc(abortArg</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, kPSContainsForString.length(</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> (CheckFileSpace ( fileRef, &amp;ioBuf, kPSEndCommentString.length(</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr(kPSEndCommentString.c_str(</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! IsWhitespace (*ioBuf.ptr</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 5 </data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("/DOCI"</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%Beg"</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 6 </data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inProl"</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 2 </data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("og"</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inSetu"</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("p"</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inBina"</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 3 </data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("ry"</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 12 </data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%EndBinary"</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsWhitespace(*ioBuf.ptr</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inData"</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr(":"</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 10 </data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%EndData"</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsWhitespace(*ioBuf.ptr</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inDocu"</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 5 </data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("ment:"</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 14 </data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%EndDocument"</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsWhitespace(*ioBuf.ptr</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("inPage"</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!CheckFileSpace ( fileRef, &amp;ioBuf, 5 </data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("Setup"</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%End"</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 5 </data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("Prolo"</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("g"</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("Setup"</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("PageS"</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 4 </data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("etup"</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("PageC"</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 7 </data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("omments"</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%Pag"</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 2 </data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr(":"</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("%%Tra"</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 4 </data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">CheckBytes ( ioBuf.ptr, Uns8Ptr("iler"</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! CheckFileSpace ( fileRef, &amp;ioBuf, 1 </data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(kPS_Creator &amp; dscFlags</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! ExtractDSCCommentValue(ioBuf,kPS_dscFor</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(kPS_CreatorTool &amp; dscFlags</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! ExtractDSCCommentValue(ioBuf,kPS_dscCreator</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(kPS_CreateDate &amp; dscFlags</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! ExtractDSCCommentValue(ioBuf,kPS_dscCreateDate</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(kPS_Title &amp; dscFlags</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! ExtractDSCCommentValue(ioBuf,kPS_dscTitle</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> CheckFileSpace ( fileRef, &amp;ioBuf, kPSContainsXMPString.length(</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> ! PostScript_Support::SkipUntilNewline(fileRef,ioBuf</data>
</node>
<node id="while_71">
  <data key="d4">ControlStructure_while</data>
  <data key="d5"> true </data>
</node>
<node id="while_72">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">true</data>
</node>
<node id="while_73">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">true</data>
</node>
<node id="while_74">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">true</data>
</node>
<node id="while_75">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">true</data>
</node>
<node id="while_76">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">true</data>
</node>
<node id="while_77">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">!IsNewline(*ioBuf.ptr</data>
</node>
<node id="while_78">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">!IsNewline(*ioBuf.ptr</data>
</node>
<edge source="ParsePSFile" target="length">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="XMP_Throw">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="MoveToOffset">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="ExtractContainsXMPHint">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="Rewind">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="GetUns32LE">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="GetUns32BE">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="setTokenInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="ExtractDocInfoDict">
  <data key="d6">calls</data>
</edge>
<edge source="ParsePSFile" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_71">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_72">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_73">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_74">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_75">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_76">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_77">
  <data key="d6">contains</data>
</edge>
<edge source="ParsePSFile" target="while_78">
  <data key="d6">contains</data>
</edge>
</graph></graphml>