<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-1146</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="mem_cgroup_usage_unregister_event">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="cgrp">
  <data key="d4">Variable</data>
</node>
<node id="eventfd">
  <data key="d4">Variable</data>
</node>
<node id="type">
  <data key="d4">Variable</data>
</node>
<node id="memcg">
  <data key="d4">Variable</data>
</node>
<node id="cft">
  <data key="d4">Variable</data>
</node>
<node id="thresholds">
  <data key="d4">Variable</data>
</node>
<node id="new">
  <data key="d4">Variable</data>
</node>
<node id="mutex_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="MEMFILE_TYPE">
  <data key="d4">FunctionCall</data>
</node>
<node id="BUG_ON">
  <data key="d4">FunctionCall</data>
</node>
<node id="synchronize_rcu">
  <data key="d4">FunctionCall</data>
</node>
<node id="__mem_cgroup_threshold">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="rcu_assign_pointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="mem_cgroup_from_cont">
  <data key="d4">FunctionCall</data>
</node>
<node id="BUG">
  <data key="d4">FunctionCall</data>
</node>
<node id="mem_cgroup_usage">
  <data key="d4">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == _MEM</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == _MEMSWAP</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">thresholds-&gt;primary-&gt;entries[i].eventfd != eventfd</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!size</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">thresholds-&gt;primary-&gt;entries[i].eventfd == eventfd</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">new-&gt;entries[j].threshold &lt; usage</data>
</node>
<node id="for_6">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; thresholds-&gt;primary-&gt;size; i++</data>
</node>
<node id="for_7">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0, j = 0; i &lt; thresholds-&gt;primary-&gt;size; i++</data>
</node>
<edge source="mem_cgroup_usage_unregister_event" target="cgrp">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="eventfd">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="type">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="memcg">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="cft">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="thresholds">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="new">
  <data key="d6">declares</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="mutex_lock">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="MEMFILE_TYPE">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="BUG_ON">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="synchronize_rcu">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="__mem_cgroup_threshold">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="mutex_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="rcu_assign_pointer">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="mem_cgroup_from_cont">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="BUG">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="mem_cgroup_usage">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="kfree">
  <data key="d6">calls</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="for_6">
  <data key="d6">contains</data>
</edge>
<edge source="mem_cgroup_usage_unregister_event" target="for_7">
  <data key="d6">contains</data>
</edge>
<edge source="cgrp" target="mem_cgroup_from_cont">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cgrp" target="mem_cgroup_usage_unregister_event">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eventfd" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="eventfd" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="eventfd" target="mem_cgroup_usage_unregister_event">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eventfd" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eventfd" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eventfd" target="for_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eventfd" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="__mem_cgroup_threshold">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="mem_cgroup_usage">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="mem_cgroup_usage_unregister_event">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memcg" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memcg" target="__mem_cgroup_threshold">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memcg" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="memcg" target="mem_cgroup_usage">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cft" target="MEMFILE_TYPE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cft" target="mem_cgroup_usage_unregister_event">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="thresholds" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="thresholds" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="thresholds" target="for_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="thresholds" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="thresholds" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="thresholds" target="BUG_ON">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="thresholds" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="thresholds" target="rcu_assign_pointer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="thresholds" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="thresholds" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="new" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="new" target="rcu_assign_pointer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="new" target="kfree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="new" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="new" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="new" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="new" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>