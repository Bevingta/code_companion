<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-0143</data>
<data key="d2">4.4</data>
<data key="d3">MEDIUM</data>
<node id="parallels_open">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="ph">
  <data key="d4">Variable</data>
</node>
<node id="bdrv_pread">
  <data key="d4">FunctionCall</data>
</node>
<node id="qemu_co_mutex_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="error_setg">
  <data key="d4">FunctionCall</data>
</node>
<node id="le32_to_cpus">
  <data key="d4">FunctionCall</data>
</node>
<node id="le32_to_cpu">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp(ph.magic, HEADER_MAGIC, 16</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="for_3">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; s-&gt;catalog_size; i++</data>
</node>
<edge source="parallels_open" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="parallels_open" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="parallels_open" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="parallels_open" target="ph">
  <data key="d6">declares</data>
</edge>
<edge source="parallels_open" target="bdrv_pread">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="qemu_co_mutex_init">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="g_free">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="error_setg">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="le32_to_cpus">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="le32_to_cpu">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="g_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="parallels_open" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="parallels_open" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="parallels_open" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="parallels_open" target="for_3">
  <data key="d6">contains</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="parallels_open">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ph" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ph" target="bdrv_pread">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ph" target="le32_to_cpu">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>