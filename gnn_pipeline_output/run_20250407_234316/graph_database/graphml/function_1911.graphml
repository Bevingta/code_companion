<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-3834</data>
<data key="d2">10.0</data>
<data key="d3">HIGH</data>
<node id="onTransact">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="streamCTR">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="inputCTR">
  <data key="d4">Variable</data>
</node>
<node id="offset">
  <data key="d4">Variable</data>
</node>
<node id="host">
  <data key="d4">Variable</data>
</node>
<node id="inData">
  <data key="d4">Variable</data>
</node>
<node id="port">
  <data key="d4">Variable</data>
</node>
<node id="outData">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="readInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="readInt64">
  <data key="d4">FunctionCall</data>
</node>
<node id="readCString">
  <data key="d4">FunctionCall</data>
</node>
<node id="read">
  <data key="d4">FunctionCall</data>
</node>
<node id="readStrongBinder">
  <data key="d4">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="free">
  <data key="d4">FunctionCall</data>
</node>
<node id="GraphicBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="encryptNative">
  <data key="d4">FunctionCall</data>
</node>
<node id="write">
  <data key="d4">FunctionCall</data>
</node>
<node id="encrypt">
  <data key="d4">FunctionCall</data>
</node>
<node id="decrypt">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_INTERFACE">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeInt64">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="switch_3">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">code</data>
</node>
<edge source="onTransact" target="streamCTR">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="inputCTR">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="offset">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="host">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="inData">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="port">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="outData">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="readInt32">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readInt64">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readCString">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="read">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readStrongBinder">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="malloc">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="free">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="GraphicBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeInt32">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="encryptNative">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="write">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="encrypt">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="decrypt">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="CHECK_INTERFACE">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeInt64">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="switch_3">
  <data key="d6">contains</data>
</edge>
<edge source="streamCTR" target="encryptNative">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="streamCTR" target="encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="streamCTR" target="decrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="streamCTR" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="malloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="encryptNative">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="decrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inputCTR" target="encryptNative">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inputCTR" target="encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inputCTR" target="decrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inputCTR" target="writeInt64">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inputCTR" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inputCTR" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inputCTR" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="encryptNative">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="host" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="host" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inData" target="read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inData" target="free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inData" target="encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inData" target="decrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inData" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="port" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="port" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outData" target="free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outData" target="encryptNative">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outData" target="write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outData" target="encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outData" target="decrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outData" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outData" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outData" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outData" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="onTransact">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="onTransact">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="switch_3">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>