<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-2476</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="onTransact">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="sideband_handle">
  <data key="d4">Variable</data>
</node>
<node id="pageSize">
  <data key="d4">Variable</data>
</node>
<node id="pid">
  <data key="d4">Variable</data>
</node>
<node id="fenceFd">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="buffer_data">
  <data key="d4">Variable</data>
</node>
<node id="allocSize">
  <data key="d4">Variable</data>
</node>
<node id="parameter_name">
  <data key="d4">Variable</data>
</node>
<node id="name">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="params">
  <data key="d4">Variable</data>
</node>
<node id="readCString">
  <data key="d4">FunctionCall</data>
</node>
<node id="setInternalOption">
  <data key="d4">FunctionCall</data>
</node>
<node id="end">
  <data key="d4">FunctionCall</data>
</node>
<node id="storeMetaDataInBuffers">
  <data key="d4">FunctionCall</data>
</node>
<node id="write">
  <data key="d4">FunctionCall</data>
</node>
<node id="configureVideoTunnelMode">
  <data key="d4">FunctionCall</data>
</node>
<node id="sysconf">
  <data key="d4">FunctionCall</data>
</node>
<node id="dup">
  <data key="d4">FunctionCall</data>
</node>
<node id="readInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="readInt64">
  <data key="d4">FunctionCall</data>
</node>
<node id="createPersistentInputSurface">
  <data key="d4">FunctionCall</data>
</node>
<node id="useGraphicBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="GraphicBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="setParameter">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_OMX_INTERFACE">
  <data key="d4">FunctionCall</data>
</node>
<node id="TRESPASS">
  <data key="d4">FunctionCall</data>
</node>
<node id="updateGraphicBufferInMeta">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeInt64">
  <data key="d4">FunctionCall</data>
</node>
<node id="getConfig">
  <data key="d4">FunctionCall</data>
</node>
<node id="enableGraphicBuffers">
  <data key="d4">FunctionCall</data>
</node>
<node id="read">
  <data key="d4">FunctionCall</data>
</node>
<node id="readStrongBinder">
  <data key="d4">FunctionCall</data>
</node>
<node id="getState">
  <data key="d4">FunctionCall</data>
</node>
<node id="mprotect">
  <data key="d4">FunctionCall</data>
</node>
<node id="getExtensionIndex">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeInt32">
  <data key="d4">FunctionCall</data>
</node>
<node id="munmap">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeNativeHandle">
  <data key="d4">FunctionCall</data>
</node>
<node id="allocateBufferWithBackup">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="signalEndOfInputStream">
  <data key="d4">FunctionCall</data>
</node>
<node id="allocateBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="setInputSurface">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeString8">
  <data key="d4">FunctionCall</data>
</node>
<node id="listNodes">
  <data key="d4">FunctionCall</data>
</node>
<node id="getParameter">
  <data key="d4">FunctionCall</data>
</node>
<node id="prepareForAdaptivePlayback">
  <data key="d4">FunctionCall</data>
</node>
<node id="allocateNode">
  <data key="d4">FunctionCall</data>
</node>
<node id="writeStrongBinder">
  <data key="d4">FunctionCall</data>
</node>
<node id="android_errorWriteLog">
  <data key="d4">FunctionCall</data>
</node>
<node id="mmap">
  <data key="d4">FunctionCall</data>
</node>
<node id="getGraphicBufferUsage">
  <data key="d4">FunctionCall</data>
</node>
<node id="createInputSurface">
  <data key="d4">FunctionCall</data>
</node>
<node id="useBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="setConfig">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(index == (OMX_INDEXTYPE</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size &gt; SIZE_MAX - (pageSize * 2</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">params != MAP_FAILED</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err != OK</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code != SET_INTERNAL_OPTION &amp;&amp;
                                index != (OMX_INDEXTYPE</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(code == GET_PARAMETER || code == GET_CONFIG</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">params</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(err != OK</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(err != OK</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!isSecure(node</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err == OK</data>
</node>
<node id="for_19">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">List&lt;ComponentInfo&gt;::iterator it = list.begin(</data>
</node>
<node id="for_20">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">List&lt;String8&gt;::iterator role_it = cur.mRoles.begin(</data>
</node>
<node id="switch_21">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">code</data>
</node>
<node id="switch_22">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">code</data>
</node>
<edge source="onTransact" target="sideband_handle">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="pageSize">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="pid">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="fenceFd">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="buffer_data">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="allocSize">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="parameter_name">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="name">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="params">
  <data key="d6">declares</data>
</edge>
<edge source="onTransact" target="readCString">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="setInternalOption">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="end">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="storeMetaDataInBuffers">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="write">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="configureVideoTunnelMode">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="sysconf">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="dup">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readInt32">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readInt64">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="createPersistentInputSurface">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="useGraphicBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="GraphicBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="setParameter">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="CHECK_OMX_INTERFACE">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="TRESPASS">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="updateGraphicBufferInMeta">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeInt64">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="getConfig">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="enableGraphicBuffers">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="read">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="readStrongBinder">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="getState">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="mprotect">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="getExtensionIndex">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeInt32">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="munmap">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeNativeHandle">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="allocateBufferWithBackup">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="signalEndOfInputStream">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="allocateBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="setInputSurface">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeString8">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="listNodes">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="getParameter">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="prepareForAdaptivePlayback">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="allocateNode">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="writeStrongBinder">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="android_errorWriteLog">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="mmap">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="getGraphicBufferUsage">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="createInputSurface">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="useBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="setConfig">
  <data key="d6">calls</data>
</edge>
<edge source="onTransact" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="for_19">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="for_20">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="switch_21">
  <data key="d6">contains</data>
</edge>
<edge source="onTransact" target="switch_22">
  <data key="d6">contains</data>
</edge>
<edge source="sideband_handle" target="configureVideoTunnelMode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sideband_handle" target="writeNativeHandle">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sideband_handle" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sideband_handle" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pageSize" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pageSize" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pageSize" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pid" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pid" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fenceFd" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fenceFd" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="setInternalOption">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="setParameter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="getConfig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="ALOGE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="allocateBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="getParameter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="setConfig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="for_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="ALOGE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buffer_data" target="allocateBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buffer_data" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buffer_data" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="allocSize" target="munmap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="allocSize" target="mmap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="allocSize" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="allocSize" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="allocSize" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="parameter_name" target="getExtensionIndex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="parameter_name" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="name" target="getExtensionIndex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="name" target="allocateNode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="name" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="switch_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="code" target="onTransact">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="code" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="writeInt32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="onTransact">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="setInternalOption">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="setParameter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="getConfig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="munmap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="allocateBufferWithBackup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="getParameter">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="useBuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="setConfig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="params" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="params" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>