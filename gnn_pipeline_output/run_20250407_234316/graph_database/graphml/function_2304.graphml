<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-1675</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="TestUntendedLoad">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="total_bytes_to_be_received">
  <data key="d3">Variable</data>
</node>
<node id="bytes_received">
  <data key="d3">Variable</data>
</node>
<node id="request">
  <data key="d3">FunctionCall</data>
</node>
<node id="CHECK_CALLBACK_BEHAVIOR">
  <data key="d3">FunctionCall</data>
</node>
<node id="ASSERT_EQ">
  <data key="d3">FunctionCall</data>
</node>
<node id="event">
  <data key="d3">FunctionCall</data>
</node>
<node id="PostSignal">
  <data key="d3">FunctionCall</data>
</node>
<node id="WaitForResult">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetDownloadProgress">
  <data key="d3">FunctionCall</data>
</node>
<node id="callback">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetRecordDownloadProgress">
  <data key="d3">FunctionCall</data>
</node>
<node id="PASS">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetURL">
  <data key="d3">FunctionCall</data>
</node>
<node id="loader">
  <data key="d3">FunctionCall</data>
</node>
<node id="Wait">
  <data key="d3">FunctionCall</data>
</node>
<node id="ReadEntireResponseBody">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">total_bytes_to_be_received &lt;= 0</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">bytes_received == total_bytes_to_be_received</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">pp::Module::Get(</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!error.empty(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">body != "hello\n"</data>
</node>
<node id="while_5">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">true</data>
</node>
<edge source="TestUntendedLoad" target="total_bytes_to_be_received">
  <data key="d5">declares</data>
</edge>
<edge source="TestUntendedLoad" target="bytes_received">
  <data key="d5">declares</data>
</edge>
<edge source="TestUntendedLoad" target="request">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="CHECK_CALLBACK_BEHAVIOR">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="ASSERT_EQ">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="event">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="PostSignal">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="WaitForResult">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="GetDownloadProgress">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="callback">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="SetRecordDownloadProgress">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="PASS">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="SetURL">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="loader">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="Wait">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="ReadEntireResponseBody">
  <data key="d5">calls</data>
</edge>
<edge source="TestUntendedLoad" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="TestUntendedLoad" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="TestUntendedLoad" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="TestUntendedLoad" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="TestUntendedLoad" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="TestUntendedLoad" target="while_5">
  <data key="d5">contains</data>
</edge>
<edge source="total_bytes_to_be_received" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="total_bytes_to_be_received" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="total_bytes_to_be_received" target="GetDownloadProgress">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="total_bytes_to_be_received" target="while_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="bytes_received" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="bytes_received" target="GetDownloadProgress">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="bytes_received" target="while_5">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>