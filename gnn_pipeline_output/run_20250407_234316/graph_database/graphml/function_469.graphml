<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-3184</data>
<data key="d2">4.7</data>
<data key="d3">MEDIUM</data>
<node id="lg_report_fixup">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="drv_data">
  <data key="d4">Variable</data>
</node>
<node id="hdev">
  <data key="d4">Variable</data>
</node>
<node id="int">
  <data key="d4">Variable</data>
</node>
<node id="udesc">
  <data key="d4">Variable</data>
</node>
<node id="le16_to_cpu">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="hid_to_usb_dev">
  <data key="d4">FunctionCall</data>
</node>
<node id="hid_info">
  <data key="d4">FunctionCall</data>
</node>
<node id="hid_err">
  <data key="d4">FunctionCall</data>
</node>
<node id="hid_get_drvdata">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(drv_data-&gt;quirks &amp; LG_RDESC</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(drv_data-&gt;quirks &amp; LG_RDESC_REL_ABS</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!udesc</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rev_maj == 1 &amp;&amp; rev_min == 2 &amp;&amp;
				*rsize == DF_RDESC_ORIG_SIZE</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*rsize == MOMO_RDESC_ORIG_SIZE</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*rsize == MOMO2_RDESC_ORIG_SIZE</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*rsize == FV_RDESC_ORIG_SIZE</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*rsize == DFP_RDESC_ORIG_SIZE</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*rsize &gt;= 101 &amp;&amp; rdesc[41] == 0x95 &amp;&amp; rdesc[42] == 0x0B &amp;&amp;
				rdesc[47] == 0x05 &amp;&amp; rdesc[48] == 0x09</data>
</node>
<node id="switch_9">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">hdev-&gt;product</data>
</node>
<edge source="lg_report_fixup" target="drv_data">
  <data key="d6">declares</data>
</edge>
<edge source="lg_report_fixup" target="hdev">
  <data key="d6">declares</data>
</edge>
<edge source="lg_report_fixup" target="int">
  <data key="d6">declares</data>
</edge>
<edge source="lg_report_fixup" target="udesc">
  <data key="d6">declares</data>
</edge>
<edge source="lg_report_fixup" target="le16_to_cpu">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="hid_to_usb_dev">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="hid_info">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="hid_err">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="hid_get_drvdata">
  <data key="d6">calls</data>
</edge>
<edge source="lg_report_fixup" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="lg_report_fixup" target="switch_9">
  <data key="d6">contains</data>
</edge>
<edge source="drv_data" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="drv_data" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="hdev" target="switch_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="hid_to_usb_dev">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hdev" target="hid_info">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hdev" target="lg_report_fixup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hdev" target="hid_err">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hdev" target="hid_get_drvdata">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="hdev" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="hdev" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int" target="lg_report_fixup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="udesc" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="udesc" target="le16_to_cpu">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="udesc" target="switch_9">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>