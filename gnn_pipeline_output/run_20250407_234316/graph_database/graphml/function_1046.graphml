<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-6348</data>
<data key="d3">4.9</data>
<data key="d4">MEDIUM</data>
<node id="hashbin_delete">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="flags">
  <data key="d5">Variable</data>
</node>
<node id="spin_lock_irqsave_nested">
  <data key="d5">FunctionCall</data>
</node>
<node id="dequeue_first">
  <data key="d5">FunctionCall</data>
</node>
<node id="spin_unlock_irqrestore">
  <data key="d5">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> hashbin-&gt;hb_type &amp; HB_LOCK </data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">free_func</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> hashbin-&gt;hb_type &amp; HB_LOCK</data>
</node>
<node id="for_3">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; HASHBIN_SIZE; i ++ </data>
</node>
<node id="while_4">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">queue </data>
</node>
<edge source="hashbin_delete" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="hashbin_delete" target="flags">
  <data key="d7">declares</data>
</edge>
<edge source="hashbin_delete" target="spin_lock_irqsave_nested">
  <data key="d7">calls</data>
</edge>
<edge source="hashbin_delete" target="dequeue_first">
  <data key="d7">calls</data>
</edge>
<edge source="hashbin_delete" target="spin_unlock_irqrestore">
  <data key="d7">calls</data>
</edge>
<edge source="hashbin_delete" target="kfree">
  <data key="d7">calls</data>
</edge>
<edge source="hashbin_delete" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="hashbin_delete" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="hashbin_delete" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="hashbin_delete" target="for_3">
  <data key="d7">contains</data>
</edge>
<edge source="hashbin_delete" target="while_4">
  <data key="d7">contains</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="flags" target="spin_lock_irqsave_nested">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="spin_unlock_irqrestore">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="flags" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="flags" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="flags" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>