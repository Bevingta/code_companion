<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9150</data>
<data key="d2">2.1</data>
<data key="d3">LOW</data>
<node id="print_bpf_insn">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="insn">
  <data key="d4">Variable</data>
</node>
<node id="BPF_CLASS">
  <data key="d4">FunctionCall</data>
</node>
<node id="verbose">
  <data key="d4">FunctionCall</data>
</node>
<node id="BPF_OP">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_ALU || class == BPF_ALU64</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_SRC(insn-&gt;code</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_STX</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_ST</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_LDX</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_LD</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_MODE(insn-&gt;code</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">class == BPF_JMP</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opcode == BPF_CALL</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">insn-&gt;code == (BPF_JMP | BPF_JA</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">insn-&gt;code == (BPF_JMP | BPF_EXIT</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BPF_SRC(insn-&gt;code</data>
</node>
<edge source="print_bpf_insn" target="insn">
  <data key="d6">declares</data>
</edge>
<edge source="print_bpf_insn" target="BPF_CLASS">
  <data key="d6">calls</data>
</edge>
<edge source="print_bpf_insn" target="verbose">
  <data key="d6">calls</data>
</edge>
<edge source="print_bpf_insn" target="BPF_OP">
  <data key="d6">calls</data>
</edge>
<edge source="print_bpf_insn" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="print_bpf_insn" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="insn" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="BPF_CLASS">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="insn" target="verbose">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="insn" target="BPF_OP">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="insn" target="print_bpf_insn">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="insn" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="insn" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>