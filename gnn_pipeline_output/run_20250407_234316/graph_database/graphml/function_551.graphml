<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2015-5283</data>
<data key="d3">4.7</data>
<data key="d4">MEDIUM</data>
<node id="sctp_init">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="max_share">
  <data key="d5">Variable</data>
</node>
<node id="status">
  <data key="d5">Variable</data>
</node>
<node id="limit">
  <data key="d5">Variable</data>
</node>
<node id="order">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="goal">
  <data key="d5">Variable</data>
</node>
<node id="spin_lock_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d5">FunctionCall</data>
</node>
<node id="kmem_cache_destroy">
  <data key="d5">FunctionCall</data>
</node>
<node id="pr_err">
  <data key="d5">FunctionCall</data>
</node>
<node id="max">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_sysctl_register">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_protosw_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="kmem_cache_create">
  <data key="d5">FunctionCall</data>
</node>
<node id="percpu_counter_destroy">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_del_protocol">
  <data key="d5">FunctionCall</data>
</node>
<node id="__get_free_pages">
  <data key="d5">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d5">FunctionCall</data>
</node>
<node id="pr_info">
  <data key="d5">FunctionCall</data>
</node>
<node id="sock_skb_cb_check_size">
  <data key="d5">FunctionCall</data>
</node>
<node id="rwlock_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_pf_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v6_protosw_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v6_pf_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="min">
  <data key="d5">FunctionCall</data>
</node>
<node id="unregister_pernet_subsys">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_add_protocol">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_protosw_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="INIT_LIST_HEAD">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_sysctl_unregister">
  <data key="d5">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v6_add_protocol">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v6_protosw_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="free_pages">
  <data key="d5">FunctionCall</data>
</node>
<node id="SKB_TRUESIZE">
  <data key="d5">FunctionCall</data>
</node>
<node id="register_pernet_subsys">
  <data key="d5">FunctionCall</data>
</node>
<node id="idr_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="nr_free_buffer_pages">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v4_pf_exit">
  <data key="d5">FunctionCall</data>
</node>
<node id="INIT_HLIST_HEAD">
  <data key="d5">FunctionCall</data>
</node>
<node id="percpu_counter_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="sctp_v6_pf_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!sctp_bucket_cachep</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!sctp_chunk_cachep</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">totalram_pages &gt;= (128 * 1024</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(sctp_assoc_hashsize &gt; (64 * 1024</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!sctp_assoc_hashtable</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!sctp_ep_hashtable</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(sctp_port_hashsize &gt; (64 * 1024</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!sctp_port_hashtable</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status</data>
</node>
<node id="for_14">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">order = 0; (1UL &lt;&lt; order</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; sctp_assoc_hashsize; i++</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; sctp_ep_hashsize; i++</data>
</node>
<node id="for_17">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; sctp_port_hashsize; i++</data>
</node>
<node id="while_18">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">!sctp_assoc_hashtable &amp;&amp; --order &gt; 0</data>
</node>
<node id="while_19">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">!sctp_port_hashtable &amp;&amp; --order &gt; 0</data>
</node>
<edge source="sctp_init" target="max_share">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="status">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="limit">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="order">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="goal">
  <data key="d7">declares</data>
</edge>
<edge source="sctp_init" target="spin_lock_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sizeof">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="kmem_cache_destroy">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="pr_err">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="max">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_sysctl_register">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_protosw_exit">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="kmem_cache_create">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="percpu_counter_destroy">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_del_protocol">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="__get_free_pages">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="kfree">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="pr_info">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sock_skb_cb_check_size">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="rwlock_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_pf_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v6_protosw_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v6_pf_exit">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="min">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="unregister_pernet_subsys">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_add_protocol">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_protosw_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="INIT_LIST_HEAD">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_sysctl_unregister">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="kmalloc">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v6_add_protocol">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v6_protosw_exit">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="free_pages">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="SKB_TRUESIZE">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="register_pernet_subsys">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="idr_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="nr_free_buffer_pages">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v4_pf_exit">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="INIT_HLIST_HEAD">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="percpu_counter_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="sctp_v6_pf_init">
  <data key="d7">calls</data>
</edge>
<edge source="sctp_init" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="for_14">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="for_17">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="while_18">
  <data key="d7">contains</data>
</edge>
<edge source="sctp_init" target="while_19">
  <data key="d7">contains</data>
</edge>
<edge source="max_share" target="max">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="status" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="status" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="while_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="status" target="while_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="limit" target="max">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="limit" target="min">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="order" target="for_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="order" target="while_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="order" target="while_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="order" target="__get_free_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="order" target="free_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="order" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="order" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="order" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="order" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_17">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>