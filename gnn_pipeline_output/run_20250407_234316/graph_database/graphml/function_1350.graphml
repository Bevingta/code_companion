<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-8828</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="tmx_check_pretran">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="msg">
  <data key="d4">Variable</data>
</node>
<node id="dsize">
  <data key="d4">Variable</data>
</node>
<node id="vbr">
  <data key="d4">Variable</data>
</node>
<node id="slotid">
  <data key="d4">Variable</data>
</node>
<node id="it">
  <data key="d4">Variable</data>
</node>
<node id="chid">
  <data key="d4">Variable</data>
</node>
<node id="get_cseq">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_from">
  <data key="d4">FunctionCall</data>
</node>
<node id="tmx_pretran_link_safe">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="trim">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_hash1_raw">
  <data key="d4">FunctionCall</data>
</node>
<node id="lock_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="LM_ERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="shm_malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="lock_release">
  <data key="d4">FunctionCall</data>
</node>
<node id="my_pid">
  <data key="d4">FunctionCall</data>
</node>
<node id="tmx_pretran_unlink">
  <data key="d4">FunctionCall</data>
</node>
<node id="LM_DBG">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_ptran_table==NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_route_type(</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg-&gt;first_line.type!=SIP_REQUEST</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parse_headers(msg, HDR_FROM_F|HDR_VIA1_F|HDR_CALLID_F|HDR_CSEQ_F, 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg-&gt;cseq==NULL || msg-&gt;cseq-&gt;parsed==NULL</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_cseq(msg</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg-&gt;via1==0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">parse_from_header(msg</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">msg-&gt;callid==NULL || msg-&gt;callid-&gt;body.s==NULL</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(_tmx_proc_ptran == NULL</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran == NULL</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">likely(vbr!=NULL</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dsize&lt;256</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dsize &gt; _tmx_proc_ptran-&gt;dbuf.len</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;dbuf.s</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;dbuf.s==NULL</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">likely(vbr!=NULL</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;hid != it-&gt;hid
				|| _tmx_proc_ptran-&gt;cseqmetid != it-&gt;cseqmetid
				|| _tmx_proc_ptran-&gt;callid.len != it-&gt;callid.len
				|| _tmx_proc_ptran-&gt;ftag.len != it-&gt;ftag.len
				|| _tmx_proc_ptran-&gt;cseqmet.len != it-&gt;cseqmet.len
				|| _tmx_proc_ptran-&gt;cseqnum.len != it-&gt;cseqnum.len</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;vbranch.s != NULL &amp;&amp; it-&gt;vbranch.s != NULL</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;vbranch.len != it-&gt;vbranch.len</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_tmx_proc_ptran-&gt;vbranch.s[it-&gt;vbranch.len-1]
					!= it-&gt;vbranch.s[it-&gt;vbranch.len-1]</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp(_tmx_proc_ptran-&gt;vbranch.s,
						it-&gt;vbranch.s, it-&gt;vbranch.len</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vbr &amp;&amp; vbr-&gt;value.s &amp;&amp; vbr-&gt;value.len &gt; MCOOKIE_LEN
			 *  &amp;&amp; memcmp(vbr-&gt;value.s, MCOOKIE, MCOOKIE_LEN</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp(_tmx_proc_ptran-&gt;callid.s,
					it-&gt;callid.s, it-&gt;callid.len</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(it-&gt;cseqmetid==METHOD_OTHER || it-&gt;cseqmetid==METHOD_UNDEF</data>
</node>
<node id="for_25">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; it!=NULL; it=it-&gt;next</data>
</node>
<edge source="tmx_check_pretran" target="msg">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="dsize">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="vbr">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="slotid">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="it">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="chid">
  <data key="d6">declares</data>
</edge>
<edge source="tmx_check_pretran" target="get_cseq">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="get_from">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="tmx_pretran_link_safe">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="trim">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="get_hash1_raw">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="lock_get">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="LM_ERR">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="shm_malloc">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="lock_release">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="my_pid">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="tmx_pretran_unlink">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="LM_DBG">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="tmx_check_pretran" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="tmx_check_pretran" target="for_25">
  <data key="d6">contains</data>
</edge>
<edge source="msg" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="msg" target="get_cseq">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="get_from">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="tmx_check_pretran">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="msg" target="get_hash1_raw">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dsize" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dsize" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dsize" target="shm_malloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dsize" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vbr" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vbr" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vbr" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vbr" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vbr" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vbr" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vbr" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vbr" target="trim">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vbr" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vbr" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vbr" target="for_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slotid" target="tmx_pretran_link_safe">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="slotid" target="lock_get">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="slotid" target="lock_release">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="slotid" target="for_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="it" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="it" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="it" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="it" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="it" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="it" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="it" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="it" target="for_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="it" target="LM_ERR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="it" target="LM_DBG">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>