<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-7645</data>
<data key="d3">7.8</data>
<data key="d4">HIGH</data>
<node id="nfsd_dispatch">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="rqstp">
  <data key="d5">Variable</data>
</node>
<node id="proc">
  <data key="d5">Variable</data>
</node>
<node id="xdr">
  <data key="d5">Variable</data>
</node>
<node id="dprintk">
  <data key="d5">FunctionCall</data>
</node>
<node id="nfsd_cache_update">
  <data key="d5">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d5">FunctionCall</data>
</node>
<node id="map_new_errors">
  <data key="d5">FunctionCall</data>
</node>
<node id="pc_func">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">xdr &amp;&amp; !xdr(rqstp, (__be32*</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nfserr == nfserr_dropit || test_bit(RQ_DROPME, &amp;rqstp-&gt;rq_flags</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">rqstp-&gt;rq_proc != 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!(nfserr &amp;&amp; rqstp-&gt;rq_vers == 2</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">xdr &amp;&amp; !xdr(rqstp, nfserrp,
				rqstp-&gt;rq_resp</data>
</node>
<node id="switch_5">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">nfsd_cache_lookup(rqstp</data>
</node>
<edge source="nfsd_dispatch" target="rqstp">
  <data key="d7">declares</data>
</edge>
<edge source="nfsd_dispatch" target="proc">
  <data key="d7">declares</data>
</edge>
<edge source="nfsd_dispatch" target="xdr">
  <data key="d7">declares</data>
</edge>
<edge source="nfsd_dispatch" target="dprintk">
  <data key="d7">calls</data>
</edge>
<edge source="nfsd_dispatch" target="nfsd_cache_update">
  <data key="d7">calls</data>
</edge>
<edge source="nfsd_dispatch" target="sizeof">
  <data key="d7">calls</data>
</edge>
<edge source="nfsd_dispatch" target="map_new_errors">
  <data key="d7">calls</data>
</edge>
<edge source="nfsd_dispatch" target="pc_func">
  <data key="d7">calls</data>
</edge>
<edge source="nfsd_dispatch" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="nfsd_dispatch" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="nfsd_dispatch" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="nfsd_dispatch" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="nfsd_dispatch" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="nfsd_dispatch" target="switch_5">
  <data key="d7">contains</data>
</edge>
<edge source="rqstp" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rqstp" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rqstp" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rqstp" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rqstp" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="rqstp" target="switch_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="rqstp" target="dprintk">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rqstp" target="nfsd_dispatch">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rqstp" target="nfsd_cache_update">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rqstp" target="map_new_errors">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="rqstp" target="pc_func">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="proc" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="proc" target="dprintk">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="proc" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="xdr" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="xdr" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="xdr" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="xdr" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>