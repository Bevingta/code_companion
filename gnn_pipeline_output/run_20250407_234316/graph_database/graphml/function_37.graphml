<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-16863</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="zrestore">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="asave">
  <data key="d4">Variable</data>
</node>
<node id="code">
  <data key="d4">Variable</data>
</node>
<node id="vmsave">
  <data key="d4">Variable</data>
</node>
<node id="i_ctx_p">
  <data key="d4">Variable</data>
</node>
<node id="restore_check_operand">
  <data key="d4">FunctionCall</data>
</node>
<node id="ivalidate_clean_spaces">
  <data key="d4">FunctionCall</data>
</node>
<node id="restore_fix_stack">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_debug2m">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">code &lt; 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">I_VALIDATE_BEFORE_RESTORE</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(code = restore_check_stack(i_ctx_p, &amp;o_stack, asave, false</data>
</node>
<edge source="zrestore" target="asave">
  <data key="d6">declares</data>
</edge>
<edge source="zrestore" target="code">
  <data key="d6">declares</data>
</edge>
<edge source="zrestore" target="vmsave">
  <data key="d6">declares</data>
</edge>
<edge source="zrestore" target="i_ctx_p">
  <data key="d6">declares</data>
</edge>
<edge source="zrestore" target="restore_check_operand">
  <data key="d6">calls</data>
</edge>
<edge source="zrestore" target="ivalidate_clean_spaces">
  <data key="d6">calls</data>
</edge>
<edge source="zrestore" target="restore_fix_stack">
  <data key="d6">calls</data>
</edge>
<edge source="zrestore" target="if_debug2m">
  <data key="d6">calls</data>
</edge>
<edge source="zrestore" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="zrestore" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="zrestore" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="asave" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="asave" target="restore_check_operand">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="asave" target="restore_fix_stack">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="asave" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="asave" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="code" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i_ctx_p" target="zrestore">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="ivalidate_clean_spaces">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="restore_fix_stack">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="i_ctx_p" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i_ctx_p" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>