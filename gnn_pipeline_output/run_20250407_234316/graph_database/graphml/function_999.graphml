<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-9075</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="sctp_v6_create_accept_sk">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="newsk">
  <data key="d3">Variable</data>
</node>
<node id="asoc">
  <data key="d3">Variable</data>
</node>
<node id="newsctp6sk">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="opt">
  <data key="d3">Variable</data>
</node>
<node id="inet6_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_common_release">
  <data key="d3">FunctionCall</data>
</node>
<node id="RCU_INIT_POINTER">
  <data key="d3">FunctionCall</data>
</node>
<node id="getsockname">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_alloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="inet_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="sctp_copy_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_init_data">
  <data key="d3">FunctionCall</data>
</node>
<node id="sk_refcnt_debug_inc">
  <data key="d3">FunctionCall</data>
</node>
<node id="sock_reset_flag">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_dereference">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!newsk</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">opt</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">newsk-&gt;sk_prot-&gt;init(newsk</data>
</node>
<edge source="sctp_v6_create_accept_sk" target="newsk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="asoc">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="newsctp6sk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="opt">
  <data key="d5">declares</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="inet6_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="rcu_read_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sk_common_release">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="RCU_INIT_POINTER">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="getsockname">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sk_alloc">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="inet_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sctp_sk">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sctp_copy_sock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sock_init_data">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sk_refcnt_debug_inc">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="sock_reset_flag">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="rcu_read_lock">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="rcu_dereference">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sctp_v6_create_accept_sk" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="newsk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="newsk" target="inet6_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sk_common_release">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sock_init_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="sk_refcnt_debug_inc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="newsk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="asoc" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="asoc" target="sctp_v6_create_accept_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="inet6_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_common_release">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="inet_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_copy_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_init_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sk_refcnt_debug_inc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sctp_v6_create_accept_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="sock_reset_flag">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="opt" target="RCU_INIT_POINTER">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="opt" target="rcu_dereference">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>