<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-5353</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="fp_set_per_packet_inf_from_conv">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="cur_val">
  <data key="d5">Variable</data>
</node>
<node id="p_conv_data">
  <data key="d5">Variable</data>
</node>
<node id="tvb">
  <data key="d5">Variable</data>
</node>
<node id="offset">
  <data key="d5">Variable</data>
</node>
<node id="tvb_get_bits8">
  <data key="d5">FunctionCall</data>
</node>
<node id="expert_add_info">
  <data key="d5">FunctionCall</data>
</node>
<node id="tvb_get_guint8">
  <data key="d5">FunctionCall</data>
</node>
<node id="multiplexed">
  <data key="d5">FunctionCall</data>
</node>
<node id="completed">
  <data key="d5">FunctionCall</data>
</node>
<node id="make_fake_lchid">
  <data key="d5">FunctionCall</data>
</node>
<node id="p_add_proto_data">
  <data key="d5">FunctionCall</data>
</node>
<node id="wmem_new0">
  <data key="d5">FunctionCall</data>
</node>
<node id="id">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!pinfo-&gt;fd-&gt;flags.visited &amp;&amp;  p_conv_data-&gt;reset_frag </data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pinfo-&gt;link_dir == P2P_DIR_UL</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">fpi-&gt;hsdsch_entity == hs /*&amp;&amp; !rlc_is_ciphered(pinfo</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(cur_val=(gint *</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_control_frame</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_control_frame</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> p_conv_data-&gt;dchs_in_flow_list[chan] != 31 &amp;&amp; (p_conv_data-&gt;dchs_in_flow_list[chan] == 24 &amp;&amp;
                     tb_size != 340</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> p_conv_data-&gt;dchs_in_flow_list[chan] == 31 || p_conv_data-&gt;dchs_in_flow_list[chan] == 24</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">0/*p_conv_data-&gt;dchs_in_flow_list[chan] == 31 &amp;&amp; num_tbs == 1*/</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p_conv_data-&gt;dchs_in_flow_list[chan] == 24 &amp;&amp; tb_size != 340</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> rrc_ciph_inf &amp;&amp; g_tree_lookup(rrc_ciph_inf, GINT_TO_POINTER((gint</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_control_frame</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_control_frame</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pinfo-&gt;link_dir == P2P_DIR_UL</data>
</node>
<node id="for_14">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i&lt;MAX_NUM_HSDHSCH_MACDFLOW; i++</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i&lt;fpi-&gt;no_ddi_entries; i++</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">chan=0; chan &lt; fpi-&gt;num_chans; chan++</data>
</node>
<node id="for_17">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">j=0; j &lt; num_tbs &amp;&amp; j+chan &lt; MAX_MAC_FRAMES; j++</data>
</node>
<node id="for_18">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> chan = 0; chan &lt; fpi-&gt;num_chans; chan++ </data>
</node>
<node id="for_19">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i&lt;fpi-&gt;num_chans; i++</data>
</node>
<node id="switch_20">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">fpi-&gt;channel</data>
</node>
<node id="switch_21">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">p_conv_data-&gt;rlc_mode</data>
</node>
<edge source="fp_set_per_packet_inf_from_conv" target="cur_val">
  <data key="d7">declares</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="p_conv_data">
  <data key="d7">declares</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="tvb">
  <data key="d7">declares</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="offset">
  <data key="d7">declares</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="tvb_get_bits8">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="expert_add_info">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="tvb_get_guint8">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="multiplexed">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="completed">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="make_fake_lchid">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="p_add_proto_data">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="wmem_new0">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="id">
  <data key="d7">calls</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_14">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_17">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_18">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="for_19">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="switch_20">
  <data key="d7">contains</data>
</edge>
<edge source="fp_set_per_packet_inf_from_conv" target="switch_21">
  <data key="d7">contains</data>
</edge>
<edge source="cur_val" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cur_val" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cur_val" target="for_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="cur_val" target="switch_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p_conv_data" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p_conv_data" target="switch_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p_conv_data" target="tvb_get_bits8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p_conv_data" target="fp_set_per_packet_inf_from_conv">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p_conv_data" target="make_fake_lchid">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p_conv_data" target="id">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p_conv_data" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="for_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="p_conv_data" target="switch_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tvb" target="tvb_get_bits8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="tvb" target="fp_set_per_packet_inf_from_conv">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="tvb" target="tvb_get_guint8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="tvb" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tvb" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tvb" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tvb" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tvb" target="switch_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="offset" target="tvb_get_bits8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="offset" target="tvb_get_guint8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="offset" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="offset" target="for_16">
  <data key="d7">used_in_body</data>
</edge>
<edge source="offset" target="for_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="offset" target="for_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="offset" target="switch_20">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>