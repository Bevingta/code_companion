<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-10048</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="NewXMLTree">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="xml">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="NewXMLTreeTag">
  <data key="d5">FunctionCall</data>
</node>
<node id="strstr">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyXMLTreeAttributes">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcspn">
  <data key="d5">FunctionCall</data>
</node>
<node id="ResizeQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="strspn">
  <data key="d5">FunctionCall</data>
</node>
<node id="ConstantString">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseInternalDoctype">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseProcessingInstructions">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseOpenTag">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowMagickException">
  <data key="d5">FunctionCall</data>
</node>
<node id="ConvertUTF16ToUTF8">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseEntities">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d5">FunctionCall</data>
</node>
<node id="strchr">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseCloseTag">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(xml == (const char *</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">utf8 == (char *</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '\0'</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(isalpha((int</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">root-&gt;node == (XMLTreeInfo *</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ignore_depth == 0</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l == 0</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">attributes == (char **</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*p != '='</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(c == '"'</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p != '\0'</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '/'</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">((*p != '\0'</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l != 0</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ignore_depth == 0</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*p == '&gt;'</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ignore_depth == 0</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l != 0</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '/'</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(c == '\0'</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ignore_depth == 0 &amp;&amp; ParseCloseTag(root,tag,exception</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ignore_depth &gt; 0</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">isspace((int</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strncmp(p,"!--",3</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(p == (char *</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strncmp(p,"![CDATA[",8</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p != (char *</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ignore_depth == 0</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strncmp(p,"!DOCTYPE",8</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*p == '\0'</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l != 0</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">l != 0</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '?'</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (char *</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(p == (char *</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(p == (char *</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="if_39">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '\0'</data>
</node>
<node id="if_40">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ignore_depth == 0</data>
</node>
<node id="if_41">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '\0'</data>
</node>
<node id="if_42">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">root-&gt;node == (XMLTreeInfo *</data>
</node>
<node id="if_43">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">root-&gt;node-&gt;tag == (char *</data>
</node>
<node id="for_44">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">p++; ; p++</data>
</node>
<node id="for_45">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">l=0; (*p != '\0'</data>
</node>
<node id="for_46">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">l=0; (*p != '\0'</data>
</node>
<node id="while_47">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="while_48">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">isspace((int</data>
</node>
<node id="while_49">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(root-&gt;attributes[i] != (char **</data>
</node>
<node id="while_50">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="while_51">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(attribute != (char **</data>
</node>
<node id="while_52">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">isspace((int</data>
</node>
<node id="while_53">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="while_54">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(*p != '\0'</data>
</node>
<node id="while_55">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">(*p != '\0'</data>
</node>
<edge source="NewXMLTree" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="NewXMLTree" target="xml">
  <data key="d7">declares</data>
</edge>
<edge source="NewXMLTree" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="NewXMLTree" target="NewXMLTreeTag">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="strstr">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="DestroyXMLTreeAttributes">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="strcspn">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ResizeQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="strspn">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ConstantString">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ParseInternalDoctype">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ParseProcessingInstructions">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ParseOpenTag">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ThrowMagickException">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ConvertUTF16ToUTF8">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ParseEntities">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="DestroyString">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="strchr">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="ParseCloseTag">
  <data key="d7">calls</data>
</edge>
<edge source="NewXMLTree" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_39">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_40">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_41">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_42">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="if_43">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="for_44">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="for_45">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="for_46">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_47">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_48">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_49">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_50">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_51">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_52">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_53">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_54">
  <data key="d7">contains</data>
</edge>
<edge source="NewXMLTree" target="while_55">
  <data key="d7">contains</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_33">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_49">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_52">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="xml" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="xml" target="NewXMLTree">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="xml" target="strlen">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="xml" target="ConvertUTF16ToUTF8">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_24">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_35">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_39">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_40">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_44">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_45">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="for_46">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_47">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_50">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_52">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_53">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_54">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="while_55">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>