<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-0836</data>
<data key="d2">10.0</data>
<data key="d3">HIGH</data>
<node id="impeg2d_vld_decode">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="ps_dec">
  <data key="d4">Variable</data>
</node>
<node id="ps_stream">
  <data key="d4">Variable</data>
</node>
<node id="IBITS_GET">
  <data key="d4">FunctionCall</data>
</node>
<node id="FLC">
  <data key="d4">FunctionCall</data>
</node>
<node id="CLZ">
  <data key="d4">FunctionCall</data>
</node>
<node id="GET_TEMP_STREAM_DATA">
  <data key="d4">FunctionCall</data>
</node>
<node id="FLUSH_BITS">
  <data key="d4">FunctionCall</data>
</node>
<node id="BITS">
  <data key="d4">FunctionCall</data>
</node>
<node id="IBITS_NXT">
  <data key="d4">FunctionCall</data>
</node>
<node id="PUT_TEMP_STREAM_DATA">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u2_intra_flag</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u2_chroma_flag != 0</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">dc_size != 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dc_diff &amp; (1 &lt;&lt; (dc_size - 1</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">0 != dc_diff</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_bits == 1</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_bits == 1</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">1 == u2_d_picture</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">1 == u2_intra_vlc_format &amp;&amp; u2_intra_flag</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">0 != u4_level</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DecodedValue == END_OF_BLOCK_ONE</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">0 != lead_zeros</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">1 == lead_zeros</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u2_mpeg2 == 1</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_level</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_level_first_byte &amp; 0x7F</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_numCoeffs &gt; 64</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">0 != u4_level</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DecodedValue == END_OF_BLOCK_ZERO</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">0 != lead_zeros</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">1 == lead_zeros</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u2_mpeg2 == 1</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_level</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_level_first_byte &amp; 0x7F</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">u4_numCoeffs &gt; 64</data>
</node>
<node id="while_25">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">end &gt; 0</data>
</node>
<node id="while_26">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<node id="while_27">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<edge source="impeg2d_vld_decode" target="ps_dec">
  <data key="d6">declares</data>
</edge>
<edge source="impeg2d_vld_decode" target="ps_stream">
  <data key="d6">declares</data>
</edge>
<edge source="impeg2d_vld_decode" target="IBITS_GET">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="FLC">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="CLZ">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="GET_TEMP_STREAM_DATA">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="FLUSH_BITS">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="BITS">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="IBITS_NXT">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="PUT_TEMP_STREAM_DATA">
  <data key="d6">calls</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="while_25">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="while_26">
  <data key="d6">contains</data>
</edge>
<edge source="impeg2d_vld_decode" target="while_27">
  <data key="d6">contains</data>
</edge>
<edge source="ps_dec" target="impeg2d_vld_decode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ps_stream" target="GET_TEMP_STREAM_DATA">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ps_stream" target="PUT_TEMP_STREAM_DATA">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ps_stream" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>