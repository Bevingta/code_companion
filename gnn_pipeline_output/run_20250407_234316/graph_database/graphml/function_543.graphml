<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-6252</data>
<data key="d2">2.1</data>
<data key="d3">LOW</data>
<node id="vhost_dev_ioctl">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="__user">
  <data key="d4">Variable</data>
</node>
<node id="r">
  <data key="d4">Variable</data>
</node>
<node id="int">
  <data key="d4">Variable</data>
</node>
<node id="ctx">
  <data key="d4">Variable</data>
</node>
<node id="d">
  <data key="d4">Variable</data>
</node>
<node id="vq">
  <data key="d4">Variable</data>
</node>
<node id="mutex_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_dev_set_owner">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_set_memory">
  <data key="d4">FunctionCall</data>
</node>
<node id="vhost_dev_check_owner">
  <data key="d4">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="eventfd_ctx_fileget">
  <data key="d4">FunctionCall</data>
</node>
<node id="eventfd_fget">
  <data key="d4">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ioctl == VHOST_SET_OWNER</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;p, argp, sizeof p</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(u64</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vq-&gt;private_data &amp;&amp; !vq_log_access_ok(vq, base</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">r &lt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(eventfp</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">eventfp != d-&gt;log_file</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ctx</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">filep</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; d-&gt;nvqs; ++i</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; d-&gt;nvqs; ++i</data>
</node>
<node id="switch_12">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">ioctl</data>
</node>
<edge source="vhost_dev_ioctl" target="__user">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="r">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="int">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="ctx">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="d">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="vq">
  <data key="d6">declares</data>
</edge>
<edge source="vhost_dev_ioctl" target="mutex_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="vhost_dev_set_owner">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="get_user">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="vhost_set_memory">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="vhost_dev_check_owner">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="PTR_ERR">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="eventfd_ctx_fileget">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="eventfd_fget">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="mutex_lock">
  <data key="d6">calls</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="vhost_dev_ioctl" target="switch_12">
  <data key="d6">contains</data>
</edge>
<edge source="__user" target="get_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="__user" target="vhost_dev_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="__user" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="__user" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="__user" target="switch_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="r" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="r" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="int" target="get_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="int" target="vhost_dev_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="int" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int" target="switch_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ctx" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ctx" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ctx" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ctx" target="switch_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="d" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vq" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vq" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vq" target="mutex_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="mutex_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="vq" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vq" target="switch_12">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>