<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2011-3083</data>
<data key="d1">5.0</data>
<data key="d2">MEDIUM</data>
<node id="LazyInitializeInternal">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="set_cookie_store">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetSession">
  <data key="d3">FunctionCall</data>
</node>
<node id="extensions_request_context">
  <data key="d3">FunctionCall</data>
</node>
<node id="SQLitePersistentCookieStore">
  <data key="d3">FunctionCall</data>
</node>
<node id="CookieMonster">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_network_delegate">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_chrome_url_data_manager_backend">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_cert_verifier">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetCookieableSchemes">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_job_factory">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_mode">
  <data key="d3">FunctionCall</data>
</node>
<node id="HasSwitch">
  <data key="d3">FunctionCall</data>
</node>
<node id="ApplyProfileParamsToContext">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_fraudulent_certificate_reporter">
  <data key="d3">FunctionCall</data>
</node>
<node id="main_request_context">
  <data key="d3">FunctionCall</data>
</node>
<node id="globals">
  <data key="d3">FunctionCall</data>
</node>
<node id="DefaultBackend">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_http_transaction_factory">
  <data key="d3">FunctionCall</data>
</node>
<node id="DCHECK">
  <data key="d3">FunctionCall</data>
</node>
<node id="job_factory">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_http_auth_handler_factory">
  <data key="d3">FunctionCall</data>
</node>
<node id="reset">
  <data key="d3">FunctionCall</data>
</node>
<node id="ForCurrentProcess">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_host_resolver">
  <data key="d3">FunctionCall</data>
</node>
<node id="OriginBoundCertService">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_origin_bound_cert_service">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_http_server_properties">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_net_log">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_proxy_service">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetClearLocalStateOnExit">
  <data key="d3">FunctionCall</data>
</node>
<node id="HttpCache">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_ftp_transaction_factory">
  <data key="d3">FunctionCall</data>
</node>
<node id="SQLiteOriginBoundCertStore">
  <data key="d3">FunctionCall</data>
</node>
<node id="set_transport_security_state">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">http_server_properties_manager_.get(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">record_mode || playback_mode</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!cookie_store</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">command_line.HasSwitch(switches::kEnableRestoreSessionState</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!origin_bound_cert_service</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">record_mode || playback_mode</data>
</node>
<edge source="LazyInitializeInternal" target="set_cookie_store">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="GetSession">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="extensions_request_context">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="SQLitePersistentCookieStore">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="CookieMonster">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_network_delegate">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_chrome_url_data_manager_backend">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_cert_verifier">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="SetCookieableSchemes">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_job_factory">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_mode">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="HasSwitch">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="ApplyProfileParamsToContext">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_fraudulent_certificate_reporter">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="main_request_context">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="globals">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="DefaultBackend">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_http_transaction_factory">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="DCHECK">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="job_factory">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_http_auth_handler_factory">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="reset">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="ForCurrentProcess">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_host_resolver">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="OriginBoundCertService">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_origin_bound_cert_service">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_http_server_properties">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_net_log">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_proxy_service">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="SetClearLocalStateOnExit">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="HttpCache">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_ftp_transaction_factory">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="SQLiteOriginBoundCertStore">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="set_transport_security_state">
  <data key="d5">calls</data>
</edge>
<edge source="LazyInitializeInternal" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="LazyInitializeInternal" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="LazyInitializeInternal" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="LazyInitializeInternal" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="LazyInitializeInternal" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="LazyInitializeInternal" target="if_5">
  <data key="d5">contains</data>
</edge>
</graph></graphml>