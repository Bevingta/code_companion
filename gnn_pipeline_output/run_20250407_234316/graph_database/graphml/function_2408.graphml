<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2013-6399</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="virtio_load">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="num">
  <data key="d5">Variable</data>
</node>
<node id="features">
  <data key="d5">Variable</data>
</node>
<node id="nheads">
  <data key="d5">Variable</data>
</node>
<node id="supported_features">
  <data key="d5">Variable</data>
</node>
<node id="VIRTIO_BUS_GET_CLASS">
  <data key="d5">FunctionCall</data>
</node>
<node id="load_config">
  <data key="d5">FunctionCall</data>
</node>
<node id="load_queue">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_be64">
  <data key="d5">FunctionCall</data>
</node>
<node id="error_report">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_be16s">
  <data key="d5">FunctionCall</data>
</node>
<node id="qdev_get_parent_bus">
  <data key="d5">FunctionCall</data>
</node>
<node id="vring_avail_idx">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_be32s">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_buffer">
  <data key="d5">FunctionCall</data>
</node>
<node id="virtqueue_init">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_be32">
  <data key="d5">FunctionCall</data>
</node>
<node id="qemu_get_8s">
  <data key="d5">FunctionCall</data>
</node>
<node id="virtio_notify_vector">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">k-&gt;load_config</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">virtio_set_features(vdev, features</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">num &gt; VIRTIO_PCI_QUEUE_MAX</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">k-&gt;has_variable_vring_alignment</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">vdev-&gt;vq[i].pa</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">nheads &gt; vdev-&gt;vq[i].vring.num</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">vdev-&gt;vq[i].last_avail_idx</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">k-&gt;load_queue</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ret</data>
</node>
<node id="for_10">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; num; i++</data>
</node>
<edge source="virtio_load" target="num">
  <data key="d7">declares</data>
</edge>
<edge source="virtio_load" target="features">
  <data key="d7">declares</data>
</edge>
<edge source="virtio_load" target="nheads">
  <data key="d7">declares</data>
</edge>
<edge source="virtio_load" target="supported_features">
  <data key="d7">declares</data>
</edge>
<edge source="virtio_load" target="VIRTIO_BUS_GET_CLASS">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="load_config">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="load_queue">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_be64">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="error_report">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_be16s">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qdev_get_parent_bus">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="vring_avail_idx">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_be32s">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_buffer">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="virtqueue_init">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_be32">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="qemu_get_8s">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="virtio_notify_vector">
  <data key="d7">calls</data>
</edge>
<edge source="virtio_load" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="virtio_load" target="for_10">
  <data key="d7">contains</data>
</edge>
<edge source="num" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="for_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num" target="error_report">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="num" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="features" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="features" target="qemu_get_be32s">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="nheads" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nheads" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="nheads" target="for_10">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>