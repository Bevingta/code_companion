<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2015-8785</data>
<data key="d3">4.9</data>
<data key="d4">MEDIUM</data>
<node id="fuse_fill_write_pages">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="count">
  <data key="d5">Variable</data>
</node>
<node id="ii">
  <data key="d5">Variable</data>
</node>
<node id="tmp">
  <data key="d5">Variable</data>
</node>
<node id="err">
  <data key="d5">Variable</data>
</node>
<node id="pos">
  <data key="d5">Variable</data>
</node>
<node id="offset">
  <data key="d5">Variable</data>
</node>
<node id="mapping">
  <data key="d5">Variable</data>
</node>
<node id="index">
  <data key="d5">Variable</data>
</node>
<node id="page">
  <data key="d5">Variable</data>
</node>
<node id="fc">
  <data key="d5">Variable</data>
</node>
<node id="req">
  <data key="d5">Variable</data>
</node>
<node id="bytes">
  <data key="d5">Variable</data>
</node>
<node id="get_fuse_conn">
  <data key="d5">FunctionCall</data>
</node>
<node id="iov_iter_copy_from_user_atomic">
  <data key="d5">FunctionCall</data>
</node>
<node id="iov_iter_advance">
  <data key="d5">FunctionCall</data>
</node>
<node id="flush_dcache_page">
  <data key="d5">FunctionCall</data>
</node>
<node id="unlock_page">
  <data key="d5">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d5">FunctionCall</data>
</node>
<node id="min">
  <data key="d5">FunctionCall</data>
</node>
<node id="grab_cache_page_write_begin">
  <data key="d5">FunctionCall</data>
</node>
<node id="page_cache_release">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">iov_iter_fault_in_readable(ii, bytes</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!page</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">mapping_writably_mapped(mapping</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!tmp</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">offset == PAGE_CACHE_SIZE</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!fc-&gt;big_writes</data>
</node>
<node id="while_6">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">iov_iter_count(ii</data>
</node>
<edge source="fuse_fill_write_pages" target="count">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="ii">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="tmp">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="err">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="pos">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="offset">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="mapping">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="index">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="page">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="fc">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="req">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="bytes">
  <data key="d7">declares</data>
</edge>
<edge source="fuse_fill_write_pages" target="get_fuse_conn">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="iov_iter_copy_from_user_atomic">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="iov_iter_advance">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="flush_dcache_page">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="unlock_page">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="min_t">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="min">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="grab_cache_page_write_begin">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="page_cache_release">
  <data key="d7">calls</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="fuse_fill_write_pages" target="while_6">
  <data key="d7">contains</data>
</edge>
<edge source="count" target="while_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="min_t">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="count" target="min">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ii" target="while_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ii" target="iov_iter_copy_from_user_atomic">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="iov_iter_advance">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="fuse_fill_write_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="min_t">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="min">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ii" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ii" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ii" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="tmp" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="tmp" target="iov_iter_advance">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pos" target="fuse_fill_write_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="offset" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="offset" target="iov_iter_copy_from_user_atomic">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="offset" target="min_t">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="mapping" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="mapping" target="get_fuse_conn">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="mapping" target="fuse_fill_write_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="mapping" target="grab_cache_page_write_begin">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="index" target="grab_cache_page_write_begin">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="page" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="page" target="iov_iter_copy_from_user_atomic">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="page" target="flush_dcache_page">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="page" target="unlock_page">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="page" target="page_cache_release">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="page" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="page" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="page" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="fc" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="fc" target="min_t">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="req" target="fuse_fill_write_pages">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="iov_iter_copy_from_user_atomic">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes" target="min_t">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes" target="min">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="bytes" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bytes" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>