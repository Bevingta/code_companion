<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-0635</data>
<data key="d2">7.1</data>
<data key="d3">HIGH</data>
<node id="addNalUnit">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="nalUnitType">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="parseVps">
  <data key="d4">FunctionCall</data>
</node>
<node id="setInt32Data">
  <data key="d4">FunctionCall</data>
</node>
<node id="parsePps">
  <data key="d4">FunctionCall</data>
</node>
<node id="parseSps">
  <data key="d4">FunctionCall</data>
</node>
<node id="CreateAsCopy">
  <data key="d4">FunctionCall</data>
</node>
<node id="push">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err != OK</data>
</node>
<node id="switch_1">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">nalUnitType</data>
</node>
<edge source="addNalUnit" target="nalUnitType">
  <data key="d6">declares</data>
</edge>
<edge source="addNalUnit" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="addNalUnit" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="addNalUnit" target="parseVps">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="setInt32Data">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="parsePps">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="parseSps">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="CreateAsCopy">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="push">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="addNalUnit" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="addNalUnit" target="switch_1">
  <data key="d6">contains</data>
</edge>
<edge source="nalUnitType" target="switch_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nalUnitType" target="setInt32Data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="addNalUnit">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="parseVps">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="parsePps">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="parseSps">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="CreateAsCopy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="switch_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="switch_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>