<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-5707</data>
<data key="d1">4.6</data>
<data key="d2">MEDIUM</data>
<node id="sg_start_req">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d3">Variable</data>
</node>
<node id="iov_count">
  <data key="d3">Variable</data>
</node>
<node id="size">
  <data key="d3">Variable</data>
</node>
<node id="long_cmdp">
  <data key="d3">Variable</data>
</node>
<node id="q">
  <data key="d3">Variable</data>
</node>
<node id="res">
  <data key="d3">Variable</data>
</node>
<node id="i">
  <data key="d3">Variable</data>
</node>
<node id="rw">
  <data key="d3">Variable</data>
</node>
<node id="hp">
  <data key="d3">Variable</data>
</node>
<node id="dxfer_dir">
  <data key="d3">Variable</data>
</node>
<node id="dxfer_len">
  <data key="d3">Variable</data>
</node>
<node id="rq">
  <data key="d3">Variable</data>
</node>
<node id="iov">
  <data key="d3">Variable</data>
</node>
<node id="sg_build_indirect">
  <data key="d3">FunctionCall</data>
</node>
<node id="blk_rq_set_block_pc">
  <data key="d3">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="iov_iter_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d3">FunctionCall</data>
</node>
<node id="memdup_user">
  <data key="d3">FunctionCall</data>
</node>
<node id="blk_rq_map_user_iov">
  <data key="d3">FunctionCall</data>
</node>
<node id="blk_rq_map_user">
  <data key="d3">FunctionCall</data>
</node>
<node id="SCSI_LOG_TIMEOUT">
  <data key="d3">FunctionCall</data>
</node>
<node id="blk_get_request">
  <data key="d3">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hp-&gt;cmd_len &gt; BLK_MAX_CDB</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!long_cmdp</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IS_ERR(rq</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">hp-&gt;cmd_len &gt; BLK_MAX_CDB</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(dxfer_len &lt;= 0</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">sg_allow_dio &amp;&amp; hp-&gt;flags &amp; SG_FLAG_DIRECT_IO &amp;&amp;
	    dxfer_dir != SG_DXFER_UNKNOWN &amp;&amp; !iov_count &amp;&amp;
	    !sfp-&gt;parentdp-&gt;device-&gt;host-&gt;unchecked_isa_dma &amp;&amp;
	    blk_rq_aligned(q, (unsigned long</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">md</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!sg_res_in_use(sfp</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">res</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dxfer_dir == SG_DXFER_TO_FROM_DEV</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">unlikely(iov_count &gt; MAX_UIOVEC</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">iov_count</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IS_ERR(iov</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!res</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!md</data>
</node>
<edge source="sg_start_req" target="char">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="iov_count">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="size">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="long_cmdp">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="q">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="res">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="i">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="rw">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="hp">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="dxfer_dir">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="dxfer_len">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="rq">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="iov">
  <data key="d5">declares</data>
</edge>
<edge source="sg_start_req" target="sg_build_indirect">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="blk_rq_set_block_pc">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="sizeof">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="iov_iter_init">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="PTR_ERR">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="memdup_user">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="blk_rq_map_user_iov">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="blk_rq_map_user">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="SCSI_LOG_TIMEOUT">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="blk_get_request">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="kzalloc">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="kfree">
  <data key="d5">calls</data>
</edge>
<edge source="sg_start_req" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="sg_start_req" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="char" target="sg_start_req">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov_count" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="iov_count" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov_count" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov_count" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov_count" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov_count" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="memdup_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="size" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="size" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="long_cmdp" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="long_cmdp" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="long_cmdp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="long_cmdp" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="q" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="q" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="res" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="res" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="res" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="i" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rw" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rw" target="blk_get_request">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rw" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rw" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rw" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rw" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="sg_build_indirect">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="memdup_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="blk_rq_map_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="kzalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hp" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hp" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_dir" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_dir" target="if_9">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dxfer_dir" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_dir" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_dir" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="sg_build_indirect">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dxfer_len" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dxfer_len" target="blk_rq_map_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dxfer_len" target="SCSI_LOG_TIMEOUT">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dxfer_len" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dxfer_len" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="rq" target="blk_rq_set_block_pc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rq" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rq" target="PTR_ERR">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rq" target="blk_rq_map_user_iov">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rq" target="blk_rq_map_user">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="rq" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="rq" target="if_13">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="iov" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="iov" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov" target="iov_iter_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov" target="PTR_ERR">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="iov" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="iov" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>