<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-3137</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="cypress_open">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="port">
  <data key="d3">Variable</data>
</node>
<node id="priv">
  <data key="d3">Variable</data>
</node>
<node id="serial">
  <data key="d3">Variable</data>
</node>
<node id="tty">
  <data key="d3">Variable</data>
</node>
<node id="result">
  <data key="d3">Variable</data>
</node>
<node id="flags">
  <data key="d3">Variable</data>
</node>
<node id="cypress_set_dead">
  <data key="d3">FunctionCall</data>
</node>
<node id="usb_get_serial_port_data">
  <data key="d3">FunctionCall</data>
</node>
<node id="usb_fill_int_urb">
  <data key="d3">FunctionCall</data>
</node>
<node id="usb_submit_urb">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock_irqrestore">
  <data key="d3">FunctionCall</data>
</node>
<node id="cypress_send">
  <data key="d3">FunctionCall</data>
</node>
<node id="usb_clear_halt">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_lock_irqsave">
  <data key="d3">FunctionCall</data>
</node>
<node id="dev_err">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!priv-&gt;comm_is_ok</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">tty</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!port-&gt;interrupt_in_urb</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">result</data>
</node>
<edge source="cypress_open" target="port">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="priv">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="serial">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="tty">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="result">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="flags">
  <data key="d5">declares</data>
</edge>
<edge source="cypress_open" target="cypress_set_dead">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="usb_get_serial_port_data">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="usb_fill_int_urb">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="usb_submit_urb">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="spin_unlock_irqrestore">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="cypress_send">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="usb_clear_halt">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="spin_lock_irqsave">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="dev_err">
  <data key="d5">calls</data>
</edge>
<edge source="cypress_open" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="cypress_open" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="cypress_open" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="cypress_open" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="port" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="port" target="cypress_set_dead">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="usb_get_serial_port_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="usb_fill_int_urb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="usb_submit_urb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="cypress_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="cypress_send">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="dev_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="port" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="port" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="port" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="priv" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="priv" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="priv" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="serial" target="usb_fill_int_urb">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="serial" target="cypress_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="serial" target="usb_clear_halt">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="tty" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="tty" target="cypress_open">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="result" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="result" target="dev_err">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="spin_unlock_irqrestore">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="flags" target="spin_lock_irqsave">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>