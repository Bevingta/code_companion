<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-0809</data>
<data key="d3">8.3</data>
<data key="d4">HIGH</data>
<node id="wifi_cleanup">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="num_cmd">
  <data key="d5">Variable</data>
</node>
<node id="bad_commands">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="result">
  <data key="d5">Variable</data>
</node>
<node id="getHalInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="read">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOGD">
  <data key="d5">FunctionCall</data>
</node>
<node id="pthread_mutex_unlock">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="releaseRef">
  <data key="d5">FunctionCall</data>
</node>
<node id="cancel">
  <data key="d5">FunctionCall</data>
</node>
<node id="pthread_mutex_lock">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOGI">
  <data key="d5">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d5">FunctionCall</data>
</node>
<node id="internal_cleaned_up_handler">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">write(info-&gt;cleanup_socks[0], "Exit", 4</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">strncmp(buf, "Done", 4</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">cmd != NULL</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">num_cmd == info-&gt;num_cmd</data>
</node>
<node id="for_4">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">int i = 0; i &lt; info-&gt;num_event_cb; i++</data>
</node>
<node id="for_5">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">int i = 0; i &lt; info-&gt;num_event_cb; i++</data>
</node>
<node id="while_6">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">info-&gt;num_cmd &gt; bad_commands</data>
</node>
<edge source="wifi_cleanup" target="num_cmd">
  <data key="d7">declares</data>
</edge>
<edge source="wifi_cleanup" target="bad_commands">
  <data key="d7">declares</data>
</edge>
<edge source="wifi_cleanup" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="wifi_cleanup" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="wifi_cleanup" target="result">
  <data key="d7">declares</data>
</edge>
<edge source="wifi_cleanup" target="getHalInfo">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="read">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="ALOGD">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="pthread_mutex_unlock">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="releaseRef">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="cancel">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="pthread_mutex_lock">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="ALOGI">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="ALOGE">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="internal_cleaned_up_handler">
  <data key="d7">calls</data>
</edge>
<edge source="wifi_cleanup" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="for_4">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="for_5">
  <data key="d7">contains</data>
</edge>
<edge source="wifi_cleanup" target="while_6">
  <data key="d7">contains</data>
</edge>
<edge source="num_cmd" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="num_cmd" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="num_cmd" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bad_commands" target="while_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bad_commands" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="bad_commands" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="read">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="ALOGD">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buf" target="memset">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="while_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="result" target="ALOGE">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>