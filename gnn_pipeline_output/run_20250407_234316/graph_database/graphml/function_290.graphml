<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-7020</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="read_header">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="idx">
  <data key="d4">Variable</data>
</node>
<node id="trailer">
  <data key="d4">Variable</data>
</node>
<node id="v">
  <data key="d4">Variable</data>
</node>
<node id="state">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="read_quant_tables">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_log">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_rac">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_symbol">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_dlog">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_assert0">
  <data key="d4">FunctionCall</data>
</node>
<node id="AV_RB24">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_freep">
  <data key="d4">FunctionCall</data>
</node>
<node id="AVERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version &lt; 2</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">v &gt;= 2</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;ac &gt; 1</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version &gt; 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;plane_count</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">   chroma_planes != f-&gt;chroma_planes
                 || chroma_h_shift!= f-&gt;chroma_h_shift
                 || chroma_v_shift!= f-&gt;chroma_v_shift
                 || transparency  != f-&gt;transparency</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;colorspace == 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!f-&gt;transparency &amp;&amp; !f-&gt;chroma_planes</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample &lt;= 8</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample&lt;=8 &amp;&amp; !f-&gt;transparency</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample &lt;= 8 &amp;&amp; f-&gt;transparency</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample == 9</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample == 10</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;colorspace == 1</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;chroma_h_shift || f-&gt;chroma_v_shift</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">     f-&gt;avctx-&gt;bits_per_raw_sample ==  9</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample == 10</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample == 12</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;avctx-&gt;bits_per_raw_sample == 14</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;transparency</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version &lt; 2</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">context_count &lt; 0</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version &lt; 3</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size + trailer &gt; p - c-&gt;bytestream_start</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;slice_count &gt; (unsigned</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version == 2</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(unsigned</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">   (unsigned</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version == 2</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">idx &gt; (unsigned</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">f-&gt;version &lt;= 2</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;context_count &lt; context_count</data>
</node>
<node id="for_32">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1; i &lt; 256; i++</data>
</node>
<node id="for_33">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">f-&gt;slice_count = 0;
             f-&gt;slice_count &lt; MAX_SLICES &amp;&amp; 3 &lt; p - c-&gt;bytestream_start;
             f-&gt;slice_count++</data>
</node>
<node id="for_34">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; f-&gt;slice_count; j++</data>
</node>
<node id="for_35">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; f-&gt;plane_count; i++</data>
</node>
<node id="switch_36">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">16 * f-&gt;chroma_h_shift + f-&gt;chroma_v_shift</data>
</node>
<node id="switch_37">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">16*f-&gt;chroma_h_shift + f-&gt;chroma_v_shift</data>
</node>
<node id="switch_38">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">16 * f-&gt;chroma_h_shift + f-&gt;chroma_v_shift</data>
</node>
<node id="switch_39">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">16 * f-&gt;chroma_h_shift + f-&gt;chroma_v_shift</data>
</node>
<node id="switch_40">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">16 * f-&gt;chroma_h_shift + f-&gt;chroma_v_shift</data>
</node>
<edge source="read_header" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="idx">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="trailer">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="v">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="state">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="read_header" target="read_quant_tables">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="av_log">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="get_rac">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="get_symbol">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="av_dlog">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="av_assert0">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="AV_RB24">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="av_freep">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="AVERROR">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="read_header" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="for_32">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="for_33">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="for_34">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="for_35">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="switch_36">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="switch_37">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="switch_38">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="switch_39">
  <data key="d6">contains</data>
</edge>
<edge source="read_header" target="switch_40">
  <data key="d6">contains</data>
</edge>
<edge source="size" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idx" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="idx" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idx" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idx" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idx" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idx" target="for_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idx" target="for_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="trailer" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="trailer" target="AV_RB24">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="trailer" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="v" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="switch_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="switch_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="switch_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="switch_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="v" target="switch_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="state" target="get_rac">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="state" target="get_symbol">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="state" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="state" target="av_freep">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="state" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="for_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="state" target="for_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="for_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="for_35">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>