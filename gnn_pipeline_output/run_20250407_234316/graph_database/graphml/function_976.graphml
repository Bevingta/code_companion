<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-9605</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="vmw_gb_surface_define_ioctl">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="tmp">
  <data key="d4">Variable</data>
</node>
<node id="res">
  <data key="d4">Variable</data>
</node>
<node id="dev_priv">
  <data key="d4">Variable</data>
</node>
<node id="tfile">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="srf">
  <data key="d4">Variable</data>
</node>
<node id="rep">
  <data key="d4">Variable</data>
</node>
<node id="backup_handle">
  <data key="d4">Variable</data>
</node>
<node id="user_srf">
  <data key="d4">Variable</data>
</node>
<node id="dev">
  <data key="d4">Variable</data>
</node>
<node id="req">
  <data key="d4">Variable</data>
</node>
<node id="file_priv">
  <data key="d4">Variable</data>
</node>
<node id="data">
  <data key="d4">Variable</data>
</node>
<node id="vmw_dmabuf_unreference">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_resource_unreference">
  <data key="d4">FunctionCall</data>
</node>
<node id="ttm_prime_object_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="ttm_read_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_user_dmabuf_lookup">
  <data key="d4">FunctionCall</data>
</node>
<node id="DRM_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="container_of">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_fpriv">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_resource_reference">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_priv">
  <data key="d4">FunctionCall</data>
</node>
<node id="vmw_surface_gb_priv_define">
  <data key="d4">FunctionCall</data>
</node>
<node id="ttm_read_unlock">
  <data key="d4">FunctionCall</data>
</node>
<node id="drm_vma_node_offset_addr">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">req-&gt;multisample_count != 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">req-&gt;mip_levels &gt; DRM_VMW_MAX_MIP_LEVELS</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(vmw_user_surface_size == 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">drm_is_primary_client(file_priv</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">req-&gt;buffer_handle != SVGA3D_INVALID_ID</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret == 0 &amp;&amp; res-&gt;backup-&gt;base.num_pages * PAGE_SIZE &lt;
		    res-&gt;backup_size</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">req-&gt;drm_surface_flags &amp; drm_vmw_surface_flag_create_buffer</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">res-&gt;backup</data>
</node>
<edge source="vmw_gb_surface_define_ioctl" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="tmp">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="res">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="dev_priv">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="tfile">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="srf">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="rep">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="backup_handle">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="user_srf">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="dev">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="req">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="file_priv">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="data">
  <data key="d6">declares</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_dmabuf_unreference">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_resource_unreference">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="ttm_prime_object_init">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="ttm_read_lock">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_user_dmabuf_lookup">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="DRM_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="container_of">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_fpriv">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_resource_reference">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_priv">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="vmw_surface_gb_priv_define">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="ttm_read_unlock">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="drm_vma_node_offset_addr">
  <data key="d6">calls</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="vmw_gb_surface_define_ioctl" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="size" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="vmw_surface_gb_priv_define">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tmp" target="vmw_resource_unreference">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tmp" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="vmw_dmabuf_unreference">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="vmw_resource_unreference">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="ttm_read_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="vmw_user_dmabuf_lookup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="vmw_resource_reference">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="ttm_read_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="drm_vma_node_offset_addr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="res" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="res" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev_priv" target="ttm_read_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev_priv" target="ttm_read_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfile" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfile" target="vmw_user_dmabuf_lookup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfile" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfile" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="srf" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srf" target="vmw_user_dmabuf_lookup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srf" target="container_of">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="srf" target="vmw_surface_gb_priv_define">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rep" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="backup_handle" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="user_srf" target="vmw_user_dmabuf_lookup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="user_srf" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="user_srf" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dev" target="ttm_read_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="vmw_gb_surface_define_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="vmw_priv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="vmw_surface_gb_priv_define">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dev" target="ttm_read_unlock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="req" target="ttm_prime_object_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="vmw_user_dmabuf_lookup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="vmw_surface_gb_priv_define">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="req" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="file_priv" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="file_priv" target="vmw_gb_surface_define_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="file_priv" target="vmw_fpriv">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="data" target="vmw_gb_surface_define_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>