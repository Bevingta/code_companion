<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d8" for="edge" attr.name="type" attr.type="string"/>
<key id="d7" for="node" attr.name="condition" attr.type="string"/>
<key id="d6" for="node" attr.name="type" attr.type="string"/>
<key id="d5" for="graph" attr.name="severity" attr.type="string"/>
<key id="d4" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d3" for="graph" attr.name="cve" attr.type="string"/>
<key id="d2" for="graph" attr.name="format_string_vulnerability" attr.type="boolean"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">True</data>
<data key="d3">CVE-2017-12998</data>
<data key="d4">7.5</data>
<data key="d5">HIGH</data>
<node id="isis_print_extd_ip_reach">
  <data key="d6">FunctionDefinition</data>
</node>
<node id="afi">
  <data key="d6">Variable</data>
</node>
<node id="ident_buffer">
  <data key="d6">Variable</data>
</node>
<node id="tptr">
  <data key="d6">Variable</data>
</node>
<node id="ident">
  <data key="d6">Variable</data>
</node>
<node id="EXTRACT_32BITS">
  <data key="d6">FunctionCall</data>
</node>
<node id="ND_PRINT">
  <data key="d6">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d6">FunctionCall</data>
</node>
<node id="memset">
  <data key="d6">FunctionCall</data>
</node>
<node id="snprintf">
  <data key="d6">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d6">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr, 4</data>
</node>
<node id="if_1">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET</data>
</node>
<node id="if_2">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr, 1</data>
</node>
<node id="if_3">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">bit_length &gt; 32</data>
</node>
<node id="if_4">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET6</data>
</node>
<node id="if_5">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr, 1</data>
</node>
<node id="if_6">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">bit_length &gt; 128</data>
</node>
<node id="if_7">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr, byte_length</data>
</node>
<node id="if_8">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET</data>
</node>
<node id="if_9">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET6</data>
</node>
<node id="if_10">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET &amp;&amp; ISIS_MASK_TLV_EXTD_IP_SUBTLV(status_byte</data>
</node>
<node id="if_11">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">afi == AF_INET6</data>
</node>
<node id="if_12">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">(afi == AF_INET  &amp;&amp; ISIS_MASK_TLV_EXTD_IP_SUBTLV(status_byte</data>
</node>
<node id="if_13">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr, 1</data>
</node>
<node id="if_14">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!ND_TTEST2(*tptr,2</data>
</node>
<node id="if_15">
  <data key="d6">ControlStructure_if</data>
  <data key="d7">!isis_print_ip_reach_subtlv(ndo, tptr, subtlvtype, subtlvlen, ident_buffer</data>
</node>
<node id="while_16">
  <data key="d6">ControlStructure_while</data>
  <data key="d7">sublen&gt;0</data>
</node>
<edge source="isis_print_extd_ip_reach" target="afi">
  <data key="d8">declares</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="ident_buffer">
  <data key="d8">declares</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="tptr">
  <data key="d8">declares</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="ident">
  <data key="d8">declares</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="EXTRACT_32BITS">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="ND_PRINT">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="sizeof">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="memset">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="snprintf">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="memcpy">
  <data key="d8">calls</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_0">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_1">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_2">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_3">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_4">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_5">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_6">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_7">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_8">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_9">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_10">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_11">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_12">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_13">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_14">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="if_15">
  <data key="d8">contains</data>
</edge>
<edge source="isis_print_extd_ip_reach" target="while_16">
  <data key="d8">contains</data>
</edge>
<edge source="afi" target="if_1">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_4">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_8">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_9">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_10">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_11">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="if_12">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="afi" target="isis_print_extd_ip_reach">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident_buffer" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="ident_buffer" target="sizeof">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident_buffer" target="snprintf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident_buffer" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_11">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_12">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="if_13">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident_buffer" target="while_16">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_2">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="tptr" target="if_5">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="tptr" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_13">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_14">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="tptr" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="tptr" target="EXTRACT_32BITS">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tptr" target="isis_print_extd_ip_reach">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tptr" target="memcpy">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="tptr" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_11">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="if_12">
  <data key="d8">used_in_body</data>
</edge>
<edge source="tptr" target="while_16">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_15">
  <data key="d8">used_in_condition</data>
</edge>
<edge source="ident" target="ND_PRINT">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident" target="sizeof">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident" target="snprintf">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident" target="isis_print_extd_ip_reach">
  <data key="d8">used_as_parameter</data>
</edge>
<edge source="ident" target="if_0">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_1">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_2">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_3">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_4">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_5">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_6">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_7">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_8">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_9">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_10">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_11">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_12">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="if_13">
  <data key="d8">used_in_body</data>
</edge>
<edge source="ident" target="while_16">
  <data key="d8">used_in_body</data>
</edge>
</graph></graphml>