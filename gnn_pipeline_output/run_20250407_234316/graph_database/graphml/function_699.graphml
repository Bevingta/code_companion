<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-4301</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="parse_device">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="pdev">
  <data key="d4">Variable</data>
</node>
<node id="pack">
  <data key="d4">Variable</data>
</node>
<node id="argc">
  <data key="d4">Variable</data>
</node>
<node id="error">
  <data key="d4">Variable</data>
</node>
<node id="numbers">
  <data key="d4">Variable</data>
</node>
<node id="a">
  <data key="d4">Variable</data>
</node>
<node id="result">
  <data key="d4">Variable</data>
</node>
<node id="val">
  <data key="d4">Variable</data>
</node>
<node id="mtree_atol">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="archive_set_error">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(dev = strchr(val, ','</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(pack = pack_find(val</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*p == '\0'</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">argc &gt; MAX_PACK_ARGS</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">argc &lt; 2</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error != NULL</data>
</node>
<node id="while_6">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(p = la_strsep(&amp;dev, ","</data>
</node>
<edge source="parse_device" target="pdev">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="pack">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="argc">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="error">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="numbers">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="a">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="result">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="val">
  <data key="d6">declares</data>
</edge>
<edge source="parse_device" target="mtree_atol">
  <data key="d6">calls</data>
</edge>
<edge source="parse_device" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="parse_device" target="archive_set_error">
  <data key="d6">calls</data>
</edge>
<edge source="parse_device" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="parse_device" target="while_6">
  <data key="d6">contains</data>
</edge>
<edge source="pdev" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pdev" target="parse_device">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pack" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pack" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="argc" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="argc" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="argc" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="argc" target="while_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="archive_set_error">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="numbers" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="numbers" target="while_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="a" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="a" target="while_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="result" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="val" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="val" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="val" target="mtree_atol">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="val" target="archive_set_error">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="val" target="parse_device">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>