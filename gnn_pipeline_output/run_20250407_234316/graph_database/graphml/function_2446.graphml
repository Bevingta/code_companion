<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="format_string_vulnerability" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2014-8321</data>
<data key="d3">4.6</data>
<data key="d4">MEDIUM</data>
<node id="handle">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="char">
  <data key="d5">Variable</data>
</node>
<node id="cmd">
  <data key="d5">Variable</data>
</node>
<node id="pid">
  <data key="d5">Variable</data>
</node>
<node id="addr">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="s_in">
  <data key="d5">Variable</data>
</node>
<node id="x">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="s">
  <data key="d5">Variable</data>
</node>
<node id="id">
  <data key="d5">Variable</data>
</node>
<node id="plen">
  <data key="d5">Variable</data>
</node>
<node id="printf">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="htons">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="ntohs">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len == S_HELLO_LEN &amp;&amp; memcmp(data, "sorbo", 5</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">send(s, buf, x, 0</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">last_id &gt; 20000</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">wrap &amp;&amp; last_id &lt; 100</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">is_dup(last_id</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">send(s, buf, plen, 0</data>
</node>
<edge source="handle" target="char">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="cmd">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="pid">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="addr">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="s_in">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="x">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="s">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="id">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="plen">
  <data key="d7">declares</data>
</edge>
<edge source="handle" target="printf">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="memcpy">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="htons">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="ntohs">
  <data key="d7">calls</data>
</edge>
<edge source="handle" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="handle" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="handle" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="handle" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="handle" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="handle" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="char" target="handle">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="cmd" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="cmd" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pid" target="ntohs">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="addr" target="printf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="addr" target="handle">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="addr" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="addr" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="printf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="handle">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="htons">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="assert">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="s_in" target="handle">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="x" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="s" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="s" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="id" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="id" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="id" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="id" target="printf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="id" target="memset">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="id" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="id" target="ntohs">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="id" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="plen" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="plen" target="printf">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="plen" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="plen" target="htons">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="plen" target="assert">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>