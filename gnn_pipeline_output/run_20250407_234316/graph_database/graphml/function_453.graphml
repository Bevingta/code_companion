<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-3688</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="sctp_inq_pop">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="entry">
  <data key="d4">Variable</data>
</node>
<node id="ch">
  <data key="d4">Variable</data>
</node>
<node id="chunk">
  <data key="d4">Variable</data>
</node>
<node id="queue">
  <data key="d4">Variable</data>
</node>
<node id="skb_pull">
  <data key="d4">FunctionCall</data>
</node>
<node id="sctp_chunk_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="pr_debug">
  <data key="d4">FunctionCall</data>
</node>
<node id="list_del_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="list_entry">
  <data key="d4">FunctionCall</data>
</node>
<node id="WORD_ROUND">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(chunk = queue-&gt;in_progress</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">chunk-&gt;singleton ||
		    chunk-&gt;end_of_packet ||
		    chunk-&gt;pdiscard</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">skb_headlen(chunk-&gt;skb</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!chunk</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">list_empty(&amp;queue-&gt;in_chunk_list</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(skb_is_nonlinear(chunk-&gt;skb</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">chunk-&gt;chunk_end &gt; skb_tail_pointer(chunk-&gt;skb</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">chunk-&gt;chunk_end &lt; skb_tail_pointer(chunk-&gt;skb</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">chunk-&gt;chunk_end &gt; skb_tail_pointer(chunk-&gt;skb</data>
</node>
<edge source="sctp_inq_pop" target="entry">
  <data key="d6">declares</data>
</edge>
<edge source="sctp_inq_pop" target="ch">
  <data key="d6">declares</data>
</edge>
<edge source="sctp_inq_pop" target="chunk">
  <data key="d6">declares</data>
</edge>
<edge source="sctp_inq_pop" target="queue">
  <data key="d6">declares</data>
</edge>
<edge source="sctp_inq_pop" target="skb_pull">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="sctp_chunk_free">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="pr_debug">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="list_del_init">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="list_entry">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="WORD_ROUND">
  <data key="d6">calls</data>
</edge>
<edge source="sctp_inq_pop" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="sctp_inq_pop" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="entry" target="list_del_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="entry" target="list_entry">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="entry" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ch" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ch" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ch" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ch" target="skb_pull">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ch" target="sctp_chunk_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ch" target="pr_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ch" target="list_entry">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ch" target="WORD_ROUND">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chunk" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="chunk" target="skb_pull">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chunk" target="sctp_chunk_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chunk" target="pr_debug">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="chunk" target="list_entry">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="queue" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="queue" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="queue" target="sctp_inq_pop">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="queue" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="queue" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="queue" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="queue" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>