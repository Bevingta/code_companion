<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2011-2496</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="vma_to_resize">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="long">
  <data key="d4">Variable</data>
</node>
<node id="vma">
  <data key="d4">Variable</data>
</node>
<node id="charged">
  <data key="d4">Variable</data>
</node>
<node id="mm">
  <data key="d4">Variable</data>
</node>
<node id="rlimit">
  <data key="d4">FunctionCall</data>
</node>
<node id="find_vma">
  <data key="d4">FunctionCall</data>
</node>
<node id="ERR_PTR">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!vma || vma-&gt;vm_start &gt; addr</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_vm_hugetlb_page(vma</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">old_len &gt; vma-&gt;vm_end - addr</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vma-&gt;vm_flags &amp; (VM_DONTEXPAND | VM_PFNMAP</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">new_len &gt; old_len</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vma-&gt;vm_flags &amp; VM_LOCKED</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">locked &gt; lock_limit &amp;&amp; !capable(CAP_IPC_LOCK</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!may_expand_vm(mm, (new_len - old_len</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">vma-&gt;vm_flags &amp; VM_ACCOUNT</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">security_vm_enough_memory(charged</data>
</node>
<edge source="vma_to_resize" target="long">
  <data key="d6">declares</data>
</edge>
<edge source="vma_to_resize" target="vma">
  <data key="d6">declares</data>
</edge>
<edge source="vma_to_resize" target="charged">
  <data key="d6">declares</data>
</edge>
<edge source="vma_to_resize" target="mm">
  <data key="d6">declares</data>
</edge>
<edge source="vma_to_resize" target="rlimit">
  <data key="d6">calls</data>
</edge>
<edge source="vma_to_resize" target="find_vma">
  <data key="d6">calls</data>
</edge>
<edge source="vma_to_resize" target="ERR_PTR">
  <data key="d6">calls</data>
</edge>
<edge source="vma_to_resize" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vma_to_resize" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="long" target="vma_to_resize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="long" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="long" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="vma" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vma" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vma" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vma" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vma" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="vma" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="charged" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="charged" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="charged" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="charged" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mm" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="mm" target="find_vma">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="mm" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="mm" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>