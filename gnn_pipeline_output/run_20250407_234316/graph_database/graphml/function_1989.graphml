<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-0823</data>
<data key="d3">5.0</data>
<data key="d4">MEDIUM</data>
<node id="debugCallback">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="number">
  <data key="d5">Variable</data>
</node>
<node id="qxdm_data">
  <data key="d5">Variable</data>
</node>
<node id="hangupData">
  <data key="d5">Variable</data>
</node>
<node id="len">
  <data key="d5">Variable</data>
</node>
<node id="fd">
  <data key="d5">Variable</data>
</node>
<node id="deactData">
  <data key="d5">Variable</data>
</node>
<node id="sim_id">
  <data key="d5">Variable</data>
</node>
<node id="socklen">
  <data key="d5">Variable</data>
</node>
<node id="peeraddr">
  <data key="d5">Variable</data>
</node>
<node id="actData">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="data">
  <data key="d5">Variable</data>
</node>
<node id="flags">
  <data key="d5">Variable</data>
</node>
<node id="param">
  <data key="d5">Variable</data>
</node>
<node id="calloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d5">FunctionCall</data>
</node>
<node id="RIL_UNSOL_RESPONSE">
  <data key="d5">FunctionCall</data>
</node>
<node id="accept">
  <data key="d5">FunctionCall</data>
</node>
<node id="close">
  <data key="d5">FunctionCall</data>
</node>
<node id="freeDebugCallbackArgs">
  <data key="d5">FunctionCall</data>
</node>
<node id="sleep">
  <data key="d5">FunctionCall</data>
</node>
<node id="issueLocalRequest">
  <data key="d5">FunctionCall</data>
</node>
<node id="RLOGI">
  <data key="d5">FunctionCall</data>
</node>
<node id="RLOGE">
  <data key="d5">FunctionCall</data>
</node>
<node id="0">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">acceptFD &lt; 0</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">recv(acceptFD, &amp;number, sizeof(int</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">number &lt; 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">args == NULL</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">recv(acceptFD, &amp;len, sizeof(int</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">len == INT_MAX || len &lt; 0</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">args[i] == NULL</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">recv(acceptFD, args[i], sizeof(char</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(i+1</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SIM_COUNT &gt;= 2</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SIM_COUNT &gt;= 3</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SIM_COUNT &gt;= 4</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">socket_id == RIL_SOCKET_1 &amp;&amp; s_ril_param_socket.fdCommand &gt; 0</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SIM_COUNT == 2</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">socket_id == RIL_SOCKET_2 &amp;&amp; s_ril_param_socket2.fdCommand &gt; 0</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">int i = 0; i &lt; number; i++</data>
</node>
<node id="switch_16">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">sim_id</data>
</node>
<node id="switch_17">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">atoi(args[0]</data>
</node>
<edge source="debugCallback" target="number">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="qxdm_data">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="hangupData">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="len">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="fd">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="deactData">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="sim_id">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="socklen">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="peeraddr">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="actData">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="data">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="flags">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="param">
  <data key="d7">declares</data>
</edge>
<edge source="debugCallback" target="calloc">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="sizeof">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="RIL_UNSOL_RESPONSE">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="accept">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="close">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="freeDebugCallbackArgs">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="sleep">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="issueLocalRequest">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="RLOGI">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="RLOGE">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="0">
  <data key="d7">calls</data>
</edge>
<edge source="debugCallback" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="switch_16">
  <data key="d7">contains</data>
</edge>
<edge source="debugCallback" target="switch_17">
  <data key="d7">contains</data>
</edge>
<edge source="number" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number" target="calloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number" target="freeDebugCallbackArgs">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number" target="RLOGE">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="qxdm_data" target="issueLocalRequest">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="qxdm_data" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="qxdm_data" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="qxdm_data" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="qxdm_data" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="hangupData" target="sizeof">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="hangupData" target="issueLocalRequest">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="hangupData" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="hangupData" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="hangupData" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="hangupData" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="len" target="if_5">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="calloc">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="RLOGE">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="len" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="len" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="fd" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="fd" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="fd" target="debugCallback">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="fd" target="accept">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="fd" target="close">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="deactData" target="sizeof">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="deactData" target="issueLocalRequest">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="deactData" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="deactData" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="deactData" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="deactData" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sim_id" target="switch_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="sim_id" target="if_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="sim_id" target="for_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="peeraddr" target="sizeof">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="actData" target="sizeof">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="actData" target="issueLocalRequest">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="actData" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="actData" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="actData" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="actData" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="switch_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="switch_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="data" target="issueLocalRequest">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="data" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_11">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="switch_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="flags" target="debugCallback">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="param" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="param" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="param" target="debugCallback">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="param" target="close">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>