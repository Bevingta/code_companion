<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-15649</data>
<data key="d1">4.6</data>
<data key="d2">MEDIUM</data>
<node id="packet_do_bind">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="ifindex">
  <data key="d3">Variable</data>
</node>
<node id="dev">
  <data key="d3">Variable</data>
</node>
<node id="name">
  <data key="d3">Variable</data>
</node>
<node id="dev_curr">
  <data key="d3">Variable</data>
</node>
<node id="sk">
  <data key="d3">Variable</data>
</node>
<node id="po">
  <data key="d3">Variable</data>
</node>
<node id="spin_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="lock_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="register_prot_hook">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="__unregister_prot_hook">
  <data key="d3">FunctionCall</data>
</node>
<node id="packet_cached_dev_reset">
  <data key="d3">FunctionCall</data>
</node>
<node id="packet_cached_dev_assign">
  <data key="d3">FunctionCall</data>
</node>
<node id="dev_get_by_index_rcu">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="rcu_read_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="dev_get_by_name_rcu">
  <data key="d3">FunctionCall</data>
</node>
<node id="pkt_sk">
  <data key="d3">FunctionCall</data>
</node>
<node id="release_sock">
  <data key="d3">FunctionCall</data>
</node>
<node id="dev_put">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;fanout</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">name</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dev</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ifindex</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!dev</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dev</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">need_rehook</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">po-&gt;running</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dev</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">unlikely(unlisted</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">dev_curr</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">proto == 0 || !need_rehook</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!unlisted &amp;&amp; (!dev || (dev-&gt;flags &amp; IFF_UP</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!sock_flag(sk, SOCK_DEAD</data>
</node>
<edge source="packet_do_bind" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="ifindex">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="dev">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="name">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="dev_curr">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="sk">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="po">
  <data key="d5">declares</data>
</edge>
<edge source="packet_do_bind" target="spin_lock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="lock_sock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="register_prot_hook">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="rcu_read_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="__unregister_prot_hook">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="packet_cached_dev_reset">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="packet_cached_dev_assign">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="dev_get_by_index_rcu">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="spin_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="rcu_read_lock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="dev_get_by_name_rcu">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="pkt_sk">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="release_sock">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="dev_put">
  <data key="d5">calls</data>
</edge>
<edge source="packet_do_bind" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="packet_do_bind" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="packet_do_bind">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ifindex" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ifindex" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dev" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dev" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dev" target="if_12">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dev" target="packet_cached_dev_assign">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="dev_put">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
<edge source="name" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="name" target="packet_do_bind">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="name" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev_curr" target="if_10">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="dev_curr" target="dev_put">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="dev_curr" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev_curr" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="dev_curr" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_13">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="sk" target="lock_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="register_prot_hook">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="__unregister_prot_hook">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="packet_do_bind">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dev_get_by_index_rcu">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="dev_get_by_name_rcu">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="pkt_sk">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="release_sock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sk" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_10">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_11">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sk" target="if_12">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="po" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="spin_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="po" target="packet_cached_dev_reset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="po" target="packet_cached_dev_assign">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="po" target="spin_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="po" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="po" target="if_9">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>