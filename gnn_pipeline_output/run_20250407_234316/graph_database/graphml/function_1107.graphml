<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-10154</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="smbhash">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="tfm_des">
  <data key="d4">Variable</data>
</node>
<node id="char">
  <data key="d4">Variable</data>
</node>
<node id="key2">
  <data key="d4">Variable</data>
</node>
<node id="req">
  <data key="d4">Variable</data>
</node>
<node id="rc">
  <data key="d4">Variable</data>
</node>
<node id="str_to_key">
  <data key="d4">FunctionCall</data>
</node>
<node id="crypto_alloc_skcipher">
  <data key="d4">FunctionCall</data>
</node>
<node id="sg_init_one">
  <data key="d4">FunctionCall</data>
</node>
<node id="skcipher_request_alloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="cifs_dbg">
  <data key="d4">FunctionCall</data>
</node>
<node id="skcipher_request_set_crypt">
  <data key="d4">FunctionCall</data>
</node>
<node id="crypto_skcipher_setkey">
  <data key="d4">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="crypto_free_skcipher">
  <data key="d4">FunctionCall</data>
</node>
<node id="skcipher_request_set_callback">
  <data key="d4">FunctionCall</data>
</node>
<node id="crypto_skcipher_encrypt">
  <data key="d4">FunctionCall</data>
</node>
<node id="skcipher_request_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(tfm_des</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!req</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rc</data>
</node>
<edge source="smbhash" target="tfm_des">
  <data key="d6">declares</data>
</edge>
<edge source="smbhash" target="char">
  <data key="d6">declares</data>
</edge>
<edge source="smbhash" target="key2">
  <data key="d6">declares</data>
</edge>
<edge source="smbhash" target="req">
  <data key="d6">declares</data>
</edge>
<edge source="smbhash" target="rc">
  <data key="d6">declares</data>
</edge>
<edge source="smbhash" target="str_to_key">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="crypto_alloc_skcipher">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="sg_init_one">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="skcipher_request_alloc">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="cifs_dbg">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="skcipher_request_set_crypt">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="crypto_skcipher_setkey">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="PTR_ERR">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="crypto_free_skcipher">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="skcipher_request_set_callback">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="crypto_skcipher_encrypt">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="skcipher_request_free">
  <data key="d6">calls</data>
</edge>
<edge source="smbhash" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="smbhash" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="smbhash" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="tfm_des" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tfm_des" target="skcipher_request_alloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfm_des" target="crypto_skcipher_setkey">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfm_des" target="PTR_ERR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tfm_des" target="crypto_free_skcipher">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="char" target="smbhash">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="key2" target="str_to_key">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="key2" target="crypto_skcipher_setkey">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="req" target="skcipher_request_set_crypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="skcipher_request_set_callback">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="crypto_skcipher_encrypt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="req" target="skcipher_request_free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rc" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rc" target="cifs_dbg">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rc" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rc" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>