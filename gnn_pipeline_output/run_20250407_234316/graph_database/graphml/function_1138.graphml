<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2016-9936</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="PHP_FUNCTION">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="var_hash">
  <data key="d3">Variable</data>
</node>
<node id="buf_len">
  <data key="d3">Variable</data>
</node>
<node id="buf">
  <data key="d3">Variable</data>
</node>
<node id="p">
  <data key="d3">Variable</data>
</node>
<node id="PHP_VAR_UNSERIALIZE_INIT">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_add_empty_element">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_destroy">
  <data key="d3">FunctionCall</data>
</node>
<node id="FREE_HASHTABLE">
  <data key="d3">FunctionCall</data>
</node>
<node id="convert_to_string_ex">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_string_tolower">
  <data key="d3">FunctionCall</data>
</node>
<node id="php_error_docref">
  <data key="d3">FunctionCall</data>
</node>
<node id="var_push_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_string_release">
  <data key="d3">FunctionCall</data>
</node>
<node id="ALLOC_HASHTABLE">
  <data key="d3">FunctionCall</data>
</node>
<node id="PHP_VAR_UNSERIALIZE_DESTROY">
  <data key="d3">FunctionCall</data>
</node>
<node id="ZEND_HASH_FOREACH_VAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_str_find">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="ZEND_HASH_FOREACH_END">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_ptr_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">buf_len == 0</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">options != NULL</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">classes &amp;&amp; (Z_TYPE_P(classes</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">class_hash &amp;&amp; Z_TYPE_P(classes</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!php_var_unserialize_ex(return_value, &amp;p, p + buf_len, &amp;var_hash, class_hash</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">class_hash</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!EG(exception</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">class_hash</data>
</node>
<edge source="PHP_FUNCTION" target="var_hash">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="buf_len">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="buf">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="p">
  <data key="d5">declares</data>
</edge>
<edge source="PHP_FUNCTION" target="PHP_VAR_UNSERIALIZE_INIT">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_hash_add_empty_element">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_hash_destroy">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="FREE_HASHTABLE">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="convert_to_string_ex">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_string_tolower">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="php_error_docref">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="var_push_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_string_release">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="ALLOC_HASHTABLE">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="PHP_VAR_UNSERIALIZE_DESTROY">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="ZEND_HASH_FOREACH_VAL">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_hash_str_find">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zend_hash_init">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="ZEND_HASH_FOREACH_END">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="zval_ptr_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="PHP_FUNCTION" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="PHP_FUNCTION" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="var_hash" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="var_hash" target="PHP_VAR_UNSERIALIZE_INIT">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="var_hash" target="var_push_dtor">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="var_hash" target="PHP_VAR_UNSERIALIZE_DESTROY">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf_len" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="buf_len" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buf_len" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="buf" target="if_5">
  <data key="d5">used_in_body</data>
</edge>
<edge source="buf" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="p" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>