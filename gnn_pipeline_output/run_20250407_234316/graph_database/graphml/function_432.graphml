<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-5472</data>
<data key="d2">4.0</data>
<data key="d3">MEDIUM</data>
<node id="parse_rock_ridge_inode_internal">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="slen">
  <data key="d4">Variable</data>
</node>
<node id="oldslp">
  <data key="d4">Variable</data>
</node>
<node id="rootflag">
  <data key="d4">Variable</data>
</node>
<node id="symlink_len">
  <data key="d4">Variable</data>
</node>
<node id="rr">
  <data key="d4">Variable</data>
</node>
<node id="inode">
  <data key="d4">Variable</data>
</node>
<node id="regard_xa">
  <data key="d4">Variable</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="algo">
  <data key="d4">Variable</data>
</node>
<node id="slp">
  <data key="d4">Variable</data>
</node>
<node id="rs">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="reloc">
  <data key="d4">Variable</data>
</node>
<node id="block_shift">
  <data key="d4">Variable</data>
</node>
<node id="de">
  <data key="d4">Variable</data>
</node>
<node id="MKDEV">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="ISOFS_I">
  <data key="d4">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d4">FunctionCall</data>
</node>
<node id="iput">
  <data key="d4">FunctionCall</data>
</node>
<node id="init_rock_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="rock_continue">
  <data key="d4">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="isofs_iget">
  <data key="d4">FunctionCall</data>
</node>
<node id="setup_rock_ridge">
  <data key="d4">FunctionCall</data>
</node>
<node id="set_nlink">
  <data key="d4">FunctionCall</data>
</node>
<node id="i_uid_write">
  <data key="d4">FunctionCall</data>
</node>
<node id="isonum_721">
  <data key="d4">FunctionCall</data>
</node>
<node id="isonum_711">
  <data key="d4">FunctionCall</data>
</node>
<node id="i_gid_write">
  <data key="d4">FunctionCall</data>
</node>
<node id="isonum_733">
  <data key="d4">FunctionCall</data>
</node>
<node id="SIG">
  <data key="d4">FunctionCall</data>
</node>
<node id="algorithm">
  <data key="d4">FunctionCall</data>
</node>
<node id="iso_date">
  <data key="d4">FunctionCall</data>
</node>
<node id="printk">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ISOFS_SB(inode-&gt;i_sb</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">regard_xa</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rs.len &lt; 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rr-&gt;len &lt; 3</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rock_check_overflow(&amp;rs, sig</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rs.len &lt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(rr-&gt;u.RR.flags[0] &amp;
			     (RR_PX | RR_TF | RR_SL | RR_CL</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">check_sp(rr, inode</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(low &amp; ~0xff</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rr-&gt;u.TF.flags &amp; TF_CREATE</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rr-&gt;u.TF.flags &amp; TF_MODIFY</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rr-&gt;u.TF.flags &amp; TF_ACCESS</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rr-&gt;u.TF.flags &amp; TF_ATTRIBUTES</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">slen &lt; 2</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((rr-&gt;u.SL.
						      flags &amp; 1</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!rootflag
					    &amp;&amp; (oldslp-&gt;flags &amp; 1</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(reloc</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ISOFS_SB(inode-&gt;i_sb</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">algo == SIG('p', 'z'</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">block_shift &gt; 17</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret == 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret == 1</data>
</node>
<node id="for_22">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">p = 0; p &lt; rr-&gt;u.ER.len_id; p++</data>
</node>
<node id="while_23">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">rs.len &gt; 2</data>
</node>
<node id="while_24">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">slen &gt; 1</data>
</node>
<node id="switch_25">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">sig</data>
</node>
<node id="switch_26">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">slp-&gt;flags &amp; ~1</data>
</node>
<edge source="parse_rock_ridge_inode_internal" target="slen">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="oldslp">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="rootflag">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="symlink_len">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="rr">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="inode">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="regard_xa">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="algo">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="slp">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="rs">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="reloc">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="block_shift">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="de">
  <data key="d6">declares</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="MKDEV">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="ISOFS_I">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="PTR_ERR">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="iput">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="init_rock_state">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="rock_continue">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="kfree">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="isofs_iget">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="setup_rock_ridge">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="set_nlink">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="i_uid_write">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="isonum_721">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="isonum_711">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="i_gid_write">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="isonum_733">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="SIG">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="algorithm">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="iso_date">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="printk">
  <data key="d6">calls</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="for_22">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="while_23">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="while_24">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="switch_25">
  <data key="d6">contains</data>
</edge>
<edge source="parse_rock_ridge_inode_internal" target="switch_26">
  <data key="d6">contains</data>
</edge>
<edge source="slen" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="slen" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slen" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="oldslp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldslp" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rootflag" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rootflag" target="switch_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="symlink_len" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="rr" target="for_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="set_nlink">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="i_uid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="isonum_721">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="isonum_711">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="i_gid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="isonum_733">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="iso_date">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rr" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rr" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="inode" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="inode" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="ISOFS_I">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="init_rock_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="isofs_iget">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="parse_rock_ridge_inode_internal">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="setup_rock_ridge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="set_nlink">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="i_uid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="i_gid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="inode" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="for_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="inode" target="switch_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="regard_xa" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="regard_xa" target="parse_rock_ridge_inode_internal">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ret" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ret" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="algo" target="isonum_721">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="algo" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="algo" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="algo" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="slp" target="switch_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="while_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="slp" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="init_rock_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rs" target="rock_continue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rs" target="kfree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rs" target="setup_rock_ridge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rs" target="isonum_721">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="rs" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="rs" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="for_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="reloc" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="PTR_ERR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reloc" target="iput">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reloc" target="set_nlink">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reloc" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="reloc" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="reloc" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="block_shift" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="while_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="block_shift" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="de" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="de" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="de" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="de" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="ISOFS_I">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="init_rock_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="isofs_iget">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="parse_rock_ridge_inode_internal">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="setup_rock_ridge">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="set_nlink">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="i_uid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="i_gid_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="isonum_733">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="algorithm">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="de" target="printk">
  <data key="d6">used_as_parameter</data>
</edge>
</graph></graphml>