<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-6051</data>
<data key="d1">4.3</data>
<data key="d2">MEDIUM</data>
<node id="Init">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="error_position">
  <data key="d3">Variable</data>
</node>
<node id="GetRequest">
  <data key="d3">FunctionCall</data>
</node>
<node id="KURL">
  <data key="d3">FunctionCall</data>
</node>
<node id="SetEncoding">
  <data key="d3">FunctionCall</data>
</node>
<node id="DCHECK">
  <data key="d3">FunctionCall</data>
</node>
<node id="Url">
  <data key="d3">FunctionCall</data>
</node>
<node id="AddConsoleMessage">
  <data key="d3">FunctionCall</data>
</node>
<node id="ParseXSSProtectionHeader">
  <data key="d3">FunctionCall</data>
</node>
<node id="CompleteURL">
  <data key="d3">FunctionCall</data>
</node>
<node id="GetResponse">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">state_ != kUninitialized</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Settings* settings = document-&gt;GetSettings(</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!is_enabled_</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!document-&gt;GetFrame(</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">document_url_.IsEmpty(</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">document_url_.ProtocolIsData(</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">document-&gt;Encoding(</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">DocumentLoader* document_loader =
          document-&gt;GetFrame(</data>
</node>
<node id="if_8">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_header == kAllowReflectedXSS</data>
</node>
<node id="if_9">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_header == kFilterReflectedXSS</data>
</node>
<node id="if_10">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_header == kBlockReflectedXSS</data>
</node>
<node id="if_11">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_header == kReflectedXSSInvalid</data>
</node>
<node id="if_12">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(xss_protection_header == kFilterReflectedXSS ||
          xss_protection_header == kBlockReflectedXSS</data>
</node>
<node id="if_13">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">MixedContentChecker::IsMixedContent(document-&gt;GetSecurityOrigin(</data>
</node>
<node id="if_14">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_header == kReflectedXSSInvalid</data>
</node>
<node id="if_15">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">xss_protection_ == kReflectedXSSInvalid ||
        xss_protection_ == kReflectedXSSUnset</data>
</node>
<node id="if_16">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">auditor_delegate</data>
</node>
<node id="if_17">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">http_body &amp;&amp; !http_body-&gt;IsEmpty(</data>
</node>
<edge source="Init" target="error_position">
  <data key="d5">declares</data>
</edge>
<edge source="Init" target="GetRequest">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="KURL">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="SetEncoding">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="DCHECK">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="Url">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="AddConsoleMessage">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="ParseXSSProtectionHeader">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="CompleteURL">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="GetResponse">
  <data key="d5">calls</data>
</edge>
<edge source="Init" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_8">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_9">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_10">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_11">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_12">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_13">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_14">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_15">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_16">
  <data key="d5">contains</data>
</edge>
<edge source="Init" target="if_17">
  <data key="d5">contains</data>
</edge>
<edge source="error_position" target="AddConsoleMessage">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="error_position" target="ParseXSSProtectionHeader">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="error_position" target="if_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error_position" target="if_7">
  <data key="d5">used_in_body</data>
</edge>
<edge source="error_position" target="if_14">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>