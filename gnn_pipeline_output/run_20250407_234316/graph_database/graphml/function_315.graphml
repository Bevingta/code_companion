<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2013-4515</data>
<data key="d2">4.9</data>
<data key="d3">MEDIUM</data>
<node id="bcm_char_ioctl">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="pgpio_multi_mode">
  <data key="d4">Variable</data>
</node>
<node id="gpio_multi_info">
  <data key="d4">Variable</data>
</node>
<node id="psFwInfo">
  <data key="d4">Variable</data>
</node>
<node id="gpio_info">
  <data key="d4">Variable</data>
</node>
<node id="sUserDebugState">
  <data key="d4">Variable</data>
</node>
<node id="sCopySectStrut">
  <data key="d4">Variable</data>
</node>
<node id="stNVMRead">
  <data key="d4">Variable</data>
</node>
<node id="sFlash2xWrite">
  <data key="d4">Variable</data>
</node>
<node id="filp">
  <data key="d4">Variable</data>
</node>
<node id="sWrmBuffer">
  <data key="d4">Variable</data>
</node>
<node id="sFlash2xRead">
  <data key="d4">Variable</data>
</node>
<node id="stNVMReadWrite">
  <data key="d4">Variable</data>
</node>
<node id="pgpio_multi_info">
  <data key="d4">Variable</data>
</node>
<node id="IoBuffer">
  <data key="d4">Variable</data>
</node>
<node id="gpio_multi_mode">
  <data key="d4">Variable</data>
</node>
<node id="threadReq">
  <data key="d4">Variable</data>
</node>
<node id="timeout">
  <data key="d4">Variable</data>
</node>
<node id="eFlash2xSectionVal">
  <data key="d4">Variable</data>
</node>
<node id="link_state">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="Adapter">
  <data key="d4">Variable</data>
</node>
<node id="psFlash2xBitMap">
  <data key="d4">Variable</data>
</node>
<node id="pBulkBuffer">
  <data key="d4">Variable</data>
</node>
<node id="DevInfo">
  <data key="d4">Variable</data>
</node>
<node id="pTarang">
  <data key="d4">Variable</data>
</node>
<node id="stTimeElapsedSinceNetEntry">
  <data key="d4">Variable</data>
</node>
<node id="sRdmBuffer">
  <data key="d4">Variable</data>
</node>
<node id="bytes">
  <data key="d4">Variable</data>
</node>
<node id="down_trylock">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmCopyISO">
  <data key="d4">FunctionCall</data>
</node>
<node id="DumpPhsRules">
  <data key="d4">FunctionCall</data>
</node>
<node id="pr_err">
  <data key="d4">FunctionCall</data>
</node>
<node id="up">
  <data key="d4">FunctionCall</data>
</node>
<node id="flushAllAppQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="wrmalt">
  <data key="d4">FunctionCall</data>
</node>
<node id="netif_carrier_off">
  <data key="d4">FunctionCall</data>
</node>
<node id="min_t">
  <data key="d4">FunctionCall</data>
</node>
<node id="BCM_DEBUG_PRINT_BUFFER">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmSetActiveSection">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetDroppedAppCntrlPktMibs">
  <data key="d4">FunctionCall</data>
</node>
<node id="BCM_SHOW_DEBUG_BITMAP">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmCopySection">
  <data key="d4">FunctionCall</data>
</node>
<node id="down">
  <data key="d4">FunctionCall</data>
</node>
<node id="copy_to_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="wrmaltWithLock">
  <data key="d4">FunctionCall</data>
</node>
<node id="wake_up">
  <data key="d4">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetCounters">
  <data key="d4">FunctionCall</data>
</node>
<node id="DumpPackInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmFlash2xCorruptSig">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmGetSectionValStartOffset">
  <data key="d4">FunctionCall</data>
</node>
<node id="wait_event_timeout">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="pr_info">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmUpdateSectorSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmFlash2xBulkWrite">
  <data key="d4">FunctionCall</data>
</node>
<node id="do_gettimeofday">
  <data key="d4">FunctionCall</data>
</node>
<node id="memdup_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="BeceemNVMRead">
  <data key="d4">FunctionCall</data>
</node>
<node id="wait_event_interruptible_timeout">
  <data key="d4">FunctionCall</data>
</node>
<node id="rdmalt">
  <data key="d4">FunctionCall</data>
</node>
<node id="s">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_seconds">
  <data key="d4">FunctionCall</data>
</node>
<node id="copy_from_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="atomic_set">
  <data key="d4">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="rdmaltWithLock">
  <data key="d4">FunctionCall</data>
</node>
<node id="bcm_ioctl_fw_download">
  <data key="d4">FunctionCall</data>
</node>
<node id="netif_stop_queue">
  <data key="d4">FunctionCall</data>
</node>
<node id="CopyBufferToControlPacket">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmFlash2xBulkRead">
  <data key="d4">FunctionCall</data>
</node>
<node id="BCM_DEBUG_PRINT">
  <data key="d4">FunctionCall</data>
</node>
<node id="run_card_proc">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_dsx_sf_data_to_application">
  <data key="d4">FunctionCall</data>
</node>
<node id="kzalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmFlash2xWriteSig">
  <data key="d4">FunctionCall</data>
</node>
<node id="BcmGetFlash2xSectionalBitMap">
  <data key="d4">FunctionCall</data>
</node>
<node id="BeceemNVMWrite">
  <data key="d4">FunctionCall</data>
</node>
<node id="vendorextnIoctl">
  <data key="d4">FunctionCall</data>
</node>
<node id="reset_card_proc">
  <data key="d4">FunctionCall</data>
</node>
<node id="ProcessGetHostMibs">
  <data key="d4">FunctionCall</data>
</node>
<node id="running">
  <data key="d4">FunctionCall</data>
</node>
<node id="ntohl">
  <data key="d4">FunctionCall</data>
</node>
<node id="mdelay">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_IOC_TYPE(cmd</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_IOC_DIR(cmd</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_IOC_DIR(cmd</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">_IOC_NONE == (_IOC_DIR(cmd</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;device_removed</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FALSE == Adapter-&gt;fw_download_done</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != CONTINUE_COMMON_PATH</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(sRdmBuffer</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sRdmBuffer, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &gt; USHRT_MAX ||
			IoBuffer.OutputLength == 0</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!temp_buff</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &gt; 0</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, temp_buff, bytes</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(sWrmBuffer</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sWrmBuffer, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!((Adapter-&gt;pstargetparams-&gt;m_u32Customize</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(sRdmBuffer</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sRdmBuffer, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &gt; USHRT_MAX ||
			IoBuffer.OutputLength == 0</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!temp_buff</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(((ULONG</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &gt; 0</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, temp_buff, bytes</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(sWrmBuffer</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sWrmBuffer, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(((ULONG</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!((Adapter-&gt;pstargetparams-&gt;m_u32Customize</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(gpio_info</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;gpio_info, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsReqGpioIsLedInNVM(Adapter, value</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uiOperation</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &lt; 0</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(threadReq</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;threadReq, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;LEDInfo.led_thread_running</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">threadReq.ThreadState == LED_THREAD_ACTIVATION_REQ</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(gpio_info</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;gpio_info, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &lt; 0</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(gpio_multi_info</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;gpio_multi_info, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsReqGpioIsLedInNVM(Adapter, pgpio_multi_info[WIMAX_IDX].uiGPIOMask</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(pgpio_multi_info[WIMAX_IDX].uiGPIOMask</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*(UINT *</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*(UINT *</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pgpio_multi_info[WIMAX_IDX].uiGPIOMask</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &lt; 0</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_71">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_72">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(gpio_multi_mode</data>
</node>
<node id="if_73">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;gpio_multi_mode, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_74">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bytes &lt; 0</data>
</node>
<node id="if_75">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsReqGpioIsLedInNVM(Adapter, pgpio_multi_mode[WIMAX_IDX].uiGPIOMask</data>
</node>
<node id="if_76">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pgpio_multi_mode[WIMAX_IDX].uiGPIOMask</data>
</node>
<node id="if_77">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == STATUS_SUCCESS</data>
</node>
<node id="if_78">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_79">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_80">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &lt; sizeof(struct bcm_link_request</data>
</node>
<node id="if_81">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; MAX_CNTL_PKT_SIZE</data>
</node>
<node id="if_82">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(pvBuffer</data>
</node>
<node id="if_83">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status == -ERESTARTSYS</data>
</node>
<node id="if_84">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;bPreparingForLowPowerMode</data>
</node>
<node id="if_85">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">down_trylock(&amp;Adapter-&gt;NVMRdmWrmLock</data>
</node>
<node id="if_86">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">down_trylock(&amp;Adapter-&gt;fw_download_sema</data>
</node>
<node id="if_87">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_88">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!down_trylock(&amp;Adapter-&gt;fw_download_sema</data>
</node>
<node id="if_89">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_90">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &gt; sizeof(struct bcm_firmware_info</data>
</node>
<node id="if_91">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!psFwInfo</data>
</node>
<node id="if_92">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(psFwInfo, IoBuffer.InputBuffer, IoBuffer.InputLength</data>
</node>
<node id="if_93">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!psFwInfo-&gt;pvMappedFirmwareAddress ||
			(psFwInfo-&gt;u32FirmwareLength == 0</data>
</node>
<node id="if_94">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_95">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">psFwInfo-&gt;u32StartingAddress == CONFIG_BEGIN_ADDR</data>
</node>
<node id="if_96">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;LEDInfo.led_thread_running &amp; BCM_LED_THREAD_RUNNING_ACTIVELY</data>
</node>
<node id="if_97">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_98">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!down_trylock(&amp;Adapter-&gt;fw_download_sema</data>
</node>
<node id="if_99">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">down_trylock(&amp;Adapter-&gt;NVMRdmWrmLock</data>
</node>
<node id="if_100">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_101">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">StartInterruptUrb((struct bcm_interface_adapter *</data>
</node>
<node id="if_102">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;LEDInfo.led_thread_running &amp; BCM_LED_THREAD_RUNNING_ACTIVELY</data>
</node>
<node id="if_103">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!timeout</data>
</node>
<node id="if_104">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_user(Adapter-&gt;BEBucketSize, (unsigned long __user *</data>
</node>
<node id="if_105">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_user(Adapter-&gt;rtPSBucketSize, (unsigned long __user *</data>
</node>
<node id="if_106">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NVMAccess</data>
</node>
<node id="if_107">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">get_user(Adapter-&gt;PackInfo[uiLoopIndex].uiThreshold,
					(unsigned long __user *</data>
</node>
<node id="if_108">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(argp, &amp;Adapter-&gt;PackInfo, sizeof(struct bcm_packet_info</data>
</node>
<node id="if_109">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;uiData, argp, sizeof(UINT</data>
</node>
<node id="if_110">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uiData</data>
</node>
<node id="if_111">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_112">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, DRV_VERSION, len</data>
</node>
<node id="if_113">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_114">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength != sizeof(link_state</data>
</node>
<node id="if_115">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, &amp;link_state, min_t(size_t, sizeof(link_state</data>
</node>
<node id="if_116">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_117">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;tracing_flag, IoBuffer.InputBuffer, sizeof(UINT</data>
</node>
<node id="if_118">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tracing_flag</data>
</node>
<node id="if_119">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_120">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &lt; sizeof(struct bcm_add_indication_alt</data>
</node>
<node id="if_121">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;ulSFId, IoBuffer.InputBuffer, sizeof(ulSFId</data>
</node>
<node id="if_122">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_123">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength != sizeof(struct bcm_host_stats_mibs</data>
</node>
<node id="if_124">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!temp_buff</data>
</node>
<node id="if_125">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_FAILURE</data>
</node>
<node id="if_126">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, temp_buff, sizeof(struct bcm_host_stats_mibs</data>
</node>
<node id="if_127">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(FALSE == Adapter-&gt;bTriedToWakeUpFromlowPowerMode</data>
</node>
<node id="if_128">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_129">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_130">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength &lt; sizeof(ULONG</data>
</node>
<node id="if_131">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(pvBuffer</data>
</node>
<node id="if_132">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((ULONG</data>
</node>
<node id="if_133">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!((Adapter-&gt;pstargetparams-&gt;m_u32Customize</data>
</node>
<node id="if_134">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pBulkBuffer-&gt;SwapEndian == FALSE</data>
</node>
<node id="if_135">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_136">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_137">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;eNVMType == NVM_EEPROM || Adapter-&gt;eNVMType == NVM_FLASH</data>
</node>
<node id="if_138">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, &amp;Adapter-&gt;uiNVMDSDSize, sizeof(UINT</data>
</node>
<node id="if_139">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;eNVMType == NVM_FLASH</data>
</node>
<node id="if_140">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_141">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;uiSectorSize, IoBuffer.InputBuffer, sizeof(UINT</data>
</node>
<node id="if_142">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(uiSectorSize &lt; MIN_SECTOR_SIZE</data>
</node>
<node id="if_143">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, &amp;Adapter-&gt;uiSectorSize,
							sizeof(UINT</data>
</node>
<node id="if_144">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_145">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer,	&amp;Adapter-&gt;uiSectorSize, sizeof(UINT</data>
</node>
<node id="if_146">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(TRUE == Adapter-&gt;bShutStatus</data>
</node>
<node id="if_147">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_148">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sUserDebugState, IoBuffer.InputBuffer, sizeof(struct bcm_user_debug_state</data>
</node>
<node id="if_149">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sUserDebugState.OnOff</data>
</node>
<node id="if_150">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;eNVMType == NVM_FLASH</data>
</node>
<node id="if_151">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_152">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;eActiveDSD != DSD0</data>
</node>
<node id="if_153">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_154">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;stNVMReadWrite,
					(IOCTL_BCM_NVM_READ == cmd</data>
</node>
<node id="if_155">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stNVMReadWrite.uiNumBytes &gt; Adapter-&gt;uiNVMDSDSize</data>
</node>
<node id="if_156">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">stNVMReadWrite.uiOffset &gt; Adapter-&gt;uiNVMDSDSize - stNVMReadWrite.uiNumBytes</data>
</node>
<node id="if_157">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IS_ERR(pReadData</data>
</node>
<node id="if_158">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IOCTL_BCM_NVM_READ == cmd</data>
</node>
<node id="if_159">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_160">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_161">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(stNVMReadWrite.pBuffer, pReadData, stNVMReadWrite.uiNumBytes</data>
</node>
<node id="if_162">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_163">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_164">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_165">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((stNVMReadWrite.uiOffset + stNVMReadWrite.uiNumBytes</data>
</node>
<node id="if_166">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ulDSDMagicNumInUsrBuff != DSD_IMAGE_MAGIC_NUMBER</data>
</node>
<node id="if_167">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_168">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status != STATUS_SUCCESS</data>
</node>
<node id="if_169">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_170">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_171">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sFlash2xRead, IoBuffer.InputBuffer, sizeof(struct bcm_flash2x_readwrite</data>
</node>
<node id="if_172">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">validateFlash2xReadWrite(Adapter, &amp;sFlash2xRead</data>
</node>
<node id="if_173">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; Adapter-&gt;uiSectorSize</data>
</node>
<node id="if_174">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pReadBuff == NULL</data>
</node>
<node id="if_175">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_176">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; Adapter-&gt;uiSectorSize</data>
</node>
<node id="if_177">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_178">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_179">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB</data>
</node>
<node id="if_180">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_181">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_182">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;sFlash2xWrite, IoBuffer.InputBuffer, sizeof(struct bcm_flash2x_readwrite</data>
</node>
<node id="if_183">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(sFlash2xWrite.Section != VSA0</data>
</node>
<node id="if_184">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">validateFlash2xReadWrite(Adapter, &amp;sFlash2xWrite</data>
</node>
<node id="if_185">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; Adapter-&gt;uiSectorSize</data>
</node>
<node id="if_186">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pWriteBuff == NULL</data>
</node>
<node id="if_187">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">WriteOffset % Adapter-&gt;uiSectorSize</data>
</node>
<node id="if_188">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &lt; WriteBytes</data>
</node>
<node id="if_189">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_190">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_191">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_192">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB</data>
</node>
<node id="if_193">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; Adapter-&gt;uiSectorSize</data>
</node>
<node id="if_194">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_195">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength != sizeof(struct bcm_flash2x_bitmap</data>
</node>
<node id="if_196">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">psFlash2xBitMap == NULL</data>
</node>
<node id="if_197">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_198">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, psFlash2xBitMap, sizeof(struct bcm_flash2x_bitmap</data>
</node>
<node id="if_199">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_200">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_201">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_202">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_203">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_204">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_205">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_206">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_207">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsSectionExistInFlash(Adapter, sCopySectStrut.SrcSection</data>
</node>
<node id="if_208">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsSectionExistInFlash(Adapter, sCopySectStrut.DstSection</data>
</node>
<node id="if_209">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sCopySectStrut.SrcSection == sCopySectStrut.DstSection</data>
</node>
<node id="if_210">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_211">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sCopySectStrut.SrcSection == ISO_IMAGE1 || sCopySectStrut.SrcSection == ISO_IMAGE2</data>
</node>
<node id="if_212">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsNonCDLessDevice(Adapter</data>
</node>
<node id="if_213">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sCopySectStrut.numOfBytes == 0</data>
</node>
<node id="if_214">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_215">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;eNVMType != NVM_FLASH</data>
</node>
<node id="if_216">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_217">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &lt; sizeof(struct bcm_flash2x_cs_info</data>
</node>
<node id="if_218">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, Adapter-&gt;psFlash2xCSInfo, sizeof(struct bcm_flash2x_cs_info</data>
</node>
<node id="if_219">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &lt; sizeof(struct bcm_flash_cs_info</data>
</node>
<node id="if_220">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, Adapter-&gt;psFlashCSInfo, sizeof(struct bcm_flash_cs_info</data>
</node>
<node id="if_221">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsFlash2x(Adapter</data>
</node>
<node id="if_222">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_223">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_224">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(eFlash2xSectionVal != DSD0</data>
</node>
<node id="if_225">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SectOfset == INVALID_OFFSET</data>
</node>
<node id="if_226">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Adapter-&gt;eNVMType != NVM_FLASH</data>
</node>
<node id="if_227">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_228">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;stNVMRead, IoBuffer.OutputBuffer, sizeof(struct bcm_nvm_readwrite</data>
</node>
<node id="if_229">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; DEFAULT_BUFF_SIZE</data>
</node>
<node id="if_230">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pReadBuff == NULL</data>
</node>
<node id="if_231">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(Adapter-&gt;IdleMode == TRUE</data>
</node>
<node id="if_232">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB &gt; DEFAULT_BUFF_SIZE</data>
</node>
<node id="if_233">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_234">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_235">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NOB</data>
</node>
<node id="if_236">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_237">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.InputLength != sizeof(unsigned long</data>
</node>
<node id="if_238">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Status</data>
</node>
<node id="if_239">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_240">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &lt; sizeof(DevInfo</data>
</node>
<node id="if_241">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, &amp;DevInfo, sizeof(DevInfo</data>
</node>
<node id="if_242">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_from_user(&amp;IoBuffer, argp, sizeof(struct bcm_ioctl_buffer</data>
</node>
<node id="if_243">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoBuffer.OutputLength &lt; sizeof(struct bcm_time_elapsed</data>
</node>
<node id="if_244">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">copy_to_user(IoBuffer.OutputBuffer, &amp;stTimeElapsedSinceNetEntry, sizeof(struct bcm_time_elapsed</data>
</node>
<node id="for_245">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">uiLoopIndex = 0; uiLoopIndex &lt; NO_OF_QUEUES; uiLoopIndex++</data>
</node>
<node id="while_246">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">NOB</data>
</node>
<node id="while_247">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">NOB &gt; 0</data>
</node>
<node id="while_248">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">NOB</data>
</node>
<node id="switch_249">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">cmd</data>
</node>
<node id="switch_250">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">cmd</data>
</node>
<edge source="bcm_char_ioctl" target="pgpio_multi_mode">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="gpio_multi_info">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="psFwInfo">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="gpio_info">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sUserDebugState">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sCopySectStrut">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="stNVMRead">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sFlash2xWrite">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="filp">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sWrmBuffer">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sFlash2xRead">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="stNVMReadWrite">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="pgpio_multi_info">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="IoBuffer">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="gpio_multi_mode">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="threadReq">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="timeout">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="eFlash2xSectionVal">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="link_state">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="Adapter">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="psFlash2xBitMap">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="pBulkBuffer">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="DevInfo">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="pTarang">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="stTimeElapsedSinceNetEntry">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="sRdmBuffer">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="bytes">
  <data key="d6">declares</data>
</edge>
<edge source="bcm_char_ioctl" target="down_trylock">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmCopyISO">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="DumpPhsRules">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="pr_err">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="up">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="flushAllAppQ">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="wrmalt">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="netif_carrier_off">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="min_t">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BCM_DEBUG_PRINT_BUFFER">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmSetActiveSection">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="GetDroppedAppCntrlPktMibs">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BCM_SHOW_DEBUG_BITMAP">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmCopySection">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="down">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="copy_to_user">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="wrmaltWithLock">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="wake_up">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="kfree">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="ResetCounters">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="DumpPackInfo">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmFlash2xCorruptSig">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmGetSectionValStartOffset">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="wait_event_timeout">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="pr_info">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmUpdateSectorSize">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmFlash2xBulkWrite">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="do_gettimeofday">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="memdup_user">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BeceemNVMRead">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="wait_event_interruptible_timeout">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="rdmalt">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="s">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="get_seconds">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="copy_from_user">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="atomic_set">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="kmalloc">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="rdmaltWithLock">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="bcm_ioctl_fw_download">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="netif_stop_queue">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="CopyBufferToControlPacket">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmFlash2xBulkRead">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BCM_DEBUG_PRINT">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="run_card_proc">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="get_dsx_sf_data_to_application">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="kzalloc">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmFlash2xWriteSig">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BcmGetFlash2xSectionalBitMap">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="BeceemNVMWrite">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="vendorextnIoctl">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="reset_card_proc">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="ProcessGetHostMibs">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="running">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="ntohl">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="mdelay">
  <data key="d6">calls</data>
</edge>
<edge source="bcm_char_ioctl" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_71">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_72">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_73">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_74">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_75">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_76">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_77">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_78">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_79">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_80">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_81">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_82">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_83">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_84">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_85">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_86">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_87">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_88">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_89">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_90">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_91">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_92">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_93">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_94">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_95">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_96">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_97">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_98">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_99">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_100">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_101">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_102">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_103">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_104">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_105">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_106">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_107">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_108">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_109">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_110">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_111">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_112">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_113">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_114">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_115">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_116">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_117">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_118">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_119">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_120">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_121">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_122">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_123">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_124">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_125">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_126">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_127">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_128">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_129">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_130">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_131">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_132">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_133">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_134">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_135">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_136">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_137">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_138">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_139">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_140">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_141">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_142">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_143">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_144">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_145">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_146">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_147">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_148">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_149">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_150">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_151">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_152">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_153">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_154">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_155">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_156">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_157">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_158">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_159">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_160">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_161">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_162">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_163">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_164">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_165">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_166">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_167">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_168">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_169">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_170">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_171">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_172">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_173">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_174">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_175">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_176">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_177">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_178">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_179">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_180">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_181">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_182">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_183">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_184">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_185">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_186">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_187">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_188">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_189">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_190">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_191">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_192">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_193">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_194">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_195">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_196">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_197">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_198">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_199">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_200">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_201">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_202">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_203">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_204">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_205">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_206">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_207">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_208">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_209">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_210">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_211">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_212">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_213">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_214">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_215">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_216">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_217">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_218">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_219">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_220">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_221">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_222">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_223">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_224">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_225">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_226">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_227">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_228">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_229">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_230">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_231">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_232">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_233">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_234">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_235">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_236">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_237">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_238">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_239">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_240">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_241">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_242">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_243">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="if_244">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="for_245">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="while_246">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="while_247">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="while_248">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="switch_249">
  <data key="d6">contains</data>
</edge>
<edge source="bcm_char_ioctl" target="switch_250">
  <data key="d6">contains</data>
</edge>
<edge source="pgpio_multi_mode" target="if_75">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_mode" target="if_76">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_mode" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pgpio_multi_mode" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_mode" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_multi_info" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_info" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_info" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_info" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_info" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_info" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_info" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_info" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_info" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_info" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_multi_info" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFwInfo" target="if_91">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="psFwInfo" target="if_92">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFwInfo" target="if_93">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFwInfo" target="if_95">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="psFwInfo" target="kfree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFwInfo" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFwInfo" target="kmalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFwInfo" target="bcm_ioctl_fw_download">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFwInfo" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFwInfo" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFwInfo" target="if_94">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFwInfo" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_info" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_info" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_info" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_info" target="if_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_info" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_info" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_info" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sUserDebugState" target="if_148">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sUserDebugState" target="if_149">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sUserDebugState" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sUserDebugState" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sUserDebugState" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sUserDebugState" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="if_207">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="if_208">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="if_209">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sCopySectStrut" target="if_211">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="if_213">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="BcmCopyISO">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sCopySectStrut" target="BcmCopySection">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sCopySectStrut" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sCopySectStrut" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sCopySectStrut" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sCopySectStrut" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMRead" target="if_154">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="if_155">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="if_156">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="if_161">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="if_165">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="if_228">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMRead" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMRead" target="memdup_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMRead" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMRead" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMRead" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMRead" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sFlash2xWrite" target="if_182">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sFlash2xWrite" target="if_183">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sFlash2xWrite" target="if_184">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sFlash2xWrite" target="BcmFlash2xCorruptSig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xWrite" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xWrite" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xWrite" target="BcmFlash2xWriteSig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xWrite" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sFlash2xWrite" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="filp" target="bcm_char_ioctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sWrmBuffer" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sWrmBuffer" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sWrmBuffer" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sWrmBuffer" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sWrmBuffer" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sWrmBuffer" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sWrmBuffer" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sWrmBuffer" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sWrmBuffer" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sFlash2xRead" target="if_171">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sFlash2xRead" target="if_172">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sFlash2xRead" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xRead" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sFlash2xRead" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sFlash2xRead" target="while_246">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sFlash2xRead" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_155">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_156">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_161">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMReadWrite" target="if_165">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stNVMReadWrite" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMReadWrite" target="memdup_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMReadWrite" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMReadWrite" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stNVMReadWrite" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_147">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_148">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_149">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_153">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_157">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_158">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_163">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="if_164">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stNVMReadWrite" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pgpio_multi_info" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pgpio_multi_info" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="if_60">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pgpio_multi_info" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_53">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_79">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_80">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_81">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_92">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_111">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_113">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_114">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_116">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_117">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_119">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_121">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_122">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_123">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_126">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_129">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_130">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_136">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_138">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_140">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_141">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_143">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_145">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_147">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_148">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_153">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_170">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_171">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_181">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_182">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_194">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_195">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_198">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_217">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_218">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_219">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_220">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_227">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_228">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_237">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_239">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_240">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_241">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_242">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_243">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="if_244">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="IoBuffer" target="min_t">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="memdup_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="kmalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="get_dsx_sf_data_to_application">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="IoBuffer" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_118">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_134">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_135">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_137">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_139">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_142">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_144">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_149">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="if_216">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="while_247">
  <data key="d6">used_in_body</data>
</edge>
<edge source="IoBuffer" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_multi_mode" target="if_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_mode" target="if_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_mode" target="if_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_mode" target="if_76">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="gpio_multi_mode" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_mode" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_mode" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="gpio_multi_mode" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="gpio_multi_mode" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="if_48">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="if_49">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="threadReq" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="threadReq" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="if_47">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="threadReq" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_103">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="timeout" target="wait_event_timeout">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="timeout" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="if_97">
  <data key="d6">used_in_body</data>
</edge>
<edge source="timeout" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="if_224">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="BcmSetActiveSection">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eFlash2xSectionVal" target="BcmGetSectionValStartOffset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eFlash2xSectionVal" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eFlash2xSectionVal" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="eFlash2xSectionVal" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="if_219">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="if_220">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="if_225">
  <data key="d6">used_in_body</data>
</edge>
<edge source="eFlash2xSectionVal" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="link_state" target="if_114">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="link_state" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="link_state" target="min_t">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="link_state" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="link_state" target="memset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="link_state" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="link_state" target="if_111">
  <data key="d6">used_in_body</data>
</edge>
<edge source="link_state" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="link_state" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_112">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="min_t">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="kmalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="Adapter" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="Adapter" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_46">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_75">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_84">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_85">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_86">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_88">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_96">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_98">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_99">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_102">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_104">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_105">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_107">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="Adapter" target="if_108">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_127">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_128">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_133">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_137">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_138">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_139">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_143">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_144">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_145">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_146">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_150">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_151">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_152">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_155">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_156">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_159">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_162">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_163">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_167">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="Adapter" target="if_169">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_172">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_173">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_175">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_176">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_184">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_185">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_187">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_189">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_197">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_199">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_202">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_204">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_207">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_208">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_210">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_212">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_216">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_218">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_220">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_221">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_226">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_231">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="down_trylock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmCopyISO">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="DumpPhsRules">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="pr_err">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="up">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="wrmalt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="netif_carrier_off">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BCM_DEBUG_PRINT_BUFFER">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmSetActiveSection">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BCM_SHOW_DEBUG_BITMAP">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmCopySection">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="down">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="wrmaltWithLock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="wake_up">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="ResetCounters">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="DumpPackInfo">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmFlash2xCorruptSig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmGetSectionValStartOffset">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="wait_event_timeout">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmUpdateSectorSize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmFlash2xBulkWrite">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BeceemNVMRead">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="wait_event_interruptible_timeout">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="rdmalt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="s">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="atomic_set">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="rdmaltWithLock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="bcm_ioctl_fw_download">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="netif_stop_queue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="CopyBufferToControlPacket">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmFlash2xBulkRead">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BCM_DEBUG_PRINT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="run_card_proc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="get_dsx_sf_data_to_application">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmFlash2xWriteSig">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BcmGetFlash2xSectionalBitMap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="BeceemNVMWrite">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="vendorextnIoctl">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="reset_card_proc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="ProcessGetHostMibs">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="Adapter" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_31">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_45">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_47">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_48">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_49">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_60">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_65">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_69">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_72">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_76">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_77">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_78">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_79">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_80">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_81">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_82">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_83">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_87">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_89">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_90">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_91">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_92">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_93">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_94">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_95">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_97">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_100">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_101">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_103">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_109">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_110">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_111">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_113">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_116">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_117">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_118">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_119">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_121">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_122">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_123">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_129">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_130">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_131">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_132">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_134">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_135">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_136">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_140">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_141">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_142">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_147">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_148">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_149">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_153">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_154">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_157">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_158">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_164">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_165">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_166">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_170">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_171">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_174">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_177">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_178">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_181">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_182">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_183">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_186">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_188">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_190">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_191">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_194">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_195">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_196">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_200">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_201">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_203">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_205">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_206">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_209">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_211">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_213">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_214">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_217">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_219">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_222">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_223">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_224">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_225">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_227">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_228">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_229">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_230">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_232">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_233">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_234">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_236">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_238">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_239">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_240">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="if_241">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="for_245">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="while_246">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="while_247">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="while_248">
  <data key="d6">used_in_body</data>
</edge>
<edge source="Adapter" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="if_196">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="psFlash2xBitMap" target="if_198">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFlash2xBitMap" target="kfree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFlash2xBitMap" target="BcmGetFlash2xSectionalBitMap">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="psFlash2xBitMap" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="if_197">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="while_247">
  <data key="d6">used_in_body</data>
</edge>
<edge source="psFlash2xBitMap" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="if_134">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pBulkBuffer" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="if_129">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="if_130">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="if_131">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="if_132">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pBulkBuffer" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="DevInfo" target="if_240">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="DevInfo" target="if_241">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="DevInfo" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="DevInfo" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="DevInfo" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pTarang" target="GetDroppedAppCntrlPktMibs">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pTarang" target="s">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pTarang" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pTarang" target="if_121">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pTarang" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="if_244">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="if_239">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="if_240">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="if_241">
  <data key="d6">used_in_body</data>
</edge>
<edge source="stTimeElapsedSinceNetEntry" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sRdmBuffer" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sRdmBuffer" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sRdmBuffer" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sRdmBuffer" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sRdmBuffer" target="copy_from_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sRdmBuffer" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sRdmBuffer" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sRdmBuffer" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sRdmBuffer" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bytes" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="bytes" target="if_44">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="copy_to_user">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bytes" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_67">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_72">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="if_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bytes" target="switch_250">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>