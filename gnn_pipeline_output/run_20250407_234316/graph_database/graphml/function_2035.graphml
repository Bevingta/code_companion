<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-6720</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="allocateBufferWithBackup">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="CLOG_ERROR">
  <data key="d4">FunctionCall</data>
</node>
<node id="addCodecBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="autoLock">
  <data key="d4">FunctionCall</data>
</node>
<node id="makeBufferID">
  <data key="d4">FunctionCall</data>
</node>
<node id="BufferMeta">
  <data key="d4">FunctionCall</data>
</node>
<node id="addActiveBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="OMX_AllocateBuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="StatusFromOMXError">
  <data key="d4">FunctionCall</data>
</node>
<node id="CHECK_EQ">
  <data key="d4">FunctionCall</data>
</node>
<node id="CLOG_BUFFER">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALOGE">
  <data key="d4">FunctionCall</data>
</node>
<node id="bufferSource">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">params == NULL || buffer == NULL</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">allottedSize &gt; params-&gt;size(</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">err != OMX_ErrorNone</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">bufferSource != NULL &amp;&amp; portIndex == kPortIndexInput</data>
</node>
<edge source="allocateBufferWithBackup" target="CLOG_ERROR">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="addCodecBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="autoLock">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="makeBufferID">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="BufferMeta">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="addActiveBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="OMX_AllocateBuffer">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="StatusFromOMXError">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="CHECK_EQ">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="CLOG_BUFFER">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="ALOGE">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="bufferSource">
  <data key="d6">calls</data>
</edge>
<edge source="allocateBufferWithBackup" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="allocateBufferWithBackup" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="allocateBufferWithBackup" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="allocateBufferWithBackup" target="if_3">
  <data key="d6">contains</data>
</edge>
</graph></graphml>