<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-15165</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="pcap_ng_check_header">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="magic">
  <data key="d4">Variable</data>
</node>
<node id="bhdrp">
  <data key="d4">Variable</data>
</node>
<node id="err">
  <data key="d4">Variable</data>
</node>
<node id="swapped">
  <data key="d4">Variable</data>
</node>
<node id="cursor">
  <data key="d4">Variable</data>
</node>
<node id="fp">
  <data key="d4">Variable</data>
</node>
<node id="errbuf">
  <data key="d4">Variable</data>
</node>
<node id="status">
  <data key="d4">Variable</data>
</node>
<node id="precision">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="shbp">
  <data key="d4">Variable</data>
</node>
<node id="amt_read">
  <data key="d4">Variable</data>
</node>
<node id="idbp">
  <data key="d4">Variable</data>
</node>
<node id="ps">
  <data key="d4">Variable</data>
</node>
<node id="read_block">
  <data key="d4">FunctionCall</data>
</node>
<node id="free">
  <data key="d4">FunctionCall</data>
</node>
<node id="malloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="pcap_fmt_errmsg_for_errno">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_from_block_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="linktype_to_dlt">
  <data key="d4">FunctionCall</data>
</node>
<node id="SWAPSHORT">
  <data key="d4">FunctionCall</data>
</node>
<node id="pcap_adjust_snapshot">
  <data key="d4">FunctionCall</data>
</node>
<node id="pcap_snprintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="fread">
  <data key="d4">FunctionCall</data>
</node>
<node id="SWAPLONG">
  <data key="d4">FunctionCall</data>
</node>
<node id="pcap_open_offline_common">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">magic_int != BT_SHB</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">amt_read &lt; sizeof(total_length</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ferror(fp</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">amt_read &lt; sizeof(byte_order_magic</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ferror(fp</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">byte_order_magic != BYTE_ORDER_MAGIC</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">byte_order_magic != BYTE_ORDER_MAGIC</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">total_length &lt; sizeof(*bhdrp</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p == NULL</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;bufsize &lt; total_length</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;buffer == NULL</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">read_bytes(fp,
	    (u_char *</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;swapped</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">! (shbp-&gt;major_version == PCAP_NG_VERSION_MAJOR &amp;&amp;
	       shbp-&gt;minor_version == PCAP_NG_VERSION_MINOR</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == 0</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == -1</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">idbp == NULL</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">p-&gt;swapped</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!add_interface(p, &amp;cursor, errbuf</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">MAX_BLOCKSIZE_FOR_SNAPLEN(max_snaplen_for_dlt(p-&gt;linktype</data>
</node>
<node id="for_20">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">;;</data>
</node>
<node id="switch_21">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">precision</data>
</node>
<node id="switch_22">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">cursor.block_type</data>
</node>
<edge source="pcap_ng_check_header" target="magic">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="bhdrp">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="err">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="swapped">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="cursor">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="fp">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="errbuf">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="status">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="precision">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="shbp">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="amt_read">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="idbp">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="ps">
  <data key="d6">declares</data>
</edge>
<edge source="pcap_ng_check_header" target="read_block">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="free">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="malloc">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="pcap_fmt_errmsg_for_errno">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="get_from_block_data">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="linktype_to_dlt">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="SWAPSHORT">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="pcap_adjust_snapshot">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="pcap_snprintf">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="fread">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="SWAPLONG">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="pcap_open_offline_common">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="pcap_ng_check_header" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="for_20">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="switch_21">
  <data key="d6">contains</data>
</edge>
<edge source="pcap_ng_check_header" target="switch_22">
  <data key="d6">contains</data>
</edge>
<edge source="magic" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="magic" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="magic" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="magic" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="magic" target="pcap_ng_check_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="magic" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="magic" target="fread">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="magic" target="SWAPLONG">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="magic" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="bhdrp" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="bhdrp" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="err" target="read_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="pcap_ng_check_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="pcap_fmt_errmsg_for_errno">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="pcap_snprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="pcap_open_offline_common">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="err" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="err" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="swapped" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="swapped" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="swapped" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="swapped" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="swapped" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="swapped" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cursor" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="cursor" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cursor" target="read_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cursor" target="get_from_block_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="cursor" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="cursor" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fp" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fp" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fp" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fp" target="read_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fp" target="pcap_ng_check_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fp" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fp" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fp" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="errbuf" target="read_block">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="errbuf" target="pcap_ng_check_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="errbuf" target="pcap_fmt_errmsg_for_errno">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="errbuf" target="pcap_snprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="errbuf" target="pcap_open_offline_common">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="errbuf" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="errbuf" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="status" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="status" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="status" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="precision" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="precision" target="pcap_ng_check_header">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="precision" target="pcap_snprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="p" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shbp" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="shbp" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="shbp" target="SWAPSHORT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="shbp" target="pcap_snprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="shbp" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="shbp" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="shbp" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amt_read" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="amt_read" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="idbp" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idbp" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="get_from_block_data">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="linktype_to_dlt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="SWAPSHORT">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="pcap_adjust_snapshot">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="SWAPLONG">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="idbp" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idbp" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idbp" target="for_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="idbp" target="switch_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ps" target="free">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ps" target="switch_21">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>