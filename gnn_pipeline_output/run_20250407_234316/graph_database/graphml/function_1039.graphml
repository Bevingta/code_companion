<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-6501</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ReadXCFImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="magick">
  <data key="d4">Variable</data>
</node>
<node id="foundPropEnd">
  <data key="d4">Variable</data>
</node>
<node id="offset">
  <data key="d4">Variable</data>
</node>
<node id="digits">
  <data key="d4">Variable</data>
</node>
<node id="buf">
  <data key="d4">Variable</data>
</node>
<node id="unit_string">
  <data key="d4">Variable</data>
</node>
<node id="count">
  <data key="d4">Variable</data>
</node>
<node id="prop_size">
  <data key="d4">Variable</data>
</node>
<node id="base">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="current_layer">
  <data key="d4">Variable</data>
</node>
<node id="tattoo_state">
  <data key="d4">Variable</data>
</node>
<node id="unit">
  <data key="d4">Variable</data>
</node>
<node id="factor">
  <data key="d4">Variable</data>
</node>
<node id="xres">
  <data key="d4">Variable</data>
</node>
<node id="num_colours">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="amount">
  <data key="d4">Variable</data>
</node>
<node id="yres">
  <data key="d4">Variable</data>
</node>
<node id="SetImageOpacity">
  <data key="d4">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d4">FunctionCall</data>
</node>
<node id="gimp_image_parasite_attach">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_message">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="ThrowFileException">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobStringWithLongSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="AppendImageToList">
  <data key="d4">FunctionCall</data>
</node>
<node id="gimp_parasite_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobMSBSignedLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="MagickMin">
  <data key="d4">FunctionCall</data>
</node>
<node id="InheritException">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="gimp_image_set_paths">
  <data key="d4">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadOneLayer">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_new">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetQuantizeInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_read_int32">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobByte">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageBackgroundColor">
  <data key="d4">FunctionCall</data>
</node>
<node id="CompositeImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_load_channel">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_read_int8">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_load_bzpaths">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_seek_pos">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobMSBLong">
  <data key="d4">FunctionCall</data>
</node>
<node id="QuantizeImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBlobSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="xcf_load_parasite">
  <data key="d4">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 14</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(doc_info.width &gt; 262144</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_type == GIMP_RGB</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_type == GIMP_GRAY</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_type == GIMP_INDEXED</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DiscardBlobBytes(image,3*num_colours</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">info-&gt;file_version == 0</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(doc_info.compression != COMPRESS_NONE</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DiscardBlobBytes(image,prop_size</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">xres &lt; GIMP_MIN_RESOLUTION || xres &gt; GIMP_MAX_RESOLUTION ||
            yres &lt; GIMP_MIN_RESOLUTION || yres &gt; GIMP_MAX_RESOLUTION</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DiscardBlobBytes(image,prop_size</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">info-&gt;cp - base != prop_size</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">DiscardBlobBytes(image,prop_size</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!amount</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">foundPropEnd == MagickFalse</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset == 0</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EOFBlob(image</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset &lt; 0</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_info == (XCFLayerInfo *</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset == 0</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SeekBlob(image,offset,SEEK_SET</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">layer_ok == MagickFalse</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> layer_info[j].visible </data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5"> image_type == GIMP_GRAY </data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">offset == 0</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">channel == 0</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">channel != gimage-&gt;selection_mask</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_type == GIMP_GRAY</data>
</node>
<node id="for_32">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i&lt;gimage-&gt;num_cols; i++</data>
</node>
<node id="for_33">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0; i&lt;5; i++</data>
</node>
<node id="for_34">
  <data key="d4">ControlStructure_for</data>
  <data key="d5"> ; ; </data>
</node>
<node id="for_35">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=0; j &lt; current_layer; j++</data>
</node>
<node id="for_36">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=number_layers-1; j&gt;=0; j--</data>
</node>
<node id="for_37">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j=(long</data>
</node>
<node id="while_38">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(foundPropEnd == MagickFalse</data>
</node>
<node id="while_39">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">info-&gt;cp - base &lt; prop_size</data>
</node>
<node id="while_40">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(prop_size &gt; 0</data>
</node>
<node id="while_41">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">foundAllLayers == MagickFalse</data>
</node>
<node id="while_42">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">MagickTrue</data>
</node>
<node id="switch_43">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">prop_type</data>
</node>
<edge source="ReadXCFImage" target="magick">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="foundPropEnd">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="offset">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="digits">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="buf">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="unit_string">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="count">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="prop_size">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="base">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="current_layer">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="tattoo_state">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="unit">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="factor">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="xres">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="num_colours">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="amount">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="yres">
  <data key="d6">declares</data>
</edge>
<edge source="ReadXCFImage" target="SetImageOpacity">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="RelinquishMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ThrowReaderException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="gimp_image_parasite_attach">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="AcquireQuantumMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="DestroyImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="g_message">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ThrowFileException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadBlobStringWithLongSize">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="AppendImageToList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="gimp_parasite_free">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadBlobMSBSignedLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="MagickMin">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="InheritException">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="gimp_image_set_paths">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="TellBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadOneLayer">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="g_new">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="GetQuantizeInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_read_int32">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadBlobByte">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="SetImageBackgroundColor">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="CompositeImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_load_channel">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_read_int8">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_load_bzpaths">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_seek_pos">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="ReadBlobMSBLong">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="QuantizeImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="GetBlobSize">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="xcf_load_parasite">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="SeekBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadXCFImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_32">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_33">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_34">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_35">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_36">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="for_37">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="while_38">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="while_39">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="while_40">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="while_41">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="while_42">
  <data key="d6">contains</data>
</edge>
<edge source="ReadXCFImage" target="switch_43">
  <data key="d6">contains</data>
</edge>
<edge source="foundPropEnd" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="foundPropEnd" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="foundPropEnd" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="foundPropEnd" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="foundPropEnd" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="foundPropEnd" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="offset" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="offset" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="offset" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="offset" target="xcf_read_int32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="CompositeImage">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="xcf_seek_pos">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="SeekBlob">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="for_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="for_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="while_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="offset" target="while_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="digits" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="while_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="ReadBlobStringWithLongSize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="unit_string" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit_string" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="count" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="while_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="prop_size" target="while_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="MagickMin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="prop_size" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="prop_size" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="while_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="current_layer" target="for_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="current_layer" target="ReadOneLayer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="current_layer" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="for_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="current_layer" target="while_41">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tattoo_state" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tattoo_state" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tattoo_state" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tattoo_state" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tattoo_state" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="ReadBlobStringWithLongSize">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="unit" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="unit" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="factor" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="xres" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_colours" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="num_colours" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_colours" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_colours" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_colours" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="num_colours" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="j" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="amount" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="amount" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="for_33">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="while_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="amount" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="while_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="yres" target="switch_43">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>