<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-2347</data>
<data key="d2">6.8</data>
<data key="d3">MEDIUM</data>
<node id="decode_level3_header">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="header_len">
  <data key="d4">Variable</data>
</node>
<node id="RAW_DATA">
  <data key="d4">FunctionCall</data>
</node>
<node id="lha_decode_uint32">
  <data key="d4">FunctionCall</data>
</node>
<node id="lha_decode_uint16">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">lha_decode_uint16(&amp;RAW_DATA(header, 0</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!extend_raw_data(header, stream,
	                     LEVEL_3_HEADER_LEN - RAW_DATA_LEN(header</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">header_len &gt; LEVEL_3_MAX_HEADER_LEN</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!extend_raw_data(header, stream,
	                     header_len - RAW_DATA_LEN(header</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!decode_extended_headers(header, 28</data>
</node>
<edge source="decode_level3_header" target="header_len">
  <data key="d6">declares</data>
</edge>
<edge source="decode_level3_header" target="RAW_DATA">
  <data key="d6">calls</data>
</edge>
<edge source="decode_level3_header" target="lha_decode_uint32">
  <data key="d6">calls</data>
</edge>
<edge source="decode_level3_header" target="lha_decode_uint16">
  <data key="d6">calls</data>
</edge>
<edge source="decode_level3_header" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="decode_level3_header" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="decode_level3_header" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="decode_level3_header" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="decode_level3_header" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="decode_level3_header" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="header_len" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="header_len" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>