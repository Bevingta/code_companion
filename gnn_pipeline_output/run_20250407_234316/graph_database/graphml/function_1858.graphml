<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-6086</data>
<data key="d1">6.8</data>
<data key="d2">MEDIUM</data>
<node id="EvictIfNeeded">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="target_size">
  <data key="d3">Variable</data>
</node>
<node id="head">
  <data key="d3">FunctionCall</data>
</node>
<node id="max">
  <data key="d3">FunctionCall</data>
</node>
<node id="next">
  <data key="d3">FunctionCall</data>
</node>
<node id="value">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">current_size_ &lt;= max_size_</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!to_doom-&gt;InUse(</data>
</node>
<node id="while_2">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">current_size_ &gt; target_size &amp;&amp; entry != lru_list_.end(</data>
</node>
<edge source="EvictIfNeeded" target="target_size">
  <data key="d5">declares</data>
</edge>
<edge source="EvictIfNeeded" target="head">
  <data key="d5">calls</data>
</edge>
<edge source="EvictIfNeeded" target="max">
  <data key="d5">calls</data>
</edge>
<edge source="EvictIfNeeded" target="next">
  <data key="d5">calls</data>
</edge>
<edge source="EvictIfNeeded" target="value">
  <data key="d5">calls</data>
</edge>
<edge source="EvictIfNeeded" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="EvictIfNeeded" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="EvictIfNeeded" target="while_2">
  <data key="d5">contains</data>
</edge>
<edge source="target_size" target="while_2">
  <data key="d5">used_in_condition</data>
</edge>
</graph></graphml>