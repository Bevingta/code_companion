<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-8061</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="usb_cypress_load_firmware">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="hx">
  <data key="d3">Variable</data>
</node>
<node id="udev">
  <data key="d3">Variable</data>
</node>
<node id="type">
  <data key="d3">Variable</data>
</node>
<node id="fw">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="usb_cypress_writemem">
  <data key="d3">FunctionCall</data>
</node>
<node id="deb_fw">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!hx</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">(ret = usb_cypress_writemem(udev,cypress[type].cpu_cs_register,&amp;reset,1</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret != hx-&gt;len</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret &lt; 0</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret == 0</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret || usb_cypress_writemem(udev,cypress[type].cpu_cs_register,&amp;reset,1</data>
</node>
<node id="while_6">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">(ret = dvb_usb_get_hexline(fw, hx, &amp;pos</data>
</node>
<edge source="usb_cypress_load_firmware" target="hx">
  <data key="d5">declares</data>
</edge>
<edge source="usb_cypress_load_firmware" target="udev">
  <data key="d5">declares</data>
</edge>
<edge source="usb_cypress_load_firmware" target="type">
  <data key="d5">declares</data>
</edge>
<edge source="usb_cypress_load_firmware" target="fw">
  <data key="d5">declares</data>
</edge>
<edge source="usb_cypress_load_firmware" target="err">
  <data key="d5">calls</data>
</edge>
<edge source="usb_cypress_load_firmware" target="kmalloc">
  <data key="d5">calls</data>
</edge>
<edge source="usb_cypress_load_firmware" target="usb_cypress_writemem">
  <data key="d5">calls</data>
</edge>
<edge source="usb_cypress_load_firmware" target="deb_fw">
  <data key="d5">calls</data>
</edge>
<edge source="usb_cypress_load_firmware" target="kfree">
  <data key="d5">calls</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="usb_cypress_load_firmware" target="while_6">
  <data key="d5">contains</data>
</edge>
<edge source="hx" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hx" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hx" target="while_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hx" target="kmalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hx" target="usb_cypress_writemem">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hx" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="hx" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="hx" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="udev" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="udev" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="udev" target="usb_cypress_load_firmware">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="udev" target="usb_cypress_writemem">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="udev" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="udev" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="udev" target="while_6">
  <data key="d5">used_in_body</data>
</edge>
<edge source="type" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="type" target="if_5">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="type" target="usb_cypress_load_firmware">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="type" target="usb_cypress_writemem">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="type" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="fw" target="while_6">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="fw" target="usb_cypress_load_firmware">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>