<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-14054</data>
<data key="d2">7.1</data>
<data key="d3">HIGH</data>
<node id="ivr_read_header">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="avio_tell">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_skip">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_rb32">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_r8">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_rb64">
  <data key="d4">FunctionCall</data>
</node>
<node id="av_log">
  <data key="d4">FunctionCall</data>
</node>
<node id="ff_rm_alloc_rmstream">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_rl32">
  <data key="d4">FunctionCall</data>
</node>
<node id="ffio_ensure_seekback">
  <data key="d4">FunctionCall</data>
</node>
<node id="avformat_new_stream">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_seek">
  <data key="d4">FunctionCall</data>
</node>
<node id="ff_rm_read_mdpr_codecdata">
  <data key="d4">FunctionCall</data>
</node>
<node id="avio_get_str">
  <data key="d4">FunctionCall</data>
</node>
<node id="rm_read_multi">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tag == MKTAG('.','R','1','M'</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_rb16(pb</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">tag != MKTAG('.','R','E','C'</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_feof(pb</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 5</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 4</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == 4 &amp;&amp; type == 3 &amp;&amp; !strncmp(key, "StreamCount", tlen</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == 4 &amp;&amp; type == 3</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!st</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!st-&gt;priv_data</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_feof(pb</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 5</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 4 &amp;&amp; !strncmp(key, "OpaqueData", tlen</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_rb32(pb</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &lt; 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type == 4</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == 4 &amp;&amp; type == 3 &amp;&amp; !strncmp(key, "Duration", tlen</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">len == 4 &amp;&amp; type == 3</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">avio_r8(pb</data>
</node>
<node id="for_26">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; count; i++</data>
</node>
<node id="for_27">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; len; j++</data>
</node>
<node id="for_28">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">n = 0; n &lt; nb_streams; n++</data>
</node>
<node id="for_29">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; count; i++</data>
</node>
<node id="for_30">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">j = 0; j &lt; len; j++</data>
</node>
<node id="while_31">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">!avio_feof(pb</data>
</node>
<edge source="ivr_read_header" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="ivr_read_header" target="avio_tell">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_skip">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_rb32">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_r8">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_rb64">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="av_log">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="ff_rm_alloc_rmstream">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_rl32">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="ffio_ensure_seekback">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avformat_new_stream">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_seek">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="ff_rm_read_mdpr_codecdata">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="avio_get_str">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="rm_read_multi">
  <data key="d6">calls</data>
</edge>
<edge source="ivr_read_header" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="for_26">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="for_27">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="for_28">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="for_29">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="for_30">
  <data key="d6">contains</data>
</edge>
<edge source="ivr_read_header" target="while_31">
  <data key="d6">contains</data>
</edge>
<edge source="j" target="for_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="for_30">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>