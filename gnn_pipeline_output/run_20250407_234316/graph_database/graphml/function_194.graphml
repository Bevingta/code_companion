<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-0735</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="ec_scalar_mul_ladder">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="ret">
  <data key="d4">Variable</data>
</node>
<node id="ECerr">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_set_flags">
  <data key="d4">FunctionCall</data>
</node>
<node id="EC_POINT_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_consttime_swap">
  <data key="d4">FunctionCall</data>
</node>
<node id="EC_POINT_CSWAP">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_CTX_get">
  <data key="d4">FunctionCall</data>
</node>
<node id="EC_POINT_BN_set_flags">
  <data key="d4">FunctionCall</data>
</node>
<node id="bn_get_top">
  <data key="d4">FunctionCall</data>
</node>
<node id="ladder">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_CTX_end">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_CTX_start">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_is_bit_set">
  <data key="d4">FunctionCall</data>
</node>
<node id="ec_point_blind_coordinates">
  <data key="d4">FunctionCall</data>
</node>
<node id="BN_num_bits">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">point != NULL &amp;&amp; EC_POINT_is_at_infinity(group, point</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BN_is_zero(group-&gt;order</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">BN_is_zero(group-&gt;cofactor</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((p = EC_POINT_new(group</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">point == NULL</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!EC_POINT_copy(p, group-&gt;generator</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!EC_POINT_copy(p, point</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">k == NULL</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_mul(cardinality, group-&gt;order, group-&gt;cofactor, ctx</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bn_wexpand(k, group_top + 1</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_copy(k, scalar</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(BN_num_bits(k</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_nnmod(k, k, cardinality, ctx</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_add(lambda, k, cardinality</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!BN_add(k, lambda, cardinality</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(bn_wexpand(s-&gt;X, group_top</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ec_point_blind_coordinates(group, p, ctx</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ec_point_ladder_pre(group, r, s, p, ctx</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ec_point_ladder_step(group, r, s, p, ctx</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ec_point_ladder_post(group, r, s, p, ctx</data>
</node>
<node id="for_20">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = cardinality_bits - 1; i &gt;= 0; i--</data>
</node>
<node id="while_21">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">0</data>
</node>
<edge source="ec_scalar_mul_ladder" target="ret">
  <data key="d6">declares</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="ECerr">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_set_flags">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="EC_POINT_free">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_consttime_swap">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="EC_POINT_CSWAP">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_CTX_get">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="EC_POINT_BN_set_flags">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="bn_get_top">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="ladder">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_CTX_end">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_CTX_start">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_is_bit_set">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="ec_point_blind_coordinates">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="BN_num_bits">
  <data key="d6">calls</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="for_20">
  <data key="d6">contains</data>
</edge>
<edge source="ec_scalar_mul_ladder" target="while_21">
  <data key="d6">contains</data>
</edge>
</graph></graphml>