<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-6927</data>
<data key="d2">4.6</data>
<data key="d3">MEDIUM</data>
<node id="futex_requeue">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="pi_state">
  <data key="d4">Variable</data>
</node>
<node id="nr_wake">
  <data key="d4">Variable</data>
</node>
<node id="int">
  <data key="d4">Variable</data>
</node>
<node id="drop_count">
  <data key="d4">Variable</data>
</node>
<node id="nr_requeue">
  <data key="d4">Variable</data>
</node>
<node id="requeue_pi">
  <data key="d4">Variable</data>
</node>
<node id="requeue_pi_wake_futex">
  <data key="d4">FunctionCall</data>
</node>
<node id="hb_waiters_inc">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_user">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_futex_key">
  <data key="d4">FunctionCall</data>
</node>
<node id="cond_resched">
  <data key="d4">FunctionCall</data>
</node>
<node id="lookup_pi_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="DEFINE_WAKE_Q">
  <data key="d4">FunctionCall</data>
</node>
<node id="futex_unlock_pi">
  <data key="d4">FunctionCall</data>
</node>
<node id="drop_futex_key_refs">
  <data key="d4">FunctionCall</data>
</node>
<node id="double_lock_hb">
  <data key="d4">FunctionCall</data>
</node>
<node id="wake_up_q">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_pi_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="futex_proxy_trylock_atomic">
  <data key="d4">FunctionCall</data>
</node>
<node id="rt_mutex_start_proxy_lock">
  <data key="d4">FunctionCall</data>
</node>
<node id="double_unlock_hb">
  <data key="d4">FunctionCall</data>
</node>
<node id="hb_waiters_dec">
  <data key="d4">FunctionCall</data>
</node>
<node id="put_pi_state">
  <data key="d4">FunctionCall</data>
</node>
<node id="plist_for_each_entry_safe">
  <data key="d4">FunctionCall</data>
</node>
<node id="put_futex_key">
  <data key="d4">FunctionCall</data>
</node>
<node id="WARN_ON">
  <data key="d4">FunctionCall</data>
</node>
<node id="pthread_cond_signal">
  <data key="d4">FunctionCall</data>
</node>
<node id="hash_futex">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_futex_value_locked">
  <data key="d4">FunctionCall</data>
</node>
<node id="mark_wake_futex">
  <data key="d4">FunctionCall</data>
</node>
<node id="requeue_futex">
  <data key="d4">FunctionCall</data>
</node>
<node id="fault_in_user_writeable">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!IS_ENABLED(CONFIG_FUTEX_PI</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">requeue_pi</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">uaddr1 == uaddr2</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">refill_pi_state_cache(</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">nr_wake != 1</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret != 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">requeue_pi &amp;&amp; match_futex(&amp;key1, &amp;key2</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">likely(cmpval != NULL</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ret</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(flags &amp; FLAGS_SHARED</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">curval != *cmpval</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">requeue_pi &amp;&amp; (task_count - nr_wake &lt; nr_requeue</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret &gt; 0</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ret</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">task_count - nr_wake &gt;= nr_requeue</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!match_futex(&amp;this-&gt;key, &amp;key1</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(requeue_pi &amp;&amp; !this-&gt;rt_waiter</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">++task_count &lt;= nr_wake &amp;&amp; !requeue_pi</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">requeue_pi &amp;&amp; !match_futex(this-&gt;requeue_pi_key, &amp;key2</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">requeue_pi</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret == 1</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ret</data>
</node>
<node id="while_24">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">--drop_count &gt;= 0</data>
</node>
<node id="switch_25">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">ret</data>
</node>
<edge source="futex_requeue" target="pi_state">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="nr_wake">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="int">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="drop_count">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="nr_requeue">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="requeue_pi">
  <data key="d6">declares</data>
</edge>
<edge source="futex_requeue" target="requeue_pi_wake_futex">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="hb_waiters_inc">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="get_user">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="get_futex_key">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="cond_resched">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="lookup_pi_state">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="DEFINE_WAKE_Q">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="futex_unlock_pi">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="drop_futex_key_refs">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="double_lock_hb">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="wake_up_q">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="get_pi_state">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="futex_proxy_trylock_atomic">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="rt_mutex_start_proxy_lock">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="double_unlock_hb">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="hb_waiters_dec">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="put_pi_state">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="plist_for_each_entry_safe">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="put_futex_key">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="WARN_ON">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="pthread_cond_signal">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="hash_futex">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="get_futex_value_locked">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="mark_wake_futex">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="requeue_futex">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="fault_in_user_writeable">
  <data key="d6">calls</data>
</edge>
<edge source="futex_requeue" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="while_24">
  <data key="d6">contains</data>
</edge>
<edge source="futex_requeue" target="switch_25">
  <data key="d6">contains</data>
</edge>
<edge source="pi_state" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pi_state" target="lookup_pi_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="get_pi_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="futex_proxy_trylock_atomic">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="rt_mutex_start_proxy_lock">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="put_pi_state">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="WARN_ON">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pi_state" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pi_state" target="switch_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_wake" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nr_wake" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nr_wake" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nr_wake" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nr_wake" target="futex_requeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nr_wake" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_wake" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_wake" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int" target="futex_requeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="drop_count" target="while_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="drop_count" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drop_count" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drop_count" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drop_count" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drop_count" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_requeue" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_requeue" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="nr_requeue" target="futex_requeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nr_requeue" target="futex_proxy_trylock_atomic">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="nr_requeue" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_requeue" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="nr_requeue" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="requeue_pi" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="requeue_pi" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="requeue_pi" target="get_futex_key">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="requeue_pi" target="futex_requeue">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="requeue_pi" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="requeue_pi" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>