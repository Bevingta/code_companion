<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2019-1010208</data>
<data key="d2">2.1</data>
<data key="d3">LOW</data>
<node id="ProcessMainDeviceControlIrp">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="volumeType">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="drive">
  <data key="d4">Variable</data>
</node>
<node id="EnsureNullTerminatedString">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZwClose">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="WriteBootDriveSector">
  <data key="d4">FunctionCall</data>
</node>
<node id="NT_SUCCESS">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootEncryptionAlgorithmName">
  <data key="d4">FunctionCall</data>
</node>
<node id="defined">
  <data key="d4">FunctionCall</data>
</node>
<node id="TCDeviceIoControl">
  <data key="d4">FunctionCall</data>
</node>
<node id="IoGetDeviceObjectPointer">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadRegistryConfigFlags">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootLoaderFingerprint">
  <data key="d4">FunctionCall</data>
</node>
<node id="burn">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootLoaderVersion">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootEncryptionStatus">
  <data key="d4">FunctionCall</data>
</node>
<node id="SymbolicLinkToTarget">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="MountDevice">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetDecoySystemWipeResult">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="ProbeRealDriveSize">
  <data key="d4">FunctionCall</data>
</node>
<node id="RtlInitUnicodeString">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootDriveVolumeProperties">
  <data key="d4">FunctionCall</data>
</node>
<node id="ObDereferenceObject">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReopenBootVolumeHeader">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZwCreateFile">
  <data key="d4">FunctionCall</data>
</node>
<node id="AbortDecoySystemWipe">
  <data key="d4">FunctionCall</data>
</node>
<node id="sha256">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZwReadFile">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetDecoySystemWipeStatus">
  <data key="d4">FunctionCall</data>
</node>
<node id="IsHwEncryptionEnabled">
  <data key="d4">FunctionCall</data>
</node>
<node id="StartBootEncryptionSetup">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetSetupResult">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetVirtualVolumeDeviceObject">
  <data key="d4">FunctionCall</data>
</node>
<node id="IoGetCurrentIrpStackLocation">
  <data key="d4">FunctionCall</data>
</node>
<node id="BE16">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetBootDriveFilterExtension">
  <data key="d4">FunctionCall</data>
</node>
<node id="InitializeObjectAttributes">
  <data key="d4">FunctionCall</data>
</node>
<node id="Dump">
  <data key="d4">FunctionCall</data>
</node>
<node id="RtlStringCbCopyW">
  <data key="d4">FunctionCall</data>
</node>
<node id="StartDecoySystemWipe">
  <data key="d4">FunctionCall</data>
</node>
<node id="TCCompleteIrp">
  <data key="d4">FunctionCall</data>
</node>
<node id="CTL_CODE">
  <data key="d4">FunctionCall</data>
</node>
<node id="UnmountAllDevices">
  <data key="d4">FunctionCall</data>
</node>
<node id="TCfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="volume">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="WipeCache">
  <data key="d4">FunctionCall</data>
</node>
<node id="TCalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="IsHiddenSystemRunning">
  <data key="d4">FunctionCall</data>
</node>
<node id="AbortBootEncryptionSetup">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (LONG</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (int</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (int</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IoEnumerateDeviceObjectList (TCDriverObject, NULL, 0, &amp;deviceObjectCount</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (int</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetVirtualVolumeDeviceObject (drive</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsBootDriveMounted(</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ValidateIOBufferSize (Irp, sizeof (OPEN_TEST_STRUCT</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;bDetectTCBootLoader || opentest-&gt;DetectFilesystem || opentest-&gt;bComputeVolumeIDs</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;bDetectTCBootLoader || opentest-&gt;DetectFilesystem || opentest-&gt;bComputeVolumeIDs</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!readBuffer</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;bDetectTCBootLoader || opentest-&gt;DetectFilesystem</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;bDetectTCBootLoader &amp;&amp; IoStatus.Information &gt;= TC_SECTOR_SIZE_BIOS</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp (readBuffer + i, TC_APP_NAME, strlen (TC_APP_NAME</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;DetectFilesystem &amp;&amp; IoStatus.Information &gt;= sizeof (int64</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsAllZeroes (readBuffer + 8, TC_VOLUME_HEADER_EFFECTIVE_SIZE - 8</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opentest-&gt;bComputeVolumeIDs &amp;&amp; (!opentest-&gt;DetectFilesystem || !opentest-&gt;FilesystemDetected</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ValidateIOBufferSize (Irp, sizeof (GetSystemDriveConfigurationRequest</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">readBuffer[510] == 0x55 &amp;&amp; readBuffer[511] == 0xaa</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">readBuffer[446 + i * 16 + 4] == PARTITION_LDM</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp (readBuffer + i, TC_APP_NAME, strlen (TC_APP_NAME</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">request-&gt;BootLoaderVersion != 0 &amp;&amp; request-&gt;BootLoaderVersion &lt;= VERSION_NUM</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!UserCanAccessDriveDevice(</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (MOUNT_LIST_STRUCT</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ListDevice</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsVolumeAccessibleByCurrentUser (ListExtension</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListExtension-&gt;cryptoInfo-&gt;hiddenVolume</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListExtension-&gt;cryptoInfo-&gt;bHiddenVolProtectionAction</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListExtension-&gt;cryptoInfo-&gt;bProtectHiddenVolume</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (uint32</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (VOLUME_PROPERTIES_STRUCT</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListDevice</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsVolumeAccessibleByCurrentUser (ListExtension</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListExtension-&gt;cryptoInfo-&gt;bProtectHiddenVolume</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (RESOLVE_SYMLINK_STRUCT</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (DISK_PARTITION_INFO_STRUCT</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS(ntStatus</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pi.PartitionStyle == PARTITION_STYLE_MBR</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!NT_SUCCESS (ntStatus</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS (ntStatus</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!NT_SUCCESS (TCDeviceIoControl (info-&gt;deviceName, IOCTL_VOLUME_IS_DYNAMIC, NULL, 0, &amp;info-&gt;IsDynamic, sizeof (info-&gt;IsDynamic</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (DISK_GEOMETRY_STRUCT</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (DISK_GEOMETRY_EX_STRUCT</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">buffer</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS(ntStatus</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">NT_SUCCESS(ntStatus</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">OsMajorVersion &gt;= 6</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">	NT_SUCCESS(lStatus</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (ProbeRealDriveSizeRequest</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!NT_SUCCESS (status</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == STATUS_TIMEOUT</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!NT_SUCCESS (status</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (MOUNT_STRUCT</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mount-&gt;VolumePassword.Length &gt; MAX_PASSWORD || mount-&gt;ProtectedHidVolPassword.Length &gt; MAX_PASSWORD
				||	mount-&gt;pkcs5_prf &lt; 0 || mount-&gt;pkcs5_prf &gt; LAST_PRF_ID
				||	mount-&gt;VolumePim &lt; -1 || mount-&gt;VolumePim == INT_MAX
				|| mount-&gt;ProtectedHidVolPkcs5Prf &lt; 0 || mount-&gt;ProtectedHidVolPkcs5Prf &gt; LAST_PRF_ID
				|| (mount-&gt;bTrueCryptMode != FALSE &amp;&amp; mount-&gt;bTrueCryptMode != TRUE</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (UNMOUNT_STRUCT</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ListDevice</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsVolumeAccessibleByCurrentUser (ListExtension</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (UNMOUNT_STRUCT</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (int</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ValidateIOBufferSize (Irp, sizeof (GetWarningFlagsRequest</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">UserCanAccessDriveDevice(</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">	(ValidateIOBufferSize (Irp, sizeof (GetSystemDriveDumpConfigRequest</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">IsBootDriveMounted(</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!NT_SUCCESS (Irp-&gt;IoStatus.Status</data>
</node>
<node id="for_70">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">drive = MIN_MOUNTED_VOLUME_DRIVE_NUMBER; drive &lt;= MAX_MOUNTED_VOLUME_DRIVE_NUMBER; ++drive</data>
</node>
<node id="for_71">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; TC_SECTOR_SIZE_BIOS - strlen (TC_APP_NAME</data>
</node>
<node id="for_72">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">volumeType = TC_VOLUME_TYPE_NORMAL;
								volumeType &lt; TC_VOLUME_TYPE_COUNT;
								volumeType++</data>
</node>
<node id="for_73">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; 4; ++i</data>
</node>
<node id="for_74">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; sizeof (readBuffer</data>
</node>
<node id="for_75">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">drive = MIN_MOUNTED_VOLUME_DRIVE_NUMBER; drive &lt;= MAX_MOUNTED_VOLUME_DRIVE_NUMBER; ++drive</data>
</node>
<node id="switch_76">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">irpSp-&gt;Parameters.DeviceIoControl.IoControlCode</data>
</node>
<node id="switch_77">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">BE64 (*(uint64 *</data>
</node>
<node id="switch_78">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">volumeType</data>
</node>
<node id="switch_79">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">irpSp-&gt;Parameters.DeviceIoControl.IoControlCode</data>
</node>
<edge source="ProcessMainDeviceControlIrp" target="volumeType">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="drive">
  <data key="d6">declares</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="EnsureNullTerminatedString">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ZwClose">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="WriteBootDriveSector">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="NT_SUCCESS">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootEncryptionAlgorithmName">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="defined">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="TCDeviceIoControl">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="IoGetDeviceObjectPointer">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ReadRegistryConfigFlags">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootLoaderFingerprint">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="burn">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootLoaderVersion">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootEncryptionStatus">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="SymbolicLinkToTarget">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="MountDevice">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetDecoySystemWipeResult">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ProbeRealDriveSize">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="RtlInitUnicodeString">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootDriveVolumeProperties">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ObDereferenceObject">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ReopenBootVolumeHeader">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ZwCreateFile">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="AbortDecoySystemWipe">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="sha256">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="ZwReadFile">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetDecoySystemWipeStatus">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="IsHwEncryptionEnabled">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="StartBootEncryptionSetup">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetSetupResult">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetVirtualVolumeDeviceObject">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="IoGetCurrentIrpStackLocation">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="BE16">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="GetBootDriveFilterExtension">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="InitializeObjectAttributes">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="Dump">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="RtlStringCbCopyW">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="StartDecoySystemWipe">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="TCCompleteIrp">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="CTL_CODE">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="UnmountAllDevices">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="TCfree">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="volume">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="WipeCache">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="TCalloc">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="IsHiddenSystemRunning">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="AbortBootEncryptionSetup">
  <data key="d6">calls</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_70">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_71">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_72">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_73">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_74">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="for_75">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="switch_76">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="switch_77">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="switch_78">
  <data key="d6">contains</data>
</edge>
<edge source="ProcessMainDeviceControlIrp" target="switch_79">
  <data key="d6">contains</data>
</edge>
<edge source="volumeType" target="for_72">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="switch_78">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="volumeType" target="sha256">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="volumeType" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="for_75">
  <data key="d6">used_in_body</data>
</edge>
<edge source="volumeType" target="switch_76">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_33">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_37">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_40">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_54">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_63">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_66">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_68">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_73">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_74">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_76">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_77">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="switch_79">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="drive" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="drive" target="for_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drive" target="for_75">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drive" target="GetVirtualVolumeDeviceObject">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="drive" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drive" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drive" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="drive" target="switch_76">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>