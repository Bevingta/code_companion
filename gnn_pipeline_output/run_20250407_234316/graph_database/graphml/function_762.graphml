<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-8539</data>
<data key="d1">7.2</data>
<data key="d2">HIGH</data>
<node id="encrypted_update">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="new_epayload">
  <data key="d3">Variable</data>
</node>
<node id="prep">
  <data key="d3">Variable</data>
</node>
<node id="new_master_desc">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="epayload">
  <data key="d3">Variable</data>
</node>
<node id="buf">
  <data key="d3">Variable</data>
</node>
<node id="format">
  <data key="d3">Variable</data>
</node>
<node id="datalen">
  <data key="d3">Variable</data>
</node>
<node id="key">
  <data key="d3">Variable</data>
</node>
<node id="rcu_assign_keypointer">
  <data key="d3">FunctionCall</data>
</node>
<node id="call_rcu">
  <data key="d3">FunctionCall</data>
</node>
<node id="kmalloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="valid_master_desc">
  <data key="d3">FunctionCall</data>
</node>
<node id="PTR_ERR">
  <data key="d3">FunctionCall</data>
</node>
<node id="encrypted_key_alloc">
  <data key="d3">FunctionCall</data>
</node>
<node id="kfree">
  <data key="d3">FunctionCall</data>
</node>
<node id="__ekey_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="datablob_parse">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">datalen &lt;= 0 || datalen &gt; 32767 || !prep-&gt;data</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!buf</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret &lt; 0</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ret &lt; 0</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">IS_ERR(new_epayload</data>
</node>
<edge source="encrypted_update" target="new_epayload">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="prep">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="new_master_desc">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="epayload">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="buf">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="format">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="datalen">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="key">
  <data key="d5">declares</data>
</edge>
<edge source="encrypted_update" target="rcu_assign_keypointer">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="call_rcu">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="kmalloc">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="valid_master_desc">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="PTR_ERR">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="encrypted_key_alloc">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="kfree">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="__ekey_init">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="datablob_parse">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="encrypted_update" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="encrypted_update" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="encrypted_update" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="encrypted_update" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="encrypted_update" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="new_epayload" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_epayload" target="rcu_assign_keypointer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_epayload" target="PTR_ERR">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_epayload" target="__ekey_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_epayload" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_epayload" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_epayload" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_epayload" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="new_epayload" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="prep" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="prep" target="encrypted_update">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="prep" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_master_desc" target="valid_master_desc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_master_desc" target="encrypted_key_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_master_desc" target="__ekey_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="new_master_desc" target="datablob_parse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ret" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="epayload" target="if_4">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="epayload" target="rcu_assign_keypointer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="call_rcu">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="valid_master_desc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="PTR_ERR">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="encrypted_key_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="__ekey_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="epayload" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="buf" target="kfree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="datablob_parse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="buf" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="format" target="encrypted_key_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="format" target="__ekey_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="format" target="datablob_parse">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="datalen" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="datalen" target="kmalloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="datalen" target="encrypted_key_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="datalen" target="__ekey_init">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="datalen" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="rcu_assign_keypointer">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="encrypted_key_alloc">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="key" target="encrypted_update">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>