<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-11523</data>
<data key="d2">7.1</data>
<data key="d3">HIGH</data>
<node id="ReadTXTImage">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="CloseBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetAuthenticPixels">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetQuantumRange">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireNextImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="assert">
  <data key="d4">FunctionCall</data>
</node>
<node id="ReadBlobString">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageColorspace">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetPixelViaPixelInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="sscanf">
  <data key="d4">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d4">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d4">FunctionCall</data>
</node>
<node id="ParseCommandOption">
  <data key="d4">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetImageBackgroundColor">
  <data key="d4">FunctionCall</data>
</node>
<node id="ScaleAnyToQuantum">
  <data key="d4">FunctionCall</data>
</node>
<node id="LocaleLower">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="GetPixelInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d4">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleNCompare((char *</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(count != 4</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(i &gt; 0</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">type &lt; 0</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ReadBlobString(image,text</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">strchr(text,'%'</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">image-&gt;colorspace == LabColorspace</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">q == (Quantum *</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SyncAuthenticPixels(image,exception</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">LocaleNCompare((char *</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">GetNextImageInList(image</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">status == MagickFalse</data>
</node>
<node id="for_18">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">depth=1; (GetQuantumRange(depth</data>
</node>
<node id="for_19">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_20">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">x=0; x &lt; (ssize_t</data>
</node>
<node id="while_21">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">LocaleNCompare((char *</data>
</node>
<node id="switch_22">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">image-&gt;colorspace</data>
</node>
<edge source="ReadTXTImage" target="CloseBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SetImageExtent">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="GetAuthenticPixels">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="GetQuantumRange">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="AcquireNextImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="assert">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="ReadBlobString">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SetImageProgress">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SetImageColorspace">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SetPixelViaPixelInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="sscanf">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="ResetMagickMemory">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="AcquireImage">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="ParseCommandOption">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="OpenBlob">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SetImageBackgroundColor">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="ScaleAnyToQuantum">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="LocaleLower">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="GetPixelInfo">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="SyncNextImageInList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="DestroyImageList">
  <data key="d6">calls</data>
</edge>
<edge source="ReadTXTImage" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="for_18">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="for_19">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="for_20">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="while_21">
  <data key="d6">contains</data>
</edge>
<edge source="ReadTXTImage" target="switch_22">
  <data key="d6">contains</data>
</edge>
</graph></graphml>