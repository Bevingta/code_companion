<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2014-1739</data>
<data key="d1">2.1</data>
<data key="d2">LOW</data>
<node id="media_device_enum_entities">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="u_ent">
  <data key="d3">Variable</data>
</node>
<node id="mdev">
  <data key="d3">Variable</data>
</node>
<node id="__user">
  <data key="d3">Variable</data>
</node>
<node id="ent">
  <data key="d3">Variable</data>
</node>
<node id="sizeof">
  <data key="d3">FunctionCall</data>
</node>
<node id="memset">
  <data key="d3">FunctionCall</data>
</node>
<node id="find_entity">
  <data key="d3">FunctionCall</data>
</node>
<node id="strncpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_from_user(&amp;u_ent.id, &amp;uent-&gt;id, sizeof(u_ent.id</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ent == NULL</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">ent-&gt;name</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">copy_to_user(uent, &amp;u_ent, sizeof(u_ent</data>
</node>
<edge source="media_device_enum_entities" target="u_ent">
  <data key="d5">declares</data>
</edge>
<edge source="media_device_enum_entities" target="mdev">
  <data key="d5">declares</data>
</edge>
<edge source="media_device_enum_entities" target="__user">
  <data key="d5">declares</data>
</edge>
<edge source="media_device_enum_entities" target="ent">
  <data key="d5">declares</data>
</edge>
<edge source="media_device_enum_entities" target="sizeof">
  <data key="d5">calls</data>
</edge>
<edge source="media_device_enum_entities" target="memset">
  <data key="d5">calls</data>
</edge>
<edge source="media_device_enum_entities" target="find_entity">
  <data key="d5">calls</data>
</edge>
<edge source="media_device_enum_entities" target="strncpy">
  <data key="d5">calls</data>
</edge>
<edge source="media_device_enum_entities" target="memcpy">
  <data key="d5">calls</data>
</edge>
<edge source="media_device_enum_entities" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="media_device_enum_entities" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="media_device_enum_entities" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="media_device_enum_entities" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="u_ent" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="u_ent" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="u_ent" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="u_ent" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="u_ent" target="find_entity">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="u_ent" target="strncpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="u_ent" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="u_ent" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="u_ent" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mdev" target="media_device_enum_entities">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mdev" target="find_entity">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="__user" target="media_device_enum_entities">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ent" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ent" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ent" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ent" target="sizeof">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="memset">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="media_device_enum_entities">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="find_entity">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="strncpy">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ent" target="memcpy">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>