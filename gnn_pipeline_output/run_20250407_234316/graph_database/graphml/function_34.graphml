<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="memory_allocation" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-13636</data>
<data key="d3">5.8</data>
<data key="d4">MEDIUM</data>
<node id="plan_a">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="size">
  <data key="d5">Variable</data>
</node>
<node id="const">
  <data key="d5">Variable</data>
</node>
<node id="ifd">
  <data key="d5">Variable</data>
</node>
<node id="buffered">
  <data key="d5">Variable</data>
</node>
<node id="buffer">
  <data key="d5">Variable</data>
</node>
<node id="free">
  <data key="d5">FunctionCall</data>
</node>
<node id="close">
  <data key="d5">FunctionCall</data>
</node>
<node id="safe_open">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">! (size == instat.st_size
	 &amp;&amp; (buffer = malloc (size ? size : (size_t</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">size</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">S_ISREG (instat.st_mode</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ifd &lt; 0</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">n == (size_t</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">close (ifd</data>
</node>
<edge source="plan_a" target="size">
  <data key="d7">declares</data>
</edge>
<edge source="plan_a" target="const">
  <data key="d7">declares</data>
</edge>
<edge source="plan_a" target="ifd">
  <data key="d7">declares</data>
</edge>
<edge source="plan_a" target="buffered">
  <data key="d7">declares</data>
</edge>
<edge source="plan_a" target="buffer">
  <data key="d7">declares</data>
</edge>
<edge source="plan_a" target="free">
  <data key="d7">calls</data>
</edge>
<edge source="plan_a" target="close">
  <data key="d7">calls</data>
</edge>
<edge source="plan_a" target="safe_open">
  <data key="d7">calls</data>
</edge>
<edge source="plan_a" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="plan_a" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="plan_a" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="plan_a" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="plan_a" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="plan_a" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="size" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="size" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="const" target="plan_a">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ifd" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifd" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ifd" target="close">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ifd" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifd" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifd" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ifd" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffered" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffered" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffered" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="free">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="buffer" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="buffer" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>