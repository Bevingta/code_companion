<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-2143</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="_crypt_extended_r">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="setting">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="data">
  <data key="d4">Variable</data>
</node>
<node id="key">
  <data key="d4">Variable</data>
</node>
<node id="value">
  <data key="d4">Variable</data>
</node>
<node id="setup_salt">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="ascii_to_bin">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!data-&gt;initialized</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(*q++ = *key &lt;&lt; 1</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_setkey((u_char *</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*setting == _PASSWORD_EFMT1</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ascii64[value] != setting[i]</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!count</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ascii64[value] != setting[i]</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_cipher((u_char *</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_setkey((u_char *</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ascii_is_unsafe(setting[0]</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">do_des(0, 0, &amp;r0, &amp;r1, count, data</data>
</node>
<node id="for_11">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1, count = 0; i &lt; 5; i++</data>
</node>
<node id="for_12">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 5, salt = 0; i &lt; 9; i++</data>
</node>
<node id="while_13">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">q - (u_char *</data>
</node>
<node id="while_14">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">*key</data>
</node>
<node id="while_15">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">q - (u_char *</data>
</node>
<edge source="_crypt_extended_r" target="setting">
  <data key="d6">declares</data>
</edge>
<edge source="_crypt_extended_r" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="_crypt_extended_r" target="data">
  <data key="d6">declares</data>
</edge>
<edge source="_crypt_extended_r" target="key">
  <data key="d6">declares</data>
</edge>
<edge source="_crypt_extended_r" target="value">
  <data key="d6">declares</data>
</edge>
<edge source="_crypt_extended_r" target="setup_salt">
  <data key="d6">calls</data>
</edge>
<edge source="_crypt_extended_r" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="_crypt_extended_r" target="ascii_to_bin">
  <data key="d6">calls</data>
</edge>
<edge source="_crypt_extended_r" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="for_11">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="for_12">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="while_13">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="while_14">
  <data key="d6">contains</data>
</edge>
<edge source="_crypt_extended_r" target="while_15">
  <data key="d6">contains</data>
</edge>
<edge source="setting" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="setting" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="setting" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="_crypt_extended_r">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="ascii_to_bin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="for_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="for_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="data" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="data" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="data" target="setup_salt">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="data" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="data" target="_crypt_extended_r">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="data" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="data" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="_crypt_extended_r">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="key" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="value" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="for_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="for_12">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>