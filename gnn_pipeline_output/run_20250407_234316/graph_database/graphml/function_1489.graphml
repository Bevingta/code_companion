<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2019-11599</data>
<data key="d1">6.9</data>
<data key="d2">MEDIUM</data>
<node id="uverbs_user_mmap_disassociate">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="ufile">
  <data key="d3">Variable</data>
</node>
<node id="vma">
  <data key="d3">Variable</data>
</node>
<node id="ret">
  <data key="d3">Variable</data>
</node>
<node id="mm">
  <data key="d3">Variable</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_for_each_entry_safe">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_del_init">
  <data key="d3">FunctionCall</data>
</node>
<node id="up_write">
  <data key="d3">FunctionCall</data>
</node>
<node id="zap_vma_ptes">
  <data key="d3">FunctionCall</data>
</node>
<node id="mmget_not_zero">
  <data key="d3">FunctionCall</data>
</node>
<node id="mmput">
  <data key="d3">FunctionCall</data>
</node>
<node id="lockdep_assert_held">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_first_entry">
  <data key="d3">FunctionCall</data>
</node>
<node id="down_write">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!ret</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!mm</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">vma-&gt;vm_mm != mm</data>
</node>
<node id="while_3">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">1</data>
</node>
<node id="while_4">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">!list_empty(&amp;ufile-&gt;umaps</data>
</node>
<edge source="uverbs_user_mmap_disassociate" target="ufile">
  <data key="d5">declares</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="vma">
  <data key="d5">declares</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="ret">
  <data key="d5">declares</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="mm">
  <data key="d5">declares</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="list_for_each_entry_safe">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="list_del_init">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="up_write">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="zap_vma_ptes">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="mmget_not_zero">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="mmput">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="lockdep_assert_held">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="list_first_entry">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="down_write">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="while_3">
  <data key="d5">contains</data>
</edge>
<edge source="uverbs_user_mmap_disassociate" target="while_4">
  <data key="d5">contains</data>
</edge>
<edge source="ufile" target="while_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ufile" target="mutex_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="list_for_each_entry_safe">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="lockdep_assert_held">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="list_first_entry">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="mutex_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="uverbs_user_mmap_disassociate">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ufile" target="while_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="vma" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="vma" target="zap_vma_ptes">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="vma" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="vma" target="while_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="vma" target="while_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="ret" target="while_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ret" target="while_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mm" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mm" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="mm" target="up_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mmget_not_zero">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="mmput">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="down_write">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mm" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mm" target="while_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mm" target="while_4">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>