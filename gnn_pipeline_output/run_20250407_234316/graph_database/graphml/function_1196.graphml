<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2015-8896</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="WritePICTImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d5">Variable</data>
</node>
<node id="y">
  <data key="d5">Variable</data>
</node>
<node id="blob">
  <data key="d5">Variable</data>
</node>
<node id="CloneImageInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobMSBShort">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="EncodeImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetImageProfile">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPixelIndex">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobMSBLong">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetVirtualPixels">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d5">FunctionCall</data>
</node>
<node id="ImageToBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPixelChannels">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d5">FunctionCall</data>
</node>
<node id="ScaleQuantumToChar">
  <data key="d5">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="TransformImageColorspace">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobString">
  <data key="d5">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImageInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;columns &gt; 65535L</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;compression == JPEGCompression</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">storage_class == DirectClass</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">storage_class == DirectClass</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(buffer == (unsigned char *</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">profile != (StringInfo *</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">profile != (StringInfo *</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;compression == JPEGCompression</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">jpeg_image == (Image *</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">blob == (unsigned char *</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(length &amp; 0x01</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">storage_class == PseudoClass</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">storage_class == PseudoClass</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">storage_class == PseudoClass</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const Quantum *</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;compression == JPEGCompression</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const Quantum *</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;alpha_trait != UndefinedPixelTrait</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(count &amp; 0x01</data>
</node>
<node id="for_26">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_27">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_28">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_29">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_30">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_31">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<edge source="WritePICTImage" target="length">
  <data key="d7">declares</data>
</edge>
<edge source="WritePICTImage" target="y">
  <data key="d7">declares</data>
</edge>
<edge source="WritePICTImage" target="blob">
  <data key="d7">declares</data>
</edge>
<edge source="WritePICTImage" target="CloneImageInfo">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="WriteBlobMSBShort">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="CloseBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="EncodeImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="GetImageProfile">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="GetPixelIndex">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="DestroyImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="WriteBlobMSBLong">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="GetVirtualPixels">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="SetImageProgress">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="ImageToBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="GetPixelChannels">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="CloneImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="ResetMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="CopyMagickString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="ScaleQuantumToChar">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="TellBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="TransformImageColorspace">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="WriteBlobString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="OpenBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="WriteBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="SeekBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="DestroyImageInfo">
  <data key="d7">calls</data>
</edge>
<edge source="WritePICTImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_26">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_27">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_28">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_29">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_30">
  <data key="d7">contains</data>
</edge>
<edge source="WritePICTImage" target="for_31">
  <data key="d7">contains</data>
</edge>
<edge source="length" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="length" target="ImageToBlob">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="WriteBlob">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="length" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="y" target="for_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="y" target="for_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="y" target="for_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="blob" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="blob" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="blob" target="WriteBlob">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="blob" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>