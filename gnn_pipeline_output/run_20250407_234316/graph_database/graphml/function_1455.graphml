<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2019-13301</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="AnnotateImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="q">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="SetGeometryInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyDrawInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="memset">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneString">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloneDrawInfo">
  <data key="d5">FunctionCall</data>
</node>
<node id="RenderType">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParsePageGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="FormatLocaleString">
  <data key="d5">FunctionCall</data>
</node>
<node id="DrawImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">draw_info-&gt;text == (char *</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*draw_info-&gt;text == '\0'</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*p == '\n'</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">textlist == (char **</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(*q == '\r'</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*q == '\r'</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">annotate_info-&gt;geometry != (char *</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SetImageStorageClass(image,DirectClass,exception</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">IsGrayColorspace(image-&gt;colorspace</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">*textlist[i] == '\0'</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(metrics.width == 0</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">draw_info-&gt;undercolor.alpha != TransparentAlpha</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">annotate-&gt;decorate == OverlineDecoration</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">annotate-&gt;decorate == UnderlineDecoration</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">annotate-&gt;decorate == LineThroughDecoration</data>
</node>
<node id="for_17">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">p=text; *p != '\0'; p++</data>
</node>
<node id="for_18">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; number_lines; i++</data>
</node>
<node id="for_19">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">q=p; *q != '\0'; q++</data>
</node>
<node id="for_20">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; textlist[i] != (char *</data>
</node>
<node id="switch_21">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">annotate-&gt;gravity</data>
</node>
<node id="switch_22">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">annotate-&gt;align</data>
</node>
<edge source="AnnotateImage" target="q">
  <data key="d7">declares</data>
</edge>
<edge source="AnnotateImage" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="AnnotateImage" target="SetGeometryInfo">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="DestroyDrawInfo">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="memset">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="CloneString">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="CloneDrawInfo">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="RenderType">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="ParseGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="ParsePageGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="SetGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="FormatLocaleString">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="DrawImage">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="AnnotateImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="for_17">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="for_18">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="for_19">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="for_20">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="switch_21">
  <data key="d7">contains</data>
</edge>
<edge source="AnnotateImage" target="switch_22">
  <data key="d7">contains</data>
</edge>
<edge source="q" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="q" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="q" target="for_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="switch_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="switch_22">
  <data key="d7">used_in_condition</data>
</edge>
</graph></graphml>