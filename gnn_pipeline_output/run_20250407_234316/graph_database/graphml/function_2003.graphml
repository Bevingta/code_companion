<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-0556</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="impeg2d_dec_seq_hdr">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="ps_dec">
  <data key="d5">Variable</data>
</node>
<node id="ps_stream">
  <data key="d5">Variable</data>
</node>
<node id="ALIGN16">
  <data key="d5">FunctionCall</data>
</node>
<node id="bit_rate_value">
  <data key="d5">FunctionCall</data>
</node>
<node id="aspect_ratio_info">
  <data key="d5">FunctionCall</data>
</node>
<node id="impeg2d_bit_stream_flush">
  <data key="d5">FunctionCall</data>
</node>
<node id="SET_IVD_FATAL_ERROR">
  <data key="d5">FunctionCall</data>
</node>
<node id="GET_MARKER_BIT">
  <data key="d5">FunctionCall</data>
</node>
<node id="vbv_buffer_size_value">
  <data key="d5">FunctionCall</data>
</node>
<node id="impeg2d_next_start_code">
  <data key="d5">FunctionCall</data>
</node>
<node id="impeg2d_bit_stream_get">
  <data key="d5">FunctionCall</data>
</node>
<node id="code">
  <data key="d5">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">impeg2d_bit_stream_nxt(ps_stream,START_CODE_LEN</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(u2_width != ps_dec-&gt;u2_horizontal_size</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">0 == ps_dec-&gt;u2_header_done</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">0 == ps_dec-&gt;u4_frm_buf_stride</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(u2_width &gt; ps_dec-&gt;u2_create_max_width</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(ps_dec-&gt;u2_horizontal_size &gt; ps_dec-&gt;u2_create_max_width</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">impeg2d_bit_stream_get_bit(ps_stream</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">impeg2d_bit_stream_get_bit(ps_stream</data>
</node>
<node id="for_8">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; NUM_PELS_IN_BLOCK; i++</data>
</node>
<node id="for_9">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i = 0; i &lt; NUM_PELS_IN_BLOCK; i++</data>
</node>
<edge source="impeg2d_dec_seq_hdr" target="ps_dec">
  <data key="d7">declares</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="ps_stream">
  <data key="d7">declares</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="ALIGN16">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="bit_rate_value">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="aspect_ratio_info">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="impeg2d_bit_stream_flush">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="SET_IVD_FATAL_ERROR">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="GET_MARKER_BIT">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="vbv_buffer_size_value">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="impeg2d_next_start_code">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="impeg2d_bit_stream_get">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="code">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="memcpy">
  <data key="d7">calls</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="for_8">
  <data key="d7">contains</data>
</edge>
<edge source="impeg2d_dec_seq_hdr" target="for_9">
  <data key="d7">contains</data>
</edge>
<edge source="ps_dec" target="if_1">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="if_2">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="if_3">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="if_4">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ps_dec" target="GET_MARKER_BIT">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="impeg2d_next_start_code">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="impeg2d_dec_seq_hdr">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="code">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="memcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_dec" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_dec" target="for_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_stream" target="if_0">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_stream" target="if_6">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_stream" target="if_7">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_stream" target="impeg2d_bit_stream_flush">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_stream" target="GET_MARKER_BIT">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_stream" target="impeg2d_bit_stream_get">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ps_stream" target="for_8">
  <data key="d7">used_in_body</data>
</edge>
<edge source="ps_stream" target="for_9">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>