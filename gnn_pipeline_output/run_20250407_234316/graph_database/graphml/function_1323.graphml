<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2018-11591</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="_jsvTrace">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="indent">
  <data key="d4">Variable</data>
</node>
<node id="level">
  <data key="d4">Variable</data>
</node>
<node id="blocks">
  <data key="d4">Variable</data>
</node>
<node id="lowestLevel">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="endBracket">
  <data key="d4">Variable</data>
</node>
<node id="jsvGetFlatStringBlocks">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvIteratorFree">
  <data key="d4">FunctionCall</data>
</node>
<node id="_jsvTraceGetLowestLevel">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvUnLock">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsiConsolePrintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvTraceLockInfo">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvCountJsVarsUsed">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvIteratorNext">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvIteratorNew">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvGetFirstChild">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsiConsolePrint">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvIteratorGetKey">
  <data key="d4">FunctionCall</data>
</node>
<node id="jsvLock">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!var</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">lowestLevel &lt; level</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsName(var</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsObject(var</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsArray(var</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsNativeFunction(var</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsFunction(var</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsFunctionReturn(var</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsPin(var</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsInt(var</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsBoolean(var</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsFloat(var</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsFunctionParameter(var</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsArrayBufferName(var</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsArrayBuffer(var</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsString(var</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvGetLastChild(var</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsFlatString(var</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsNameInt(var</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvIsNameIntBool(var</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvHasSingleChild(var</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">jsvHasChildren(var</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">first</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!first</data>
</node>
<node id="for_24">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0;i&lt;indent;i++</data>
</node>
<node id="for_25">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i=0;i&lt;indent;i++</data>
</node>
<node id="while_26">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">jsvIteratorHasElement(&amp;it</data>
</node>
<edge source="_jsvTrace" target="indent">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="level">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="blocks">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="lowestLevel">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="endBracket">
  <data key="d6">declares</data>
</edge>
<edge source="_jsvTrace" target="jsvGetFlatStringBlocks">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvIteratorFree">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="_jsvTraceGetLowestLevel">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvUnLock">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsiConsolePrintf">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvTraceLockInfo">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvCountJsVarsUsed">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvIteratorNext">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvIteratorNew">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvGetFirstChild">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsiConsolePrint">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvIteratorGetKey">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="jsvLock">
  <data key="d6">calls</data>
</edge>
<edge source="_jsvTrace" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="for_24">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="for_25">
  <data key="d6">contains</data>
</edge>
<edge source="_jsvTrace" target="while_26">
  <data key="d6">contains</data>
</edge>
<edge source="indent" target="for_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="indent" target="for_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="indent" target="_jsvTrace">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="indent" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indent" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="indent" target="while_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="level" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="level" target="_jsvTrace">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="level" target="if_20">
  <data key="d6">used_in_body</data>
</edge>
<edge source="level" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="level" target="while_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="jsiConsolePrintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="blocks" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="blocks" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="lowestLevel" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="endBracket" target="jsiConsolePrintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="endBracket" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="endBracket" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="endBracket" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="endBracket" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="endBracket" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>