<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2017-18193</data>
<data key="d1">4.9</data>
<data key="d2">MEDIUM</data>
<node id="f2fs_init_extent_tree">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="sbi">
  <data key="d3">Variable</data>
</node>
<node id="ei">
  <data key="d3">Variable</data>
</node>
<node id="i_ext">
  <data key="d3">Variable</data>
</node>
<node id="en">
  <data key="d3">Variable</data>
</node>
<node id="inode">
  <data key="d3">Variable</data>
</node>
<node id="et">
  <data key="d3">Variable</data>
</node>
<node id="F2FS_I_SB">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="get_extent_info">
  <data key="d3">FunctionCall</data>
</node>
<node id="write_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="list_add_tail">
  <data key="d3">FunctionCall</data>
</node>
<node id="__init_extent_tree">
  <data key="d3">FunctionCall</data>
</node>
<node id="spin_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="write_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="__grab_extent_tree">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!f2fs_may_extent_tree(inode</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">i_ext &amp;&amp; i_ext-&gt;len</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!i_ext || !i_ext-&gt;len</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">atomic_read(&amp;et-&gt;node_cnt</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">en</data>
</node>
<edge source="f2fs_init_extent_tree" target="sbi">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="ei">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="i_ext">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="en">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="inode">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="et">
  <data key="d5">declares</data>
</edge>
<edge source="f2fs_init_extent_tree" target="F2FS_I_SB">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="spin_lock">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="get_extent_info">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="write_lock">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="list_add_tail">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="__init_extent_tree">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="spin_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="write_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="__grab_extent_tree">
  <data key="d5">calls</data>
</edge>
<edge source="f2fs_init_extent_tree" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="f2fs_init_extent_tree" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="f2fs_init_extent_tree" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="f2fs_init_extent_tree" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="f2fs_init_extent_tree" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="sbi" target="spin_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="list_add_tail">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="__init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="spin_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="sbi" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="sbi" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="ei" target="get_extent_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="ei" target="__init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_ext" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="i_ext" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="i_ext" target="get_extent_info">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_ext" target="f2fs_init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="i_ext" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="en" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="en" target="if_1">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="en" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="en" target="if_4">
  <data key="d5">used_in_body</data>
</edge>
<edge source="en" target="spin_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="en" target="list_add_tail">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="en" target="spin_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="en" target="f2fs_init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="en" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="inode" target="if_0">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="inode" target="F2FS_I_SB">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="f2fs_init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="inode" target="__grab_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="et" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="et" target="write_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="et" target="__init_extent_tree">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="et" target="write_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
</graph></graphml>