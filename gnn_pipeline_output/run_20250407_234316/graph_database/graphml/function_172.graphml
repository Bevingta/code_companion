<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="uses_dangerous_function" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-10164</data>
<data key="d3">7.5</data>
<data key="d4">HIGH</data>
<node id="XpmCreateDataFromXpmImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="extensions">
  <data key="d5">Variable</data>
</node>
<node id="buf">
  <data key="d5">Variable</data>
</node>
<node id="ErrorStatus">
  <data key="d5">Variable</data>
</node>
<node id="XpmFree">
  <data key="d5">FunctionCall</data>
</node>
<node id="XpmMalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="CreateColors">
  <data key="d5">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d5">FunctionCall</data>
</node>
<node id="RETURN">
  <data key="d5">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d5">FunctionCall</data>
</node>
<node id="sprintf">
  <data key="d5">FunctionCall</data>
</node>
<node id="CreatePixels">
  <data key="d5">FunctionCall</data>
</node>
<node id="XpmCalloc">
  <data key="d5">FunctionCall</data>
</node>
<node id="strcpy">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">extensions</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">header_nlines &lt;= image-&gt;ncolors ||
       header_nlines &gt;= UINT_MAX / sizeof(char *</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">header_size &gt;= UINT_MAX / sizeof(char *</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!header</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">info &amp;&amp; (info-&gt;valuemask &amp; XpmHotspot</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">extensions</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">!*header</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ErrorStatus != XpmSuccess</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">offset &lt;= image-&gt;width || offset &lt;= image-&gt;cpp</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">offset &lt;= image-&gt;width || offset &lt;= image-&gt;cpp</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> (image-&gt;height + ext_nlines</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6"> (header_size + ext_size</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">extensions</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">header</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">header[l]</data>
</node>
<node id="for_15">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">l = 0, sptr = data, sptr2 = header; l &lt;= n &amp;&amp; sptr &amp;&amp; sptr2; l++, sptr++, sptr2++</data>
</node>
<node id="for_16">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">l = 0; l &lt; header_nlines; l++</data>
</node>
<edge source="XpmCreateDataFromXpmImage" target="extensions">
  <data key="d7">declares</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="buf">
  <data key="d7">declares</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="ErrorStatus">
  <data key="d7">declares</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="XpmFree">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="XpmMalloc">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="CreateColors">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="sizeof">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="RETURN">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="strlen">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="sprintf">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="CreatePixels">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="XpmCalloc">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="strcpy">
  <data key="d7">calls</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="for_15">
  <data key="d7">contains</data>
</edge>
<edge source="XpmCreateDataFromXpmImage" target="for_16">
  <data key="d7">contains</data>
</edge>
<edge source="extensions" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="extensions" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="extensions" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="buf" target="strcpy">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="ErrorStatus" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="ErrorStatus" target="RETURN">
  <data key="d7">used_as_parameter</data>
</edge>
</graph></graphml>