<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2016-7514</data>
<data key="d3">4.3</data>
<data key="d4">MEDIUM</data>
<node id="ReadPSDImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="count">
  <data key="d5">Variable</data>
</node>
<node id="number_colors">
  <data key="d5">Variable</data>
</node>
<node id="blocks">
  <data key="d5">Variable</data>
</node>
<node id="i">
  <data key="d5">Variable</data>
</node>
<node id="data">
  <data key="d5">Variable</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageExtent">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowReaderException">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPSDSize">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="ScaleCharToQuantum">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageColorspace">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageAlphaChannel">
  <data key="d5">FunctionCall</data>
</node>
<node id="MergeImageLayers">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReplaceImageInList">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadPSDLayers">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlobMSBLong">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseImageResourceBlocks">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireImageColormap">
  <data key="d5">FunctionCall</data>
</node>
<node id="ReadBlobMSBShort">
  <data key="d5">FunctionCall</data>
</node>
<node id="SeekBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImageList">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(count == 0</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">psd_info.channels &gt; MaxPSDChannels</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(psd_info.version == 1</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(psd_info.depth != 1</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">SetImageBackgroundColor(image,exception</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">psd_info.mode == LabMode</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">psd_info.mode == CMYKMode</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(psd_info.mode == BitmapMode</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length != 0</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">psd_info.mode == DuotoneMode</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">data == (unsigned char *</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">number_colors &gt; 65536</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">AcquireImageColormap(image,number_colors,exception</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length != 0</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">blocks == (unsigned char *</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(count != (ssize_t</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length == 8</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image_info-&gt;number_scenes == 1</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">length == 0</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">ReadPSDLayers(image,image_info,&amp;psd_info,skip_layers,exception</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;ping != MagickFalse</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(has_merged_image != MagickFalse</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(has_merged_image == MagickFalse</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status != MagickTrue</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(has_merged_image == MagickFalse</data>
</node>
<node id="for_36">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_37">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_38">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<edge source="ReadPSDImage" target="count">
  <data key="d7">declares</data>
</edge>
<edge source="ReadPSDImage" target="number_colors">
  <data key="d7">declares</data>
</edge>
<edge source="ReadPSDImage" target="blocks">
  <data key="d7">declares</data>
</edge>
<edge source="ReadPSDImage" target="i">
  <data key="d7">declares</data>
</edge>
<edge source="ReadPSDImage" target="data">
  <data key="d7">declares</data>
</edge>
<edge source="ReadPSDImage" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="CloseBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="SetImageExtent">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ThrowReaderException">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="GetPSDSize">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ReadBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ScaleCharToQuantum">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="SetImageColorspace">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="SetImageAlphaChannel">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="MergeImageLayers">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="AcquireImage">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="TellBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="OpenBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ReplaceImageInList">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ReadPSDLayers">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ReadBlobMSBLong">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ParseImageResourceBlocks">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="AcquireImageColormap">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="ReadBlobMSBShort">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="SeekBlob">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="DestroyImageList">
  <data key="d7">calls</data>
</edge>
<edge source="ReadPSDImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="for_36">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="for_37">
  <data key="d7">contains</data>
</edge>
<edge source="ReadPSDImage" target="for_38">
  <data key="d7">contains</data>
</edge>
<edge source="count" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="count" target="if_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="if_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="if_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="for_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="for_37">
  <data key="d7">used_in_body</data>
</edge>
<edge source="count" target="for_38">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_colors" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="number_colors" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="number_colors" target="AcquireImageColormap">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="number_colors" target="if_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_colors" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_colors" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="number_colors" target="if_17">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="if_22">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="blocks" target="ParseImageResourceBlocks">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="blocks" target="if_18">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="if_19">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="if_20">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="if_21">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="if_23">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="for_36">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="for_37">
  <data key="d7">used_in_body</data>
</edge>
<edge source="blocks" target="for_38">
  <data key="d7">used_in_body</data>
</edge>
<edge source="i" target="if_0">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_1">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_13">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_21">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_22">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_23">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_25">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_28">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_29">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_31">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_32">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_33">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_34">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="if_35">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_37">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="i" target="for_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="data" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="data" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="data" target="if_12">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_13">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="data" target="if_16">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>