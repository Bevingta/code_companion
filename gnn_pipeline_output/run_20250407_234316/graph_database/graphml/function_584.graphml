<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2015-0231</data>
<data key="d1">7.5</data>
<data key="d2">HIGH</data>
<node id="process_nested_data">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="elements">
  <data key="d3">Variable</data>
</node>
<node id="objprops">
  <data key="d3">Variable</data>
</node>
<node id="zend_hash_index_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="var_push_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_symtable_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="convert_to_string">
  <data key="d3">FunctionCall</data>
</node>
<node id="FREE_ZVAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="zend_hash_update">
  <data key="d3">FunctionCall</data>
</node>
<node id="ALLOC_INIT_ZVAL">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!php_var_unserialize(&amp;key, p, max, NULL TSRMLS_CC</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">Z_TYPE_P(key</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!php_var_unserialize(&amp;data, p, max, var_hash TSRMLS_CC</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!objprops</data>
</node>
<node id="if_4">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_hash_index_find(ht, Z_LVAL_P(key</data>
</node>
<node id="if_5">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_symtable_find(ht, Z_STRVAL_P(key</data>
</node>
<node id="if_6">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">zend_symtable_find(ht, Z_STRVAL_P(key</data>
</node>
<node id="if_7">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">elements &amp;&amp; *(*p-1</data>
</node>
<node id="while_8">
  <data key="d3">ControlStructure_while</data>
  <data key="d4">elements-- &gt; 0</data>
</node>
<node id="switch_9">
  <data key="d3">ControlStructure_switch</data>
  <data key="d4">Z_TYPE_P(key</data>
</node>
<edge source="process_nested_data" target="elements">
  <data key="d5">declares</data>
</edge>
<edge source="process_nested_data" target="objprops">
  <data key="d5">declares</data>
</edge>
<edge source="process_nested_data" target="zend_hash_index_update">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="var_push_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="zval_dtor">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="zend_symtable_update">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="convert_to_string">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="FREE_ZVAL">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="zend_hash_update">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="ALLOC_INIT_ZVAL">
  <data key="d5">calls</data>
</edge>
<edge source="process_nested_data" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_4">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_5">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_6">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="if_7">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="while_8">
  <data key="d5">contains</data>
</edge>
<edge source="process_nested_data" target="switch_9">
  <data key="d5">contains</data>
</edge>
<edge source="elements" target="if_7">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="elements" target="while_8">
  <data key="d5">used_in_body</data>
</edge>
<edge source="elements" target="process_nested_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="objprops" target="if_3">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="objprops" target="process_nested_data">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="objprops" target="while_8">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>