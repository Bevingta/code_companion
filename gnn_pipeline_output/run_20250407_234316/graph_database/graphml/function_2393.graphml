<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-3142</data>
<data key="d2">6.4</data>
<data key="d3">MEDIUM</data>
<node id="phar_parse_zipfile">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="alias">
  <data key="d4">Variable</data>
</node>
<node id="sig">
  <data key="d4">Variable</data>
</node>
<node id="metadata">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">Variable</data>
</node>
<node id="read">
  <data key="d4">Variable</data>
</node>
<node id="save">
  <data key="d4">Variable</data>
</node>
<node id="fname_len">
  <data key="d4">Variable</data>
</node>
<node id="loc">
  <data key="d4">Variable</data>
</node>
<node id="beforeus">
  <data key="d4">Variable</data>
</node>
<node id="saveloc">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="alias_len">
  <data key="d4">Variable</data>
</node>
<node id="now">
  <data key="d4">Variable</data>
</node>
<node id="fname">
  <data key="d4">Variable</data>
</node>
<node id="phar_unixify_path_separators">
  <data key="d4">FunctionCall</data>
</node>
<node id="strrchr">
  <data key="d4">FunctionCall</data>
</node>
<node id="pemalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_read">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZVAL_STRINGL">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_add_virtual_dirs">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_filter_flush">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_add">
  <data key="d4">FunctionCall</data>
</node>
<node id="INIT_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_seek">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_close">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_stream_copy_to_stream">
  <data key="d4">FunctionCall</data>
</node>
<node id="emalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_GET_32">
  <data key="d4">FunctionCall</data>
</node>
<node id="pestrndup">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_filter_remove">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_set_inode">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_GET_16">
  <data key="d4">FunctionCall</data>
</node>
<node id="spprintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_del">
  <data key="d4">FunctionCall</data>
</node>
<node id="memchr">
  <data key="d4">FunctionCall</data>
</node>
<node id="pefree">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALLOC_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_filter_append">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALLOC_PERMANENT_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_write">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_G">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_ZIP_FAIL">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_ZIP_FAIL_FREE">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_destroy">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_fopen_tmpfile">
  <data key="d4">FunctionCall</data>
</node>
<node id="efree">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_filter_create">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_tell">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_zip_d2u_time">
  <data key="d4">FunctionCall</data>
</node>
<node id="pecalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">size &gt; sizeof(locator</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == php_stream_seek(fp, -size, SEEK_END</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!php_stream_read(fp, buf, size</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!memcmp(p + 1, "K\5\6", 3</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(locator.centraldisk</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(locator.counthere</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(locator.comment_len</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(locator.comment_len</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_parse_metadata(&amp;metadata, &amp;mydata-&gt;metadata, PHAR_GET_16(locator.comment_len</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.is_persistent</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ext</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;ext == ext</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;ext</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;metadata</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;signature</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;alias</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;metadata</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;signature</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mydata-&gt;alias</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sizeof(zipentry</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">memcmp("PK\1\2", zipentry.signature, 4</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.is_persistent</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(zipentry.flags</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!PHAR_GET_16(zipentry.filename_len</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.filename_len != php_stream_read(fp, entry.filename, entry.filename_len</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.filename[entry.filename_len - 1] == '/'</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.filename_len &gt; 1</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.filename_len == sizeof(".phar/signature.bin"</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!sigfile</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">metadata</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">read != entry.uncompressed_filesize</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_verify_signature(sigfile, php_stream_tell(sigfile</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i != PHAR_GET_16(locator.count</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(zipentry.extra_len</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_zip_process_extra(fp, &amp;entry, PHAR_GET_16(zipentry.extra_len</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!PHAR_G(has_zlib</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!PHAR_G(has_bz2</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(zipentry.comment_len</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_GET_16(zipentry.comment_len</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_parse_metadata(&amp;p, &amp;(entry.metadata</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.is_persistent</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!actual_alias &amp;&amp; entry.filename_len == sizeof(".phar/alias.txt"</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sizeof(local</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.filename_len != PHAR_GET_16(local.filename_len</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.flags &amp; PHAR_ENT_COMPRESSED_GZ</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!filter</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(entry.uncompressed_filesize = php_stream_copy_to_mem(fp, &amp;actual_alias, entry.uncompressed_filesize, 0</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.flags &amp; PHAR_ENT_COMPRESSED_BZ2</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!filter</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(entry.uncompressed_filesize = php_stream_copy_to_mem(fp, &amp;actual_alias, entry.uncompressed_filesize, 0</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(entry.uncompressed_filesize = php_stream_copy_to_mem(fp, &amp;actual_alias, entry.uncompressed_filesize, 0</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_exists(&amp;(mydata-&gt;manifest</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">actual_alias</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar_validate_alias(actual_alias, mydata-&gt;alias_len</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == zend_hash_find(&amp;(PHAR_GLOBALS-&gt;phar_alias_map</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != phar_free_alias(*fd_ptr, actual_alias, mydata-&gt;alias_len TSRMLS_CC</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry.is_persistent</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">alias_len</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == zend_hash_find(&amp;(PHAR_GLOBALS-&gt;phar_alias_map</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != phar_free_alias(*fd_ptr, alias, alias_len TSRMLS_CC</data>
</node>
<node id="if_71">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_72">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pphar</data>
</node>
<node id="for_73">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; i &lt; PHAR_GET_16(locator.count</data>
</node>
<node id="while_74">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">(p=(char *</data>
</node>
<node id="switch_75">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">PHAR_GET_16(zipentry.compressed</data>
</node>
<edge source="phar_parse_zipfile" target="alias">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="sig">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="metadata">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="size">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="read">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="save">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="fname_len">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="loc">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="beforeus">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="saveloc">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="alias_len">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="now">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="fname">
  <data key="d6">declares</data>
</edge>
<edge source="phar_parse_zipfile" target="phar_unixify_path_separators">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="strrchr">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="pemalloc">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_read">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="ZVAL_STRINGL">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="phar_add_virtual_dirs">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_filter_flush">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="zend_hash_add">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="INIT_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_seek">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="zend_hash_init">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_close">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="phar_stream_copy_to_stream">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="emalloc">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="PHAR_GET_32">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="pestrndup">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_filter_remove">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="phar_set_inode">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="PHAR_GET_16">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="spprintf">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="zend_hash_del">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="memchr">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="pefree">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="ALLOC_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_filter_append">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="ALLOC_PERMANENT_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_write">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="PHAR_G">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="PHAR_ZIP_FAIL">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="PHAR_ZIP_FAIL_FREE">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="zend_hash_destroy">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_fopen_tmpfile">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="efree">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_filter_create">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="php_stream_tell">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="zval_dtor">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="phar_zip_d2u_time">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="pecalloc">
  <data key="d6">calls</data>
</edge>
<edge source="phar_parse_zipfile" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_71">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="if_72">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="for_73">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="while_74">
  <data key="d6">contains</data>
</edge>
<edge source="phar_parse_zipfile" target="switch_75">
  <data key="d6">contains</data>
</edge>
<edge source="alias" target="if_22">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_26">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_65">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_69">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="zend_hash_add">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="pefree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="PHAR_ZIP_FAIL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="phar_parse_zipfile">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sig" target="if_20">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sig" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sig" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sig" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sig" target="if_36">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="sig" target="if_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sig" target="php_stream_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="php_stream_close">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="phar_stream_copy_to_stream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="PHAR_GET_32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="php_stream_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="PHAR_ZIP_FAIL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="php_stream_tell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="sig" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="sig" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_23">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_48">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="ZVAL_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="INIT_ZVAL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="ALLOC_ZVAL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="ALLOC_PERMANENT_ZVAL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="php_stream_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="zval_dtor">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="metadata" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_46">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="if_49">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="metadata" target="while_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="size" target="php_stream_read">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="php_stream_seek">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="emalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="PHAR_GET_32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="memchr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="pecalloc">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="size" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="size" target="while_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_38">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="read" target="php_stream_filter_append">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="read" target="PHAR_ZIP_FAIL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="read" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_27">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_46">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_47">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_51">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_53">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_55">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_57">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_58">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="if_59">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="read" target="while_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="save" target="php_stream_seek">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="save" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="save" target="PHAR_ZIP_FAIL_FREE">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="save" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="save" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="save" target="if_39">
  <data key="d6">used_in_body</data>
</edge>
<edge source="save" target="if_40">
  <data key="d6">used_in_body</data>
</edge>
<edge source="save" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="phar_unixify_path_separators">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname_len" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname_len" target="memchr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname_len" target="phar_parse_zipfile">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname_len" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_65">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_69">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname_len" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="loc" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_51">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="if_52">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="loc" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="loc" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="ZVAL_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="php_stream_seek">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="zend_hash_init">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="phar_stream_copy_to_stream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="PHAR_GET_32">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="PHAR_GET_16">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="php_stream_write">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="PHAR_ZIP_FAIL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="loc" target="if_42">
  <data key="d6">used_in_body</data>
</edge>
<edge source="beforeus" target="phar_stream_copy_to_stream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="beforeus" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="beforeus" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="saveloc" target="php_stream_seek">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="saveloc" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="saveloc" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_27">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_29">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_32">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_43">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_46">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_49">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_50">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_55">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_58">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_64">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_67">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="if_72">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="while_74">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p" target="switch_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="if_62">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="if_65">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias_len" target="phar_parse_zipfile">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias_len" target="if_50">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_69">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="now" target="PHAR_ZIP_FAIL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="now" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="now" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="phar_unixify_path_separators">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="strrchr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="zend_hash_add">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="pestrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="zend_hash_del">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="memchr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="pefree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="phar_parse_zipfile">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_18">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_21">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_61">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_62">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_63">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_64">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_65">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_68">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_69">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="for_73">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="while_74">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>