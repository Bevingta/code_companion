<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-0809</data>
<data key="d2">9.3</data>
<data key="d3">HIGH</data>
<node id="decodeBase64">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="padding">
  <data key="d4">Variable</data>
</node>
<node id="outLen">
  <data key="d4">Variable</data>
</node>
<node id="j">
  <data key="d4">Variable</data>
</node>
<node id="value">
  <data key="d4">Variable</data>
</node>
<node id="out">
  <data key="d4">Variable</data>
</node>
<node id="c">
  <data key="d4">Variable</data>
</node>
<node id="accum">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="n">
  <data key="d4">Variable</data>
</node>
<node id="size">
  <data key="d4">FunctionCall</data>
</node>
<node id="data">
  <data key="d4">FunctionCall</data>
</node>
<node id="c_str">
  <data key="d4">FunctionCall</data>
</node>
<node id="ABuffer">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(n % 4</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt;= 1 &amp;&amp; s.c_str(</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt;= 2 &amp;&amp; s.c_str(</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">n &gt;= 3 &amp;&amp; s.c_str(</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">out == NULL || buffer-&gt;size(</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c &gt;= 'A' &amp;&amp; c &lt;= 'Z'</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c &gt;= 'a' &amp;&amp; c &lt;= 'z'</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c &gt;= '0' &amp;&amp; c &lt;= '9'</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '+'</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '/'</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c != '='</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">i &lt; n - padding</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">((i + 1</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">j &lt; outLen</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">j &lt; outLen</data>
</node>
<node id="for_15">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">size_t i = 0; i &lt; n; ++i</data>
</node>
<edge source="decodeBase64" target="padding">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="outLen">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="j">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="value">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="out">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="c">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="accum">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="n">
  <data key="d6">declares</data>
</edge>
<edge source="decodeBase64" target="size">
  <data key="d6">calls</data>
</edge>
<edge source="decodeBase64" target="data">
  <data key="d6">calls</data>
</edge>
<edge source="decodeBase64" target="c_str">
  <data key="d6">calls</data>
</edge>
<edge source="decodeBase64" target="ABuffer">
  <data key="d6">calls</data>
</edge>
<edge source="decodeBase64" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="decodeBase64" target="for_15">
  <data key="d6">contains</data>
</edge>
<edge source="padding" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="padding" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="padding" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="padding" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="padding" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outLen" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="outLen" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="outLen" target="ABuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outLen" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="outLen" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="j" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="j" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="value" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="value" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="out" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out" target="ABuffer">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="out" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="out" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="accum" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="accum" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="accum" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="accum" target="for_15">
  <data key="d6">used_in_body</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="n" target="for_15">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>