<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2016-4478</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="xmlrpc_char_encode">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="outbuffer">
  <data key="d4">Variable</data>
</node>
<node id="s1">
  <data key="d4">Variable</data>
</node>
<node id="buf2">
  <data key="d4">Variable</data>
</node>
<node id="c">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="s">
  <data key="d4">Variable</data>
</node>
<node id="append_char">
  <data key="d4">FunctionCall</data>
</node>
<node id="append">
  <data key="d4">FunctionCall</data>
</node>
<node id="mowgli_string_create">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(!(s1</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c &gt; 127</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '&amp;'</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '&lt;'</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '&gt;'</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">c == '"'</data>
</node>
<node id="for_6">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 0; s1[i] != '\0'; i++</data>
</node>
<edge source="xmlrpc_char_encode" target="outbuffer">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="s1">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="buf2">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="c">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="s">
  <data key="d6">declares</data>
</edge>
<edge source="xmlrpc_char_encode" target="append_char">
  <data key="d6">calls</data>
</edge>
<edge source="xmlrpc_char_encode" target="append">
  <data key="d6">calls</data>
</edge>
<edge source="xmlrpc_char_encode" target="mowgli_string_create">
  <data key="d6">calls</data>
</edge>
<edge source="xmlrpc_char_encode" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="xmlrpc_char_encode" target="for_6">
  <data key="d6">contains</data>
</edge>
<edge source="outbuffer" target="xmlrpc_char_encode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="outbuffer" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="s1" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="s1" target="for_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="s1" target="xmlrpc_char_encode">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buf2" target="append">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="buf2" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="buf2" target="for_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="c" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="c" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="s" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="s" target="for_6">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>