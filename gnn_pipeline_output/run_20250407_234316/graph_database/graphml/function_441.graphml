<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2014-4611</data>
<data key="d2">5.0</data>
<data key="d3">MEDIUM</data>
<node id="lz4_uncompress">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="length">
  <data key="d4">Variable</data>
</node>
<node id="len">
  <data key="d4">Variable</data>
</node>
<node id="dec64table">
  <data key="d4">Variable</data>
</node>
<node id="source">
  <data key="d4">Variable</data>
</node>
<node id="dest">
  <data key="d4">Variable</data>
</node>
<node id="osize">
  <data key="d4">Variable</data>
</node>
<node id="dec64">
  <data key="d4">Variable</data>
</node>
<node id="dec32table">
  <data key="d4">Variable</data>
</node>
<node id="token">
  <data key="d4">Variable</data>
</node>
<node id="PUT4">
  <data key="d4">FunctionCall</data>
</node>
<node id="LZ4_WILDCOPY">
  <data key="d4">FunctionCall</data>
</node>
<node id="EOF">
  <data key="d4">FunctionCall</data>
</node>
<node id="LZ4_READ_LITTLEENDIAN_16">
  <data key="d4">FunctionCall</data>
</node>
<node id="LZ4_COPYSTEP">
  <data key="d4">FunctionCall</data>
</node>
<node id="LZ4_SECURECOPY">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">length == RUN_MASK</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(cpy &gt; oend - COPYLENGTH</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cpy != oend</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely(ref &lt; (BYTE *const</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">length == ML_MASK</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">unlikely((op - ref</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cpy &gt; (oend - COPYLENGTH</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">cpy &gt; oend</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">op == oend</data>
</node>
<node id="for_9">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; len == 255; length += 255</data>
</node>
<node id="for_10">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">; *ip == 255; length += 255</data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">1</data>
</node>
<node id="while_12">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">op &lt; cpy</data>
</node>
<edge source="lz4_uncompress" target="length">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="len">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="dec64table">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="source">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="dest">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="osize">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="dec64">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="dec32table">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="token">
  <data key="d6">declares</data>
</edge>
<edge source="lz4_uncompress" target="PUT4">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="LZ4_WILDCOPY">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="EOF">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="LZ4_READ_LITTLEENDIAN_16">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="LZ4_COPYSTEP">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="LZ4_SECURECOPY">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="lz4_uncompress" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="for_9">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="for_10">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="while_11">
  <data key="d6">contains</data>
</edge>
<edge source="lz4_uncompress" target="while_12">
  <data key="d6">contains</data>
</edge>
<edge source="length" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="length" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="length" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="length" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="len" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="for_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="for_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="len" target="memcpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="len" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec64table" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec64table" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec64table" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="source" target="lz4_uncompress">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dest" target="lz4_uncompress">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dest" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="osize" target="lz4_uncompress">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="dec64" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec64" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec64" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec32table" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec32table" target="for_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dec32table" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="token" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>