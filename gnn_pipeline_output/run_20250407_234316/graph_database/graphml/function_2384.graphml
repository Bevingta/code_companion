<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2012-2143</data>
<data key="d2">4.3</data>
<data key="d3">MEDIUM</data>
<node id="px_crypt_des">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="output">
  <data key="d4">Variable</data>
</node>
<node id="p">
  <data key="d4">Variable</data>
</node>
<node id="i">
  <data key="d4">Variable</data>
</node>
<node id="key">
  <data key="d4">Variable</data>
</node>
<node id="setting">
  <data key="d4">Variable</data>
</node>
<node id="setup_salt">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="ascii_to_bin">
  <data key="d4">FunctionCall</data>
</node>
<node id="strncpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!des_initialised</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(*q++ = *key &lt;&lt; 1</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_setkey((char *</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*setting == _PASSWORD_EFMT1</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_cipher((char *</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">des_setkey((char *</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">do_des(0L, 0L, &amp;r0, &amp;r1, count</data>
</node>
<node id="for_7">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 1, count = 0L; i &lt; 5; i++</data>
</node>
<node id="for_8">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">i = 5, salt = 0L; i &lt; 9; i++</data>
</node>
<node id="while_9">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">q - (uint8 *</data>
</node>
<node id="while_10">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">*key</data>
</node>
<node id="while_11">
  <data key="d4">ControlStructure_while</data>
  <data key="d5">q - (uint8 *</data>
</node>
<edge source="px_crypt_des" target="output">
  <data key="d6">declares</data>
</edge>
<edge source="px_crypt_des" target="p">
  <data key="d6">declares</data>
</edge>
<edge source="px_crypt_des" target="i">
  <data key="d6">declares</data>
</edge>
<edge source="px_crypt_des" target="key">
  <data key="d6">declares</data>
</edge>
<edge source="px_crypt_des" target="setting">
  <data key="d6">declares</data>
</edge>
<edge source="px_crypt_des" target="setup_salt">
  <data key="d6">calls</data>
</edge>
<edge source="px_crypt_des" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="px_crypt_des" target="ascii_to_bin">
  <data key="d6">calls</data>
</edge>
<edge source="px_crypt_des" target="strncpy">
  <data key="d6">calls</data>
</edge>
<edge source="px_crypt_des" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="for_7">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="for_8">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="while_9">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="while_10">
  <data key="d6">contains</data>
</edge>
<edge source="px_crypt_des" target="while_11">
  <data key="d6">contains</data>
</edge>
<edge source="output" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="output" target="strncpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="output" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="output" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="output" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="output" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="output" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="output" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="p" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_3">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="for_8">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="i" target="while_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="key" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="px_crypt_des">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="key" target="if_0">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="for_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="for_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_3">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="px_crypt_des">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="ascii_to_bin">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="strncpy">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="setting" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="setting" target="while_11">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>