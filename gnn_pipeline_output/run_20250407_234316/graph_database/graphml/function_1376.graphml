<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d5" for="edge" attr.name="type" attr.type="string"/>
<key id="d4" for="node" attr.name="condition" attr.type="string"/>
<key id="d3" for="node" attr.name="type" attr.type="string"/>
<key id="d2" for="graph" attr.name="severity" attr.type="string"/>
<key id="d1" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d0" for="graph" attr.name="cve" attr.type="string"/>
<graph edgedefault="directed"><data key="d0">CVE-2018-5344</data>
<data key="d1">4.6</data>
<data key="d2">MEDIUM</data>
<node id="lo_release">
  <data key="d3">FunctionDefinition</data>
</node>
<node id="mode">
  <data key="d3">Variable</data>
</node>
<node id="disk">
  <data key="d3">Variable</data>
</node>
<node id="lo">
  <data key="d3">Variable</data>
</node>
<node id="err">
  <data key="d3">Variable</data>
</node>
<node id="mutex_unlock">
  <data key="d3">FunctionCall</data>
</node>
<node id="blk_mq_unfreeze_queue">
  <data key="d3">FunctionCall</data>
</node>
<node id="loop_clr_fd">
  <data key="d3">FunctionCall</data>
</node>
<node id="thread">
  <data key="d3">FunctionCall</data>
</node>
<node id="mutex_lock">
  <data key="d3">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">atomic_dec_return(&amp;lo-&gt;lo_refcnt</data>
</node>
<node id="if_1">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">lo-&gt;lo_flags &amp; LO_FLAGS_AUTOCLEAR</data>
</node>
<node id="if_2">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">!err</data>
</node>
<node id="if_3">
  <data key="d3">ControlStructure_if</data>
  <data key="d4">lo-&gt;lo_state == Lo_bound</data>
</node>
<edge source="lo_release" target="mode">
  <data key="d5">declares</data>
</edge>
<edge source="lo_release" target="disk">
  <data key="d5">declares</data>
</edge>
<edge source="lo_release" target="lo">
  <data key="d5">declares</data>
</edge>
<edge source="lo_release" target="err">
  <data key="d5">declares</data>
</edge>
<edge source="lo_release" target="mutex_unlock">
  <data key="d5">calls</data>
</edge>
<edge source="lo_release" target="blk_mq_unfreeze_queue">
  <data key="d5">calls</data>
</edge>
<edge source="lo_release" target="loop_clr_fd">
  <data key="d5">calls</data>
</edge>
<edge source="lo_release" target="thread">
  <data key="d5">calls</data>
</edge>
<edge source="lo_release" target="mutex_lock">
  <data key="d5">calls</data>
</edge>
<edge source="lo_release" target="if_0">
  <data key="d5">contains</data>
</edge>
<edge source="lo_release" target="if_1">
  <data key="d5">contains</data>
</edge>
<edge source="lo_release" target="if_2">
  <data key="d5">contains</data>
</edge>
<edge source="lo_release" target="if_3">
  <data key="d5">contains</data>
</edge>
<edge source="mode" target="lo_release">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="mode" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="mode" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="disk" target="lo_release">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lo" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lo" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lo" target="if_3">
  <data key="d5">used_in_body</data>
</edge>
<edge source="lo" target="mutex_unlock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lo" target="blk_mq_unfreeze_queue">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lo" target="loop_clr_fd">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lo" target="mutex_lock">
  <data key="d5">used_as_parameter</data>
</edge>
<edge source="lo" target="if_2">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_2">
  <data key="d5">used_in_condition</data>
</edge>
<edge source="err" target="if_0">
  <data key="d5">used_in_body</data>
</edge>
<edge source="err" target="if_1">
  <data key="d5">used_in_body</data>
</edge>
</graph></graphml>