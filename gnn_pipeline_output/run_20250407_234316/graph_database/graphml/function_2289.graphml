<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-1217</data>
<data key="d2">7.5</data>
<data key="d3">HIGH</data>
<node id="prepareListenerObject">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="setHiddenValue">
  <data key="d4">FunctionCall</data>
</node>
<node id="setListenerObject">
  <data key="d4">FunctionCall</data>
</node>
<node id="from">
  <data key="d4">FunctionCall</data>
</node>
<node id="v8String">
  <data key="d4">FunctionCall</data>
</node>
<node id="compileAndRunInternalScript">
  <data key="d4">FunctionCall</data>
</node>
<node id="function">
  <data key="d4">FunctionCall</data>
</node>
<node id="New">
  <data key="d4">FunctionCall</data>
</node>
<node id="ownerDocument">
  <data key="d4">FunctionCall</data>
</node>
<node id="ASSERT">
  <data key="d4">FunctionCall</data>
</node>
<node id="SetName">
  <data key="d4">FunctionCall</data>
</node>
<node id="scope">
  <data key="d4">FunctionCall</data>
</node>
<node id="callInternalFunction">
  <data key="d4">FunctionCall</data>
</node>
<node id="Set">
  <data key="d4">FunctionCall</data>
</node>
<node id="clearListenerObject">
  <data key="d4">FunctionCall</data>
</node>
<node id="with">
  <data key="d4">FunctionCall</data>
</node>
<node id="preprocessEventListener">
  <data key="d4">FunctionCall</data>
</node>
<node id="handleScope">
  <data key="d4">FunctionCall</data>
</node>
<node id="toV8Context">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!executionContext</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">v8Context.IsEmpty(</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!scriptState-&gt;contextIsValid(</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">executionContext-&gt;isDocument(</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">hasExistingListenerObject(</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">result.IsEmpty(</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">m_node &amp;&amp; m_node-&gt;isHTMLElement(</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">thisObject.IsEmpty(</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!thisObject-&gt;ForceSet(v8::Integer::New(isolate(</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!thisObject-&gt;ForceSet(v8::Integer::New(isolate(</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!thisObject-&gt;ForceSet(v8::Integer::New(isolate(</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">innerValue.IsEmpty(</data>
</node>
<edge source="prepareListenerObject" target="setHiddenValue">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="setListenerObject">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="from">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="v8String">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="compileAndRunInternalScript">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="function">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="New">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="ownerDocument">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="ASSERT">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="SetName">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="scope">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="callInternalFunction">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="Set">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="clearListenerObject">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="with">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="preprocessEventListener">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="handleScope">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="toV8Context">
  <data key="d6">calls</data>
</edge>
<edge source="prepareListenerObject" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="prepareListenerObject" target="if_11">
  <data key="d6">contains</data>
</edge>
</graph></graphml>