<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="edge" attr.name="type" attr.type="string"/>
<key id="d6" for="node" attr.name="condition" attr.type="string"/>
<key id="d5" for="node" attr.name="type" attr.type="string"/>
<key id="d4" for="graph" attr.name="severity" attr.type="string"/>
<key id="d3" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d2" for="graph" attr.name="cve" attr.type="string"/>
<key id="d1" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<key id="d0" for="graph" attr.name="potential_buffer_overflow" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">True</data>
<data key="d2">CVE-2017-12662</data>
<data key="d3">6.8</data>
<data key="d4">MEDIUM</data>
<node id="WritePDFImage">
  <data key="d5">FunctionDefinition</data>
</node>
<node id="pointsize">
  <data key="d5">Variable</data>
</node>
<node id="q">
  <data key="d5">Variable</data>
</node>
<node id="utf16">
  <data key="d5">Variable</data>
</node>
<node id="seconds">
  <data key="d5">Variable</data>
</node>
<node id="pixels">
  <data key="d5">Variable</data>
</node>
<node id="local_time">
  <data key="d5">Variable</data>
</node>
<node id="p">
  <data key="d5">Variable</data>
</node>
<node id="XMPProfile">
  <data key="d5">Variable</data>
</node>
<node id="GetVirtualMemoryBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobMSBShort">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="defined">
  <data key="d5">FunctionCall</data>
</node>
<node id="CloseBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetImageProfile">
  <data key="d5">FunctionCall</data>
</node>
<node id="InjectImageBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPixelIndex">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowWriterException">
  <data key="d5">FunctionCall</data>
</node>
<node id="ConvertUTF8ToUTF16">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyString">
  <data key="d5">FunctionCall</data>
</node>
<node id="floor">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetNextImageInList">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetImageProperty">
  <data key="d5">FunctionCall</data>
</node>
<node id="assert">
  <data key="d5">FunctionCall</data>
</node>
<node id="DestroyImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="else">
  <data key="d5">FunctionCall</data>
</node>
<node id="FormatMagickTime">
  <data key="d5">FunctionCall</data>
</node>
<node id="SignatureImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="RelinquishVirtualMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseGravityGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetMagickHomeURL">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThrowMagickException">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetVirtualPixels">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetImageProgress">
  <data key="d5">FunctionCall</data>
</node>
<node id="FormatLocaleString">
  <data key="d5">FunctionCall</data>
</node>
<node id="ThumbnailImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseMetaGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetImageOption">
  <data key="d5">FunctionCall</data>
</node>
<node id="ConcatenateMagickString">
  <data key="d5">FunctionCall</data>
</node>
<node id="Huffman2DEncodeImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="Ascii85Flush">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetStringInfoLength">
  <data key="d5">FunctionCall</data>
</node>
<node id="PackbitsEncodeImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetStringInfoDatum">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobByte">
  <data key="d5">FunctionCall</data>
</node>
<node id="ResetMagickMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="CopyMagickString">
  <data key="d5">FunctionCall</data>
</node>
<node id="AcquireVirtualMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="ScaleQuantumToChar">
  <data key="d5">FunctionCall</data>
</node>
<node id="TellBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="DisableMSCWarning">
  <data key="d5">FunctionCall</data>
</node>
<node id="WriteBlobString">
  <data key="d5">FunctionCall</data>
</node>
<node id="OpenBlob">
  <data key="d5">FunctionCall</data>
</node>
<node id="Ascii85Encode">
  <data key="d5">FunctionCall</data>
</node>
<node id="endif">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetVirtualIndexQueue">
  <data key="d5">FunctionCall</data>
</node>
<node id="Ascii85Initialize">
  <data key="d5">FunctionCall</data>
</node>
<node id="time">
  <data key="d5">FunctionCall</data>
</node>
<node id="ResizeQuantumMemory">
  <data key="d5">FunctionCall</data>
</node>
<node id="GetPathComponent">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="ParseAbsoluteGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="SetGeometry">
  <data key="d5">FunctionCall</data>
</node>
<node id="SyncNextImageInList">
  <data key="d5">FunctionCall</data>
</node>
<node id="HuffmanEncodeImage">
  <data key="d5">FunctionCall</data>
</node>
<node id="EscapeParenthesis">
  <data key="d5">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;debug != MagickFalse</data>
</node>
<node id="if_1">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_2">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">xref == (MagickOffsetType *</data>
</node>
<node id="if_3">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;compression == JPEG2000Compression</data>
</node>
<node id="if_4">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">next-&gt;matte != MagickFalse</data>
</node>
<node id="if_5">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_6">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">profile != (StringInfo *</data>
</node>
<node id="if_7">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_8">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_9">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(option != (const char *</data>
</node>
<node id="if_10">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_11">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value != (const char *</data>
</node>
<node id="if_12">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value != (const char *</data>
</node>
<node id="if_13">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;adjoin != MagickFalse</data>
</node>
<node id="if_14">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">profile != (StringInfo *</data>
</node>
<node id="if_15">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">xref == (MagickOffsetType *</data>
</node>
<node id="if_16">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;compression != UndefinedCompression</data>
</node>
<node id="if_17">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(SetImageMonochrome(image,&amp;image-&gt;exception</data>
</node>
<node id="if_18">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_19">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(image_info-&gt;magick,"PDFA"</data>
</node>
<node id="if_20">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == JPEG2000Compression</data>
</node>
<node id="if_21">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(resolution.x == 0.0</data>
</node>
<node id="if_22">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(flags &amp; SigmaValue</data>
</node>
<node id="if_23">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;density != (char *</data>
</node>
<node id="if_24">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(flags &amp; SigmaValue</data>
</node>
<node id="if_25">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;units == PixelsPerCentimeterResolution</data>
</node>
<node id="if_26">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;page != (char *</data>
</node>
<node id="if_27">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;page.width != 0</data>
</node>
<node id="if_28">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;gravity != UndefinedGravity</data>
</node>
<node id="if_29">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;gravity != UndefinedGravity</data>
</node>
<node id="if_30">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image_info-&gt;pointsize != 0.0</data>
</node>
<node id="if_31">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value != (const char *</data>
</node>
<node id="if_32">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">value != (const char *</data>
</node>
<node id="if_33">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">labels != (char **</data>
</node>
<node id="if_34">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">labels != (char **</data>
</node>
<node id="if_35">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_36">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(compression == FaxCompression</data>
</node>
<node id="if_37">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">labels != (char **</data>
</node>
<node id="if_38">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_39">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_40">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;matte != MagickFalse</data>
</node>
<node id="if_41">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(4*number_pixels</data>
</node>
<node id="if_42">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(compression == FaxCompression</data>
</node>
<node id="if_43">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(CCITTParam,"0"</data>
</node>
<node id="if_44">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_45">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_46">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_47">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_48">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_49">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_50">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_51">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_52">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_53">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_54">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_55">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_56">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_57">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_58">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_59">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_60">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_61">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_62">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_63">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_64">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_65">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_66">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_67">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_68">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_69">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_70">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_71">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_72">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_73">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_74">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_75">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_76">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_77">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_78">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_79">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;previous == (Image *</data>
</node>
<node id="if_80">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_81">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_82">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(compression == FaxCompression</data>
</node>
<node id="if_83">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_84">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(profile == (StringInfo *</data>
</node>
<node id="if_85">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">channels != 0</data>
</node>
<node id="if_86">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">tile_image == (Image *</data>
</node>
<node id="if_87">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_88">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace != CMYKColorspace</data>
</node>
<node id="if_89">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(compression == FaxCompression</data>
</node>
<node id="if_90">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">LocaleCompare(CCITTParam,"0"</data>
</node>
<node id="if_91">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_92">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_93">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_94">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_95">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_96">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_97">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_98">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_99">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(tile_image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_100">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_101">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_102">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_103">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_104">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">tile_image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_105">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_106">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_107">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_108">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_109">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;colorspace == CMYKColorspace</data>
</node>
<node id="if_110">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_111">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_112">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_113">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_114">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_115">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_116">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">(image-&gt;storage_class == DirectClass</data>
</node>
<node id="if_117">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == NoCompression</data>
</node>
<node id="if_118">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == NoCompression</data>
</node>
<node id="if_119">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == NoCompression</data>
</node>
<node id="if_120">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == NoCompression</data>
</node>
<node id="if_121">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">image-&gt;matte == MagickFalse</data>
</node>
<node id="if_122">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">pixel_info == (MemoryInfo *</data>
</node>
<node id="if_123">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_124">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == ZipCompression</data>
</node>
<node id="if_125">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">compression == LZWCompression</data>
</node>
<node id="if_126">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_127">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">p == (const PixelPacket *</data>
</node>
<node id="if_128">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">GetNextImageInList(image</data>
</node>
<node id="if_129">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">status == MagickFalse</data>
</node>
<node id="if_130">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">utf16 != (wchar_t *</data>
</node>
<node id="if_131">
  <data key="d5">ControlStructure_if</data>
  <data key="d6">void</data>
</node>
<node id="for_132">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">next=image; next != (Image *</data>
</node>
<node id="for_133">
  <data key="d5">ControlStructure_for</data>
  <data key="d6"> ; GetNextImageInList(kid_image</data>
</node>
<node id="for_134">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; labels[i] != (char *</data>
</node>
<node id="for_135">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_136">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_137">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_138">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_139">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_140">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_141">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_142">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_143">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_144">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_145">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_146">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_147">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_148">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_149">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_150">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_151">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_152">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_153">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_154">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_155">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_156">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_157">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_158">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_159">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_160">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_161">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_162">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_163">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">y=0; y &lt; (ssize_t</data>
</node>
<node id="for_164">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">x=0; x &lt; (ssize_t</data>
</node>
<node id="for_165">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="for_166">
  <data key="d5">ControlStructure_for</data>
  <data key="d6">i=0; i &lt; (ssize_t</data>
</node>
<node id="while_167">
  <data key="d5">ControlStructure_while</data>
  <data key="d6">image_info-&gt;adjoin != MagickFalse</data>
</node>
<node id="switch_168">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_169">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_170">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_171">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_172">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_173">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_174">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_175">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_176">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_177">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<node id="switch_178">
  <data key="d5">ControlStructure_switch</data>
  <data key="d6">compression</data>
</node>
<edge source="WritePDFImage" target="pointsize">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="q">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="utf16">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="seconds">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="pixels">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="local_time">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="p">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="XMPProfile">
  <data key="d7">declares</data>
</edge>
<edge source="WritePDFImage" target="GetVirtualMemoryBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="WriteBlobMSBShort">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="RelinquishMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="defined">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="CloseBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetImageProfile">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="InjectImageBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="AcquireQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetPixelIndex">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ThrowWriterException">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ConvertUTF8ToUTF16">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="DestroyString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="floor">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetNextImageInList">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetImageProperty">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="assert">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="DestroyImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="else">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="FormatMagickTime">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="SignatureImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="RelinquishVirtualMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ParseGravityGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetMagickHomeURL">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ThrowMagickException">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetVirtualPixels">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="SetImageProgress">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="FormatLocaleString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ThumbnailImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ParseMetaGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetImageOption">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ConcatenateMagickString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="Huffman2DEncodeImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="Ascii85Flush">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetStringInfoLength">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="PackbitsEncodeImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetStringInfoDatum">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="WriteBlobByte">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ResetMagickMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="CopyMagickString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="AcquireVirtualMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ScaleQuantumToChar">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="TellBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="DisableMSCWarning">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="WriteBlobString">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="OpenBlob">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="Ascii85Encode">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="endif">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetVirtualIndexQueue">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="Ascii85Initialize">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="time">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ResizeQuantumMemory">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="GetPathComponent">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ParseGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="ParseAbsoluteGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="SetGeometry">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="SyncNextImageInList">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="HuffmanEncodeImage">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="EscapeParenthesis">
  <data key="d7">calls</data>
</edge>
<edge source="WritePDFImage" target="if_0">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_1">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_2">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_3">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_4">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_5">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_6">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_7">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_8">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_9">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_10">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_11">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_12">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_13">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_14">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_15">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_16">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_17">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_18">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_19">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_20">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_21">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_22">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_23">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_24">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_25">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_26">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_27">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_28">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_29">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_30">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_31">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_32">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_33">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_34">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_35">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_36">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_37">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_38">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_39">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_40">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_41">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_42">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_43">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_44">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_45">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_46">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_47">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_48">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_49">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_50">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_51">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_52">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_53">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_54">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_55">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_56">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_57">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_58">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_59">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_60">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_61">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_62">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_63">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_64">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_65">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_66">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_67">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_68">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_69">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_70">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_71">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_72">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_73">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_74">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_75">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_76">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_77">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_78">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_79">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_80">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_81">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_82">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_83">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_84">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_85">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_86">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_87">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_88">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_89">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_90">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_91">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_92">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_93">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_94">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_95">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_96">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_97">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_98">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_99">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_100">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_101">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_102">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_103">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_104">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_105">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_106">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_107">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_108">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_109">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_110">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_111">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_112">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_113">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_114">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_115">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_116">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_117">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_118">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_119">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_120">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_121">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_122">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_123">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_124">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_125">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_126">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_127">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_128">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_129">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_130">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="if_131">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_132">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_133">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_134">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_135">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_136">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_137">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_138">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_139">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_140">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_141">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_142">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_143">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_144">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_145">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_146">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_147">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_148">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_149">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_150">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_151">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_152">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_153">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_154">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_155">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_156">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_157">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_158">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_159">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_160">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_161">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_162">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_163">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_164">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_165">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="for_166">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="while_167">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_168">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_169">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_170">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_171">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_172">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_173">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_174">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_175">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_176">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_177">
  <data key="d7">contains</data>
</edge>
<edge source="WritePDFImage" target="switch_178">
  <data key="d7">contains</data>
</edge>
<edge source="pointsize" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="pointsize" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pointsize" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pointsize" target="if_34">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pointsize" target="for_134">
  <data key="d7">used_in_body</data>
</edge>
<edge source="utf16" target="if_130">
  <data key="d7">used_in_body</data>
</edge>
<edge source="utf16" target="RelinquishMagickMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="utf16" target="if_128">
  <data key="d7">used_in_body</data>
</edge>
<edge source="utf16" target="if_129">
  <data key="d7">used_in_body</data>
</edge>
<edge source="utf16" target="while_167">
  <data key="d7">used_in_body</data>
</edge>
<edge source="seconds" target="time">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pixels" target="if_41">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="PackbitsEncodeImage">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pixels" target="AcquireVirtualMemory">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="pixels" target="if_14">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_15">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_42">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_45">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_55">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_56">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_58">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_70">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_89">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_92">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_99">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_101">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_109">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_120">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="if_121">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_170">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_171">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_172">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_174">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_175">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_176">
  <data key="d7">used_in_body</data>
</edge>
<edge source="pixels" target="switch_178">
  <data key="d7">used_in_body</data>
</edge>
<edge source="local_time" target="FormatLocaleString">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="p" target="if_2">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_3">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_5">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_6">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_7">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_8">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_9">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_10">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_14">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_15">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_16">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_17">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_18">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_19">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_20">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_26">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_27">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_30">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_36">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_38">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_39">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_41">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_42">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_43">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_46">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_47">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_48">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_50">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_51">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_53">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_54">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_59">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_60">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_61">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_62">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_64">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_65">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_67">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_68">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_69">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_71">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_72">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_73">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_75">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_76">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_78">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_79">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_81">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_82">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_84">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_87">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_88">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_89">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_90">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_93">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_94">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_95">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_96">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_98">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_102">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_103">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_104">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_105">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_106">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_108">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_109">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_110">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_111">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_112">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_113">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_115">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_117">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_118">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_119">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_120">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_122">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_123">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_124">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_125">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="if_127">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_168">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_169">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_170">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_171">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_172">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_173">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_174">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_175">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_176">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_177">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="p" target="switch_178">
  <data key="d7">used_in_condition</data>
</edge>
<edge source="XMPProfile" target="FormatLocaleString">
  <data key="d7">used_as_parameter</data>
</edge>
<edge source="XMPProfile" target="if_9">
  <data key="d7">used_in_body</data>
</edge>
<edge source="XMPProfile" target="if_10">
  <data key="d7">used_in_body</data>
</edge>
</graph></graphml>