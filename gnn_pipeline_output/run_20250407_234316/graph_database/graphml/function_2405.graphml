<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2015-5589</data>
<data key="d2">10.0</data>
<data key="d3">HIGH</data>
<node id="PHP_METHOD">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="alias">
  <data key="d4">Variable</data>
</node>
<node id="error">
  <data key="d4">Variable</data>
</node>
<node id="contents_len">
  <data key="d4">Variable</data>
</node>
<node id="offset">
  <data key="d4">Variable</data>
</node>
<node id="index">
  <data key="d4">Variable</data>
</node>
<node id="ext">
  <data key="d4">Variable</data>
</node>
<node id="testit">
  <data key="d4">Variable</data>
</node>
<node id="int_key">
  <data key="d4">Variable</data>
</node>
<node id="str">
  <data key="d4">Variable</data>
</node>
<node id="base_len">
  <data key="d4">Variable</data>
</node>
<node id="str_key">
  <data key="d4">Variable</data>
</node>
<node id="l">
  <data key="d4">Variable</data>
</node>
<node id="count">
  <data key="d4">FunctionCall</data>
</node>
<node id="base">
  <data key="d4">Variable</data>
</node>
<node id="basename">
  <data key="d4">Variable</data>
</node>
<node id="type">
  <data key="d4">Variable</data>
</node>
<node id="oldpath">
  <data key="d4">Variable</data>
</node>
<node id="key_type">
  <data key="d4">Variable</data>
</node>
<node id="test">
  <data key="d4">Variable</data>
</node>
<node id="ext_str">
  <data key="d4">Variable</data>
</node>
<node id="oldname">
  <data key="d4">Variable</data>
</node>
<node id="ext_len">
  <data key="d4">Variable</data>
</node>
<node id="fname">
  <data key="d4">Variable</data>
</node>
<node id="flags">
  <data key="d4">Variable</data>
</node>
<node id="pcr_error">
  <data key="d4">Variable</data>
</node>
<node id="p_obj">
  <data key="d4">Variable</data>
</node>
<node id="oldname_len">
  <data key="d4">Variable</data>
</node>
<node id="format">
  <data key="d4">Variable</data>
</node>
<node id="alias_len">
  <data key="d4">Variable</data>
</node>
<node id="dataoffset">
  <data key="d4">Variable</data>
</node>
<node id="stub_len">
  <data key="d4">Variable</data>
</node>
<node id="tmp">
  <data key="d4">Variable</data>
</node>
<node id="index_len">
  <data key="d4">Variable</data>
</node>
<node id="method">
  <data key="d4">Variable</data>
</node>
<node id="newname">
  <data key="d4">Variable</data>
</node>
<node id="pass">
  <data key="d4">Variable</data>
</node>
<node id="b">
  <data key="d4">Variable</data>
</node>
<node id="canWrite">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_unicode_to_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZVAL_STRINGL">
  <data key="d4">FunctionCall</data>
</node>
<node id="arch">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_OBJCE_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_destroy_phar_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_move_forward">
  <data key="d4">FunctionCall</data>
</node>
<node id="estrdup">
  <data key="d4">FunctionCall</data>
</node>
<node id="sapi_send_headers">
  <data key="d4">FunctionCall</data>
</node>
<node id="ZVAL_LONG">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_bailout">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_copy_file_contents">
  <data key="d4">FunctionCall</data>
</node>
<node id="ecalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="memcpy">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_TYPE">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_stream_copy_to_stream">
  <data key="d4">FunctionCall</data>
</node>
<node id="createDefaultStub">
  <data key="d4">FunctionCall</data>
</node>
<node id="RETVAL_BOOL">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_dtor">
  <data key="d4">FunctionCall</data>
</node>
<node id="sapi_getenv">
  <data key="d4">FunctionCall</data>
</node>
<node id="RETURN_LONG">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_set_inode">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_postprocess_ru_web">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_from_zval_no_verify">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_ARCHIVE_OBJECT">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_file_action">
  <data key="d4">FunctionCall</data>
</node>
<node id="array_init">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_spl_foreign_clone">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_convert_to_other">
  <data key="d4">FunctionCall</data>
</node>
<node id="buildFromDirectory">
  <data key="d4">FunctionCall</data>
</node>
<node id="__destruct">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRLEN_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_throw_exception_ex">
  <data key="d4">FunctionCall</data>
</node>
<node id="mapPhar">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_has_more_elements">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRVAL_PP">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_add_virtual_dirs">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_memrchr">
  <data key="d4">FunctionCall</data>
</node>
<node id="INIT_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_current_key">
  <data key="d4">FunctionCall</data>
</node>
<node id="getSupportedCompression">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_ADDREF_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_copy_ctor">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_seek_efp">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRVAL_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_entry_delref">
  <data key="d4">FunctionCall</data>
</node>
<node id="apiVersion">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_STRLEN_PP">
  <data key="d4">FunctionCall</data>
</node>
<node id="spprintf">
  <data key="d4">FunctionCall</data>
</node>
<node id="unlinkArchive">
  <data key="d4">FunctionCall</data>
</node>
<node id="expand_filepath">
  <data key="d4">FunctionCall</data>
</node>
<node id="unlink">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_rename_archive">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_G">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_request_initialize">
  <data key="d4">FunctionCall</data>
</node>
<node id="RETURN_STRINGL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_fopen_tmpfile">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_flush">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_ARRVAL_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_intercept_functions">
  <data key="d4">FunctionCall</data>
</node>
<node id="spl_filesystem_object_get_path">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_tell">
  <data key="d4">FunctionCall</data>
</node>
<node id="emalloc">
  <data key="d4">FunctionCall</data>
</node>
<node id="PHAR_STR">
  <data key="d4">FunctionCall</data>
</node>
<node id="interceptFileFuncs">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_open_wrapper">
  <data key="d4">FunctionCall</data>
</node>
<node id="strstr">
  <data key="d4">FunctionCall</data>
</node>
<node id="add_assoc_string">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_unixify_path_separators">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_build">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stream_close">
  <data key="d4">FunctionCall</data>
</node>
<node id="isFileFormat">
  <data key="d4">FunctionCall</data>
</node>
<node id="sapi_header_op">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_file_type">
  <data key="d4">FunctionCall</data>
</node>
<node id="buildFromIterator">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_create_default_stub">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_archive_delref">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_object_store_get_object">
  <data key="d4">FunctionCall</data>
</node>
<node id="zval_ptr_dtor">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_del">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_current_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_SET_REFCOUNT_P">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_call_method_with_1_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="instanceof_function">
  <data key="d4">FunctionCall</data>
</node>
<node id="__construct">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_destroy">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_get_link_source">
  <data key="d4">FunctionCall</data>
</node>
<node id="isValidPharFilename">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_get_executed_filename">
  <data key="d4">FunctionCall</data>
</node>
<node id="SG">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_LVAL_PP">
  <data key="d4">FunctionCall</data>
</node>
<node id="sizeof">
  <data key="d4">FunctionCall</data>
</node>
<node id="MAKE_STD_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_add">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_do_403">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_hash_update">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_UNILEN">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_spl_foreign_dtor">
  <data key="d4">FunctionCall</data>
</node>
<node id="loadPhar">
  <data key="d4">FunctionCall</data>
</node>
<node id="phar_do_404">
  <data key="d4">FunctionCall</data>
</node>
<node id="INIT_PZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="estrndup">
  <data key="d4">FunctionCall</data>
</node>
<node id="add_next_index_stringl">
  <data key="d4">FunctionCall</data>
</node>
<node id="zend_call_method_with_2_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="getSupportedSignatures">
  <data key="d4">FunctionCall</data>
</node>
<node id="ALLOC_ZVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="php_stat">
  <data key="d4">FunctionCall</data>
</node>
<node id="RETURN_BOOL">
  <data key="d4">FunctionCall</data>
</node>
<node id="efree">
  <data key="d4">FunctionCall</data>
</node>
<node id="mungServer">
  <data key="d4">FunctionCall</data>
</node>
<node id="Z_UNIVAL">
  <data key="d4">FunctionCall</data>
</node>
<node id="strlen">
  <data key="d4">FunctionCall</data>
</node>
<node id="getThis">
  <data key="d4">FunctionCall</data>
</node>
<node id="canCompress">
  <data key="d4">FunctionCall</data>
</node>
<node id="ezfree">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_open_executed_filename(alias, alias_len, &amp;error TSRMLS_CC</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(SG(request_info</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!basename</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(strlen(sapi_module.name</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PG(http_globals</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != zend_hash_find(_server, "SCRIPT_NAME", sizeof("SCRIPT_NAME"</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == zend_hash_find(_server, "PATH_INFO", sizeof("PATH_INFO"</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(pt = strstr(testit, basename</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">path_info</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(pt = strstr(path_info, basename</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">rewrite</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == zend_fcall_info_init(rewrite, &amp;fci, &amp;fcc TSRMLS_CC</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == zend_fcall_info_init(rewrite, 0, &amp;fci, &amp;fcc, NULL, NULL TSRMLS_CC</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == zend_call_function(&amp;fci, &amp;fcc TSRMLS_CC</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!EG(exception</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fci.retval_ptr_ptr || !retval_ptr</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">fci.retval_ptr_ptr != &amp;retval_ptr</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry_len</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!entry_len || (entry_len == 1 &amp;&amp; entry[0] == '/'</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">index_php_len</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry[0] != '/'</data>
</node>
<node id="if_28">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_get_archive(&amp;phar, fname, fname_len, NULL, 0, NULL TSRMLS_CC</data>
</node>
<node id="if_29">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_30">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">not_cgi</data>
</node>
<node id="if_31">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">path_info[strlen(path_info</data>
</node>
<node id="if_32">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">not_cgi</data>
</node>
<node id="if_33">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">free_pathinfo</data>
</node>
<node id="if_34">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_get_archive(&amp;phar, fname, fname_len, NULL, 0, NULL TSRMLS_CC</data>
</node>
<node id="if_35">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">mimeoverride &amp;&amp; zend_hash_num_elements(Z_ARRVAL_P(mimeoverride</data>
</node>
<node id="if_36">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ext</data>
</node>
<node id="if_37">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == zend_hash_find(Z_ARRVAL_P(mimeoverride</data>
</node>
<node id="if_38">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_LVAL_PP(val</data>
</node>
<node id="if_39">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!mime_type</data>
</node>
<node id="if_40">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_41">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!zend_hash_num_elements(Z_ARRVAL_P(mungvalues</data>
</node>
<node id="if_42">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_num_elements(Z_ARRVAL_P(mungvalues</data>
</node>
<node id="if_43">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != zend_hash_get_current_data(Z_ARRVAL_P(mungvalues</data>
</node>
<node id="if_44">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_TYPE_PP(data</data>
</node>
<node id="if_45">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_STRLEN_PP(data</data>
</node>
<node id="if_46">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_STRLEN_PP(data</data>
</node>
<node id="if_47">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!strncmp(Z_STRVAL_PP(data</data>
</node>
<node id="if_48">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!strncmp(Z_STRVAL_PP(data</data>
</node>
<node id="if_49">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_STRLEN_PP(data</data>
</node>
<node id="if_50">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_51">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_52">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_53">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_54">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_55">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_56">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_57">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_58">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_59">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(has_zlib</data>
</node>
<node id="if_60">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(has_bz2</data>
</node>
<node id="if_61">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(has_zlib</data>
</node>
<node id="if_62">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_63">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_64">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar-&gt;is_persistent</data>
</node>
<node id="if_65">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar_data-&gt;is_persistent</data>
</node>
<node id="if_66">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_data</data>
</node>
<node id="if_67">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_68">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_69">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_obj-&gt;arc.archive</data>
</node>
<node id="if_70">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == phar_split_fname(fname, fname_len, &amp;arch, &amp;arch_len, &amp;entry, &amp;entry_len, !is_data, 2 TSRMLS_CC</data>
</node>
<node id="if_71">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_open_or_create_filename(fname, fname_len, alias, alias_len, is_data, REPORT_ERRORS, &amp;phar_data, &amp;error TSRMLS_CC</data>
</node>
<node id="if_72">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">fname == arch &amp;&amp; fname != save_fname</data>
</node>
<node id="if_73">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry</data>
</node>
<node id="if_74">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_75">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_data &amp;&amp; phar_data-&gt;is_tar &amp;&amp; phar_data-&gt;is_brandnew &amp;&amp; format == PHAR_FORMAT_ZIP</data>
</node>
<node id="if_76">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">fname == arch</data>
</node>
<node id="if_77">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(is_data &amp;&amp; !phar_data-&gt;is_data</data>
</node>
<node id="if_78">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_data</data>
</node>
<node id="if_79">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar_data-&gt;is_persistent</data>
</node>
<node id="if_80">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry</data>
</node>
<node id="if_81">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar_data-&gt;is_persistent</data>
</node>
<node id="if_82">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!EG(exception</data>
</node>
<node id="if_83">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_84">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_hash_exists(&amp;module_registry, "openssl", sizeof("openssl"</data>
</node>
<node id="if_85">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_86">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(has_zlib</data>
</node>
<node id="if_87">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(has_bz2</data>
</node>
<node id="if_88">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_89">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fname_len</data>
</node>
<node id="if_90">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_open_from_filename(fname, fname_len, NULL, 0, REPORT_ERRORS, &amp;phar, &amp;error TSRMLS_CC</data>
</node>
<node id="if_91">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_92">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zname_len &gt; 7 &amp;&amp; !memcmp(zname, "phar://", 7</data>
</node>
<node id="if_93">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">arch_len == fname_len &amp;&amp; !memcmp(arch, fname, arch_len</data>
</node>
<node id="if_94">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_persistent</data>
</node>
<node id="if_95">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;refcount</data>
</node>
<node id="if_96">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar_obj-&gt;arc.archive</data>
</node>
<node id="if_97">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_obj-&gt;arc.archive &amp;&amp; phar_obj-&gt;arc.archive-&gt;is_persistent</data>
</node>
<node id="if_98">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EG(exception</data>
</node>
<node id="if_99">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!value</data>
</node>
<node id="if_100">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fp</data>
</node>
<node id="if_101">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">iter-&gt;funcs-&gt;get_current_key</data>
</node>
<node id="if_102">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EG(exception</data>
</node>
<node id="if_103">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_type == HASH_KEY_IS_LONG</data>
</node>
<node id="if_104">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_type &gt; 9</data>
</node>
<node id="if_105">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">str_key[str_key_len - 1] == '\0'</data>
</node>
<node id="if_106">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">instanceof_function(Z_OBJCE_PP(value</data>
</node>
<node id="if_107">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!base_len</data>
</node>
<node id="if_108">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">Z_BVAL(dummy</data>
</node>
<node id="if_109">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">test</data>
</node>
<node id="if_110">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">intern-&gt;file_name_type == IS_UNICODE</data>
</node>
<node id="if_111">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fname</data>
</node>
<node id="if_112">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">base_len</data>
</node>
<node id="if_113">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!temp</data>
</node>
<node id="if_114">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_115">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">strstr(fname, base</data>
</node>
<node id="if_116">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">str_key_len &lt;= 0</data>
</node>
<node id="if_117">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_118">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">*str_key == '/' || *str_key == '\\'</data>
</node>
<node id="if_119">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_120">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">iter-&gt;funcs-&gt;get_current_key</data>
</node>
<node id="if_121">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EG(exception</data>
</node>
<node id="if_122">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_type == HASH_KEY_IS_LONG</data>
</node>
<node id="if_123">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">key_type &gt; 9</data>
</node>
<node id="if_124">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">str_key[str_key_len - 1] == '\0'</data>
</node>
<node id="if_125">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PG(safe_mode</data>
</node>
<node id="if_126">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_127">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_128">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">php_check_open_basedir(fname TSRMLS_CC</data>
</node>
<node id="if_129">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_130">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_131">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!fp</data>
</node>
<node id="if_132">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_133">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_134">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">str_key_len &gt;= sizeof(".phar"</data>
</node>
<node id="if_135">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_136">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_137">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opened</data>
</node>
<node id="if_138">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">close_fp</data>
</node>
<node id="if_139">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(data = phar_get_or_create_entry_data(phar_obj-&gt;arc.archive-&gt;fname, phar_obj-&gt;arc.archive-&gt;fname_len, str_key, str_key_len, "w+b", 0, &amp;error, 1 TSRMLS_CC</data>
</node>
<node id="if_140">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_141">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">opened</data>
</node>
<node id="if_142">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_143">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">close_fp</data>
</node>
<node id="if_144">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_145">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">data-&gt;internal_file-&gt;fp_type == PHAR_MOD</data>
</node>
<node id="if_146">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">close_fp</data>
</node>
<node id="if_147">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">save</data>
</node>
<node id="if_148">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">temp</data>
</node>
<node id="if_149">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(readonly</data>
</node>
<node id="if_150">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_151">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != object_init_ex(iter, spl_ce_RecursiveDirectoryIterator</data>
</node>
<node id="if_152">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EG(exception</data>
</node>
<node id="if_153">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != object_init_ex(iteriter, spl_ce_RecursiveIteratorIterator</data>
</node>
<node id="if_154">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">EG(exception</data>
</node>
<node id="if_155">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">regex_len &gt; 0</data>
</node>
<node id="if_156">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != object_init_ex(regexiter, spl_ce_RegexIterator</data>
</node>
<node id="if_157">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pass.fp == NULL</data>
</node>
<node id="if_158">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_obj-&gt;arc.archive-&gt;is_persistent &amp;&amp; FAILURE == phar_copy_on_write(&amp;(phar_obj-&gt;arc.archive</data>
</node>
<node id="if_159">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">apply_reg</data>
</node>
<node id="if_160">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == spl_iterator_apply((apply_reg ? regexiter : iteriter</data>
</node>
<node id="if_161">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">apply_reg</data>
</node>
<node id="if_162">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_163">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">apply_reg</data>
</node>
<node id="if_164">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(readonly</data>
</node>
<node id="if_165">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_166">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_obj-&gt;arc.archive-&gt;is_persistent &amp;&amp; FAILURE == phar_copy_on_write(&amp;(phar_obj-&gt;arc.archive</data>
</node>
<node id="if_167">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">pass.fp == NULL</data>
</node>
<node id="if_168">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == spl_iterator_apply(obj, (spl_iterator_apply_func_t</data>
</node>
<node id="if_169">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_170">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters_none(</data>
</node>
<node id="if_171">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">zend_parse_parameters(ZEND_NUM_ARGS(</data>
</node>
<node id="if_172">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_open_entry_fp(entry, &amp;error, 1 TSRMLS_CC</data>
</node>
<node id="if_173">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_174">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!link</data>
</node>
<node id="if_175">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != phar_stream_copy_to_stream(phar_get_efp(link, 0 TSRMLS_CC</data>
</node>
<node id="if_176">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">entry-&gt;fp_type == PHAR_MOD</data>
</node>
<node id="if_177">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!ext</data>
</node>
<node id="if_178">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_zip</data>
</node>
<node id="if_179">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_180">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_tar</data>
</node>
<node id="if_181">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_182">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_183">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_184">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar_path_check(&amp;ext, &amp;ext_len, &amp;pcr_error</data>
</node>
<node id="if_185">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_186">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">ext[0] == '.'</data>
</node>
<node id="if_187">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">PHAR_G(manifest_cached</data>
</node>
<node id="if_188">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == zend_hash_find(&amp;(PHAR_GLOBALS-&gt;phar_fname_map</data>
</node>
<node id="if_189">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(*pphar</data>
</node>
<node id="if_190">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!zend_hash_num_elements(&amp;phar-&gt;manifest</data>
</node>
<node id="if_191">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS == php_stream_stat_path(newpath, &amp;ssb</data>
</node>
<node id="if_192">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!phar-&gt;is_data</data>
</node>
<node id="if_193">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != phar_detect_phar_fname_ext(newpath, phar-&gt;fname_len, (const char **</data>
</node>
<node id="if_194">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;alias</data>
</node>
<node id="if_195">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_temporary_alias</data>
</node>
<node id="if_196">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != phar_detect_phar_fname_ext(newpath, phar-&gt;fname_len, (const char **</data>
</node>
<node id="if_197">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(!pphar || phar == *pphar</data>
</node>
<node id="if_198">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">error</data>
</node>
<node id="if_199">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;is_data</data>
</node>
<node id="if_200">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">SUCCESS != object_init_ex(ret, ce</data>
</node>
<node id="if_201">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">phar-&gt;fp == NULL</data>
</node>
<node id="if_202">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">source-&gt;metadata</data>
</node>
<node id="if_203">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == zend_hash_get_current_data(&amp;source-&gt;manifest, (void **</data>
</node>
<node id="if_204">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">newentry.link</data>
</node>
<node id="if_205">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">newentry.tmp</data>
</node>
<node id="if_206">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">FAILURE == phar_copy_file_contents(&amp;newentry, phar-&gt;fp TSRMLS_CC</data>
</node>
<node id="if_207">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">newentry.metadata</data>
</node>
<node id="if_208">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">newentry.is_tar</data>
</node>
<node id="if_209">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(ret = phar_rename_archive(phar, ext, 0 TSRMLS_CC</data>
</node>
<node id="for_210">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">zend_hash_internal_pointer_reset(Z_ARRVAL_P(mungvalues</data>
</node>
<node id="for_211">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">zend_hash_internal_pointer_reset(&amp;source-&gt;manifest</data>
</node>
<node id="switch_212">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">Z_TYPE_P(retval_ptr</data>
</node>
<node id="switch_213">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">Z_TYPE_PP(val</data>
</node>
<node id="switch_214">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">method</data>
</node>
<node id="switch_215">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">Z_TYPE_PP(value</data>
</node>
<node id="switch_216">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">intern-&gt;type</data>
</node>
<node id="switch_217">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">type</data>
</node>
<node id="switch_218">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">phar-&gt;flags</data>
</node>
<node id="switch_219">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">phar-&gt;flags</data>
</node>
<node id="switch_220">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">convert</data>
</node>
<edge source="PHP_METHOD" target="alias">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="error">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="contents_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="offset">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="index">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="ext">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="testit">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="int_key">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="str">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="base_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="str_key">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="l">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="count">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="base">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="basename">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="type">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="oldpath">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="key_type">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="test">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="ext_str">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="oldname">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="ext_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="fname">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="flags">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="pcr_error">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="p_obj">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="oldname_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="format">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="alias_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="dataoffset">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="stub_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="tmp">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="index_len">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="method">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="newname">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="pass">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="b">
  <data key="d6">declares</data>
</edge>
<edge source="PHP_METHOD" target="canWrite">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zval_unicode_to_string">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="ZVAL_STRINGL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="arch">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_OBJCE_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_destroy_phar_data">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_move_forward">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="estrdup">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="sapi_send_headers">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="ZVAL_LONG">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_bailout">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_copy_file_contents">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="ecalloc">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_init">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="memcpy">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_TYPE">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_stream_copy_to_stream">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="createDefaultStub">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="RETVAL_BOOL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zval_dtor">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="sapi_getenv">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="RETURN_LONG">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_set_inode">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_postprocess_ru_web">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stream_from_zval_no_verify">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="PHAR_ARCHIVE_OBJECT">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_file_action">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="array_init">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_spl_foreign_clone">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_convert_to_other">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="buildFromDirectory">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="__destruct">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_STRLEN_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_throw_exception_ex">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="mapPhar">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_has_more_elements">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_STRVAL_PP">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_add_virtual_dirs">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_memrchr">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="INIT_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="get_current_key">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="getSupportedCompression">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_ADDREF_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zval_copy_ctor">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_seek_efp">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_STRVAL_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_entry_delref">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="apiVersion">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_STRLEN_PP">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="spprintf">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="unlinkArchive">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="expand_filepath">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="unlink">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_rename_archive">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="PHAR_G">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_request_initialize">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="RETURN_STRINGL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stream_fopen_tmpfile">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_flush">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_ARRVAL_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_intercept_functions">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="spl_filesystem_object_get_path">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stream_tell">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="emalloc">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="PHAR_STR">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="interceptFileFuncs">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stream_open_wrapper">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="strstr">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="add_assoc_string">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_unixify_path_separators">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_build">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stream_close">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="isFileFormat">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="sapi_header_op">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_file_type">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="buildFromIterator">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_create_default_stub">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_archive_delref">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_object_store_get_object">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zval_ptr_dtor">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_del">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="get_current_data">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_SET_REFCOUNT_P">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_call_method_with_1_params">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="instanceof_function">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="__construct">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_destroy">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_get_link_source">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="isValidPharFilename">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_get_executed_filename">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="SG">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_LVAL_PP">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="sizeof">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="MAKE_STD_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_add">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_do_403">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_hash_update">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_UNILEN">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_spl_foreign_dtor">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="loadPhar">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="phar_do_404">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="INIT_PZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="estrndup">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="add_next_index_stringl">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="zend_call_method_with_2_params">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="getSupportedSignatures">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="ALLOC_ZVAL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="php_stat">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="RETURN_BOOL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="efree">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="mungServer">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="Z_UNIVAL">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="strlen">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="getThis">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="canCompress">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="ezfree">
  <data key="d6">calls</data>
</edge>
<edge source="PHP_METHOD" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_28">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_29">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_30">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_31">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_32">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_33">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_34">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_35">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_36">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_37">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_38">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_39">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_40">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_41">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_42">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_43">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_44">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_45">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_46">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_47">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_48">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_49">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_50">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_51">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_52">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_53">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_54">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_55">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_56">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_57">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_58">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_59">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_60">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_61">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_62">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_63">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_64">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_65">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_66">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_67">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_68">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_69">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_70">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_71">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_72">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_73">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_74">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_75">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_76">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_77">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_78">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_79">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_80">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_81">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_82">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_83">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_84">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_85">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_86">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_87">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_88">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_89">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_90">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_91">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_92">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_93">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_94">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_95">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_96">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_97">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_98">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_99">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_100">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_101">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_102">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_103">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_104">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_105">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_106">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_107">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_108">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_109">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_110">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_111">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_112">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_113">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_114">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_115">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_116">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_117">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_118">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_119">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_120">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_121">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_122">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_123">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_124">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_125">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_126">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_127">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_128">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_129">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_130">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_131">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_132">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_133">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_134">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_135">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_136">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_137">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_138">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_139">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_140">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_141">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_142">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_143">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_144">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_145">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_146">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_147">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_148">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_149">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_150">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_151">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_152">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_153">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_154">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_155">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_156">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_157">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_158">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_159">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_160">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_161">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_162">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_163">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_164">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_165">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_166">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_167">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_168">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_169">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_170">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_171">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_172">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_173">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_174">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_175">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_176">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_177">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_178">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_179">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_180">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_181">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_182">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_183">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_184">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_185">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_186">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_187">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_188">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_189">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_190">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_191">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_192">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_193">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_194">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_195">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_196">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_197">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_198">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_199">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_200">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_201">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_202">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_203">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_204">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_205">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_206">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_207">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_208">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="if_209">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="for_210">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="for_211">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_212">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_213">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_214">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_215">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_216">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_217">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_218">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_219">
  <data key="d6">contains</data>
</edge>
<edge source="PHP_METHOD" target="switch_220">
  <data key="d6">contains</data>
</edge>
<edge source="alias" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias" target="if_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias" target="if_194">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_195">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="mapPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="PHAR_G">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="__construct">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="zend_hash_update">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="loadPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_2">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_52">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_54">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_56">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_74">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_90">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_91">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_139">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_144">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_162">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_169">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_172">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_173">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_184">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="error" target="if_198">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="phar_flush">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="phar_create_default_stub">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="error" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_13">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_14">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_17">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_19">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_160">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_168">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="if_176">
  <data key="d6">used_in_body</data>
</edge>
<edge source="error" target="switch_212">
  <data key="d6">used_in_body</data>
</edge>
<edge source="contents_len" target="phar_stream_copy_to_stream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="offset" target="mapPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="index" target="createDefaultStub">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="phar_create_default_stub">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="index" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="index" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_177">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_184">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_186">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_196">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_209">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ext" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext" target="phar_convert_to_other">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext" target="phar_rename_archive">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_178">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_179">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_181">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_182">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_183">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_185">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="switch_218">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext" target="switch_219">
  <data key="d6">used_in_body</data>
</edge>
<edge source="testit" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
<edge source="testit" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="testit" target="strstr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="testit" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="testit" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="testit" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="testit" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int_key" target="get_current_key">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="int_key" target="if_101">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int_key" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="int_key" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_47">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_48">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_105">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_116">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_118">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_124">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_134">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_139">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_175">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="if_191">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str" target="PHP_METHOD">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="phar_copy_file_contents">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="createDefaultStub">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="buildFromDirectory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="mapPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="get_current_key">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="unlinkArchive">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="PHAR_STR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="add_assoc_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="buildFromIterator">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="zend_call_method_with_1_params">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="__construct">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="isValidPharFilename">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="sizeof">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="loadPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="zend_call_method_with_2_params">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="if_107">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base_len" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base_len" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_105">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str_key" target="if_116">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str_key" target="if_118">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_124">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str_key" target="if_134">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="str_key" target="if_139">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str_key" target="get_current_key">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str_key" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str_key" target="PHAR_STR">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str_key" target="add_assoc_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="str_key" target="if_101">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_104">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="if_123">
  <data key="d6">used_in_body</data>
</edge>
<edge source="str_key" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="l" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_5">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_13">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_16">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_24">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_25">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_26">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_28">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_31">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_34">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_35">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_38">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_41">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_42">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_43">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_70">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_84">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_86">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_90">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_92">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_93">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_99">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_105">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_106">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_107">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_110">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_112">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_116">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_124">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_134">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_138">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_139">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_143">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_145">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_146">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_149">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_151">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_153">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_155">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_156">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_159">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_160">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_161">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_163">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_164">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_168">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_174">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_175">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_184">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_190">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_193">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_194">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_195">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_196">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_204">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="if_206">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="for_210">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="for_211">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="switch_212">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="switch_213">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="switch_215">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="switch_218">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="l" target="switch_219">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="count" target="if_95">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="count" target="PHP_METHOD">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="if_107">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="if_128">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="base" target="arch">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="buildFromDirectory">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="expand_filepath">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="strstr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="buildFromIterator">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="base" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="base" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="basename" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="basename" target="arch">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="basename" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="basename" target="strstr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="basename" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="basename" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="basename" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="basename" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_39">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_103">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_104">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_110">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_122">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_123">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_145">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="if_176">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="switch_216">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="switch_217">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="type" target="phar_file_action">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="PHAR_G">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="phar_file_type">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="type" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="switch_213">
  <data key="d6">used_in_body</data>
</edge>
<edge source="type" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldpath" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldpath" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldpath" target="if_187">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_188">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_189">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_190">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_191">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_196">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_197">
  <data key="d6">used_in_body</data>
</edge>
<edge source="oldpath" target="if_198">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key_type" target="if_103">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="key_type" target="if_104">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="key_type" target="if_122">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="key_type" target="if_123">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="key_type" target="if_101">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key_type" target="if_120">
  <data key="d6">used_in_body</data>
</edge>
<edge source="key_type" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="test" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="test" target="if_109">
  <data key="d6">used_in_body</data>
</edge>
<edge source="test" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="test" target="strstr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="test" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="test" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="test" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="test" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="test" target="switch_216">
  <data key="d6">used_in_body</data>
</edge>
<edge source="ext_str" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldname" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldname" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext_len" target="if_184">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="ext_len" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="ext_len" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_34">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_70">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_71">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_72">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_76">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_89">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fname" target="if_90">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_93">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_111">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fname" target="if_115">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_128">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_139">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="fname" target="if_188">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_193">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_196">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="ZVAL_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="phar_postprocess_ru_web">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="phar_file_action">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="zend_memrchr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="expand_filepath">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="unlink">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="php_stream_open_wrapper">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="strstr">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="phar_unixify_path_separators">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="__construct">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="zend_hash_update">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="phar_do_404">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="php_stat">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="strlen">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="fname" target="if_4">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_5">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_24">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_35">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_36">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_37">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_80">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_91">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_92">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_94">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_95">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_106">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_108">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_109">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_110">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_112">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_125">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_131">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_151">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_153">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_155">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_156">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_157">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_158">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_166">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_167">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_172">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_173">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_175">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_184">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_185">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_187">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_197">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_200">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="if_203">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="for_211">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="switch_213">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="switch_215">
  <data key="d6">used_in_body</data>
</edge>
<edge source="fname" target="switch_216">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="switch_218">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="flags" target="switch_219">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="flags" target="ZVAL_LONG">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="phar_convert_to_other">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="__construct">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="flags" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_177">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_180">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_188">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_189">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="if_190">
  <data key="d6">used_in_body</data>
</edge>
<edge source="flags" target="for_211">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pcr_error" target="if_184">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="p_obj" target="phar_stream_copy_to_stream">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="p_obj" target="php_stream_tell">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="p_obj" target="add_assoc_string">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="oldname_len" target="estrndup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="if_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="format" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="isFileFormat">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="__construct">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="format" target="switch_217">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="if_71">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="alias_len" target="RETVAL_BOOL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="alias_len" target="if_66">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_192">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_194">
  <data key="d6">used_in_body</data>
</edge>
<edge source="alias_len" target="if_195">
  <data key="d6">used_in_body</data>
</edge>
<edge source="dataoffset" target="mapPhar">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stub_len" target="RETURN_STRINGL">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="stub_len" target="phar_create_default_stub">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tmp" target="if_205">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tmp" target="estrdup">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="tmp" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tmp" target="if_25">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tmp" target="if_30">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tmp" target="if_32">
  <data key="d6">used_in_body</data>
</edge>
<edge source="tmp" target="for_211">
  <data key="d6">used_in_body</data>
</edge>
<edge source="method" target="switch_214">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="method" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="method" target="canCompress">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="method" target="if_96">
  <data key="d6">used_in_body</data>
</edge>
<edge source="newname" target="spprintf">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="newname" target="efree">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pass" target="if_157">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pass" target="if_167">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="pass" target="zend_throw_exception_ex">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pass" target="php_stream_close">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="pass" target="if_158">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pass" target="if_160">
  <data key="d6">used_in_body</data>
</edge>
<edge source="pass" target="if_168">
  <data key="d6">used_in_body</data>
</edge>
<edge source="b" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_6">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_11">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_59">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_60">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_61">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_69">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_75">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_86">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_87">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_96">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_97">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_107">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_112">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_115">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_128">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_139">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_151">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_153">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_156">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_158">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_166">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_168">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_191">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="b" target="if_200">
  <data key="d6">used_in_condition</data>
</edge>
</graph></graphml>