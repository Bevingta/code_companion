<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="type" attr.type="string"/>
<key id="d5" for="node" attr.name="condition" attr.type="string"/>
<key id="d4" for="node" attr.name="type" attr.type="string"/>
<key id="d3" for="graph" attr.name="severity" attr.type="string"/>
<key id="d2" for="graph" attr.name="cvss" attr.type="string"/>
<key id="d1" for="graph" attr.name="cve" attr.type="string"/>
<key id="d0" for="graph" attr.name="pointer_arithmetic" attr.type="boolean"/>
<graph edgedefault="directed"><data key="d0">True</data>
<data key="d1">CVE-2017-13673</data>
<data key="d2">4.0</data>
<data key="d3">MEDIUM</data>
<node id="vga_draw_graphic">
  <data key="d4">FunctionDefinition</data>
</node>
<node id="full_update">
  <data key="d4">Variable</data>
</node>
<node id="d">
  <data key="d4">Variable</data>
</node>
<node id="shift">
  <data key="d4">Variable</data>
</node>
<node id="format">
  <data key="d4">Variable</data>
</node>
<node id="memory_region_snapshot_and_clear_dirty">
  <data key="d4">FunctionCall</data>
</node>
<node id="qemu_console_resize">
  <data key="d4">FunctionCall</data>
</node>
<node id="update_palette16">
  <data key="d4">FunctionCall</data>
</node>
<node id="cursor">
  <data key="d4">FunctionCall</data>
</node>
<node id="memory_region_snapshot_get_dirty">
  <data key="d4">FunctionCall</data>
</node>
<node id="qemu_create_displaysurface_from">
  <data key="d4">FunctionCall</data>
</node>
<node id="vga_draw_line">
  <data key="d4">FunctionCall</data>
</node>
<node id="printf">
  <data key="d4">FunctionCall</data>
</node>
<node id="memset">
  <data key="d4">FunctionCall</data>
</node>
<node id="update_basic_params">
  <data key="d4">FunctionCall</data>
</node>
<node id="dpy_gfx_update">
  <data key="d4">FunctionCall</data>
</node>
<node id="dpy_gfx_check_format">
  <data key="d4">FunctionCall</data>
</node>
<node id="vga_sync_dirty_bitmap">
  <data key="d4">FunctionCall</data>
</node>
<node id="surface_stride">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_bpp">
  <data key="d4">FunctionCall</data>
</node>
<node id="get_resolution">
  <data key="d4">FunctionCall</data>
</node>
<node id="g_free">
  <data key="d4">FunctionCall</data>
</node>
<node id="update_palette256">
  <data key="d4">FunctionCall</data>
</node>
<node id="surface_data">
  <data key="d4">FunctionCall</data>
</node>
<node id="qemu_console_surface">
  <data key="d4">FunctionCall</data>
</node>
<node id="qemu_default_pixman_format">
  <data key="d4">FunctionCall</data>
</node>
<node id="cursor_invalidate">
  <data key="d4">FunctionCall</data>
</node>
<node id="dpy_gfx_replace_surface">
  <data key="d4">FunctionCall</data>
</node>
<node id="if_0">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control != 1</data>
</node>
<node id="if_1">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control != s-&gt;shift_control ||
        double_scan != s-&gt;double_scan</data>
</node>
<node id="if_2">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control == 0</data>
</node>
<node id="if_3">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sr(s, VGA_SEQ_CLOCK_MODE</data>
</node>
<node id="if_4">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control == 1</data>
</node>
<node id="if_5">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sr(s, VGA_SEQ_CLOCK_MODE</data>
</node>
<node id="if_6">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">format</data>
</node>
<node id="if_7">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;line_offset != s-&gt;last_line_offset ||
        disp_width != s-&gt;last_width ||
        height != s-&gt;last_height ||
        s-&gt;last_depth != depth ||
        s-&gt;last_byteswap != byteswap ||
        share_surface != is_buffer_shared(surface</data>
</node>
<node id="if_8">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">share_surface</data>
</node>
<node id="if_9">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">is_buffer_shared(surface</data>
</node>
<node id="if_10">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control == 0</data>
</node>
<node id="if_11">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sr(s, VGA_SEQ_CLOCK_MODE</data>
</node>
<node id="if_12">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">shift_control == 1</data>
</node>
<node id="if_13">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">sr(s, VGA_SEQ_CLOCK_MODE</data>
</node>
<node id="if_14">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!is_buffer_shared(surface</data>
</node>
<node id="if_15">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!full_update</data>
</node>
<node id="if_16">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(s-&gt;cr[VGA_CRTC_MODE] &amp; 1</data>
</node>
<node id="if_17">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(s-&gt;cr[VGA_CRTC_MODE] &amp; 2</data>
</node>
<node id="if_18">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">full_update</data>
</node>
<node id="if_19">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">update</data>
</node>
<node id="if_20">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y_start &lt; 0</data>
</node>
<node id="if_21">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!(is_buffer_shared(surface</data>
</node>
<node id="if_22">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">s-&gt;cursor_draw_line</data>
</node>
<node id="if_23">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y_start &gt;= 0</data>
</node>
<node id="if_24">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">!multi_run</data>
</node>
<node id="if_25">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">(y1 &amp; mask</data>
</node>
<node id="if_26">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y == s-&gt;line_compare</data>
</node>
<node id="if_27">
  <data key="d4">ControlStructure_if</data>
  <data key="d5">y_start &gt;= 0</data>
</node>
<node id="for_28">
  <data key="d4">ControlStructure_for</data>
  <data key="d5">y = 0; y &lt; height; y++</data>
</node>
<node id="switch_29">
  <data key="d4">ControlStructure_switch</data>
  <data key="d5">s-&gt;get_bpp(s</data>
</node>
<edge source="vga_draw_graphic" target="full_update">
  <data key="d6">declares</data>
</edge>
<edge source="vga_draw_graphic" target="d">
  <data key="d6">declares</data>
</edge>
<edge source="vga_draw_graphic" target="shift">
  <data key="d6">declares</data>
</edge>
<edge source="vga_draw_graphic" target="format">
  <data key="d6">declares</data>
</edge>
<edge source="vga_draw_graphic" target="memory_region_snapshot_and_clear_dirty">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="qemu_console_resize">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="update_palette16">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="cursor">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="memory_region_snapshot_get_dirty">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="qemu_create_displaysurface_from">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="vga_draw_line">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="printf">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="memset">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="update_basic_params">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="dpy_gfx_update">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="dpy_gfx_check_format">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="vga_sync_dirty_bitmap">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="surface_stride">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="get_bpp">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="get_resolution">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="g_free">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="update_palette256">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="surface_data">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="qemu_console_surface">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="qemu_default_pixman_format">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="cursor_invalidate">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="dpy_gfx_replace_surface">
  <data key="d6">calls</data>
</edge>
<edge source="vga_draw_graphic" target="if_0">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_1">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_2">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_3">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_4">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_5">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_6">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_7">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_8">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_9">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_10">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_11">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_12">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_13">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_14">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_15">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_16">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_17">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_18">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_19">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_20">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_21">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_22">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_23">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_24">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_25">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_26">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="if_27">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="for_28">
  <data key="d6">contains</data>
</edge>
<edge source="vga_draw_graphic" target="switch_29">
  <data key="d6">contains</data>
</edge>
<edge source="full_update" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="full_update" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="full_update" target="vga_draw_graphic">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="full_update" target="if_1">
  <data key="d6">used_in_body</data>
</edge>
<edge source="full_update" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="full_update" target="if_10">
  <data key="d6">used_in_body</data>
</edge>
<edge source="full_update" target="if_12">
  <data key="d6">used_in_body</data>
</edge>
<edge source="full_update" target="for_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="full_update" target="switch_29">
  <data key="d6">used_in_body</data>
</edge>
<edge source="d" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_7">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_9">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_14">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_15">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_18">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_19">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_21">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="d" target="if_22">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_0">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_1">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_2">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_4">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_10">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_12">
  <data key="d6">used_in_condition</data>
</edge>
<edge source="shift" target="if_16">
  <data key="d6">used_in_body</data>
</edge>
<edge source="shift" target="for_28">
  <data key="d6">used_in_body</data>
</edge>
<edge source="format" target="if_6">
  <data key="d6">used_in_body</data>
</edge>
<edge source="format" target="qemu_create_displaysurface_from">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="dpy_gfx_check_format">
  <data key="d6">used_as_parameter</data>
</edge>
<edge source="format" target="if_7">
  <data key="d6">used_in_body</data>
</edge>
<edge source="format" target="if_8">
  <data key="d6">used_in_body</data>
</edge>
<edge source="format" target="if_9">
  <data key="d6">used_in_body</data>
</edge>
</graph></graphml>